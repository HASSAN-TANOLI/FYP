{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","constants/cartConstants.js","actions/cartActions.js","constants/vendorConstants.js","actions/vendorActions.js","components/layout/Search.js","components/layout/Header.js","components/layout/Footer.js","components/layout/MetaData.js","components/product/Product.js","components/layout/Loader.js","constants/productConstant.js","actions/productActions.js","components/Home.js","components/review/ListReviews.js","components/product/ProductDetails.js","components/user/Login.js","components/user/Register.js","components/user/Profile.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/vendor/VendorLogin.js","components/vendor/RegisterVendor.js","components/vendor/VendorProfile.js","components/vendor/UpdateVendorProfile.js","components/route/ProtectedRoute.js","components/route/ProtectedRoutes.js","components/pcbuild/PcBuildd.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/ProductList.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/vendorReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/Shipping.js","components/cart/ConfirmOrder.js","actions/orderActions.js","components/cart/Payment.js","components/cart/orderSuccess.js","components/order/ListOrders.js","components/order/orderDetails.js","components/admin/OrdersList.js","App.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_RESET","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","CLEAR_ERRORS","loadUser","dispatch","a","type","axios","get","data","payload","user","response","message","clearErrors","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","RESET_CART","addItemToCart","id","quantity","getState","product","_id","name","price","image","images","url","stock","localStorage","setItem","JSON","stringify","cart","cartItems","LOGIN_VENDOR_REQUEST","LOGIN_VENDOR_SUCCESS","LOGIN_VENDOR_FAIL","REGISTER_VENDOR_REQUEST","REGISTER_VENDOR_SUCCESS","REGISTER_VENDOR_FAIL","LOAD_VENDOR_REQUEST","LOAD_VENDOR_SUCCESS","LOAD_VENDOR_FAIL","UPDATE_VENDOR_PROFILE_REQUEST","UPDATE_VENDOR_PROFILE_SUCCESS","UPDATE_VENDOR_PROFILE_FAIL","UPDATE_VENDOR_PROFILE_RESET","LOGOUT_VENDOR_SUCCESS","LOGOUT_VENDOR_FAIL","ALL_VENDORS_REQUEST","ALL_VENDORS_SUCCESS","ALL_VENDORS_FAIL","loadVendor","vendor","Search","history","useState","keyword","setKeyword","onSubmit","e","preventDefault","trim","push","className","placeholder","onChange","target","value","Header","alert","useAlert","useDispatch","useSelector","state","auth","loading","loadingg","logoutHandler","removeItem","success","to","src","render","style","textDecoration","length","avatar","alt","onClick","vendorname","role","Footer","MetaData","title","Helmet","col","numOfReviews","Loader","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","NEW_PRODUCT_RESET","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_RESET","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_RESET","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","SELECT_ALL_PRODUCT_REQUEST","SELECT_ALL_PRODUCT_SUCCESS","SELECT_ALL_PRODUCT_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","getProductDetails","getAdminProducts","products","Range","createSliderWithTooltip","Slider","Home","match","currentPage","setCurrentPage","setPrice","category","setCategory","error","productsCount","resPerPage","filteredProductCount","allVendors","vendors","params","useEffect","link","getProducts","count","class","marks","min","max","defaultValue","tipFormatter","tipProps","placement","visible","map","cursor","listStyleType","Product","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","ListReviews","reviews","review","width","rating","comment","ProductDetails","setQuantity","setRating","setComment","productDetails","newReview","reviewError","Carousel","pause","Item","public_id","document","querySelector","valueAsNumber","qty","readOnly","description","stars","querySelectorAll","showRatings","forEach","star","index","starValue","classList","add","remove","addEventListener","tabIndex","reviewData","formData","FormData","set","config","headers","put","Login","location","email","setEmail","password","setPassword","isAuthenticatedUser","redirect","search","split","post","login","htmlFor","iv","Register","setUser","setAvatar","avatarPreview","setAvatarPreview","reader","FileReader","onload","readyState","result","readAsDataURL","files","userData","encType","accept","disabled","Profile","String","createdAt","substring","UpdateProfile","setName","isUpdated","UpdatePassword","oldPassword","setOldPassword","passwords","for","ForgotPassword","forgotPassword","NewPassword","confirmPassword","setConfirmPassword","token","VendorLogin","vendoremail","setVendorEmail","isAuthenticatedVendor","window","replace","vendorLoginn","RegisterVendor","shopname","shopaddress","vendorcontactno","shopcontactno","setVendor","VendorProfile","UpdateVendorProfile","setVendorName","setShopName","setShopAddress","setVendorContactNo","setShopContactNo","vendorr","console","log","vendorData","ProtectedRoute","isAdmin","Component","component","rest","props","ProtectedRoutes","PcBuildd","allProducts","vendorProducts","setVendorProducts","total","setTotal","selectedVendor","setSelectedVendor","cpus","setCpus","gpus","setGpus","motherBoards","setMotherBoards","rams","setRams","storages","setStorages","powerSupplys","setPowerSupplys","cases","setCases","monitors","setMonitors","build","setBuild","resetProducts","_products","filter","p","userId","_cpus","toLowerCase","_gpus","_motherBoards","_rams","_storages","_powerSupplys","_cases","_monitors","Object","keys","key","selected","scope","cpu","parse","graphiccards","Sidebar","position","href","Dashboard","outOfStock","ProductsList","deleteError","isDeleted","deleteProductHandler","delete","deleteProduct","columns","label","field","sort","rows","actions","setProducts","bordered","striped","hover","NewProduct","setUserId","setDescription","setStock","setImages","imagesPreview","setImagesPreview","newProduct","productData","append","Array","from","file","oldArray","multiple","img","height","UpdateProduct","seller","setSeller","oldImages","setOldImages","updateError","productId","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","reducer","combineReducers","action","erroe","isAuthenticated","idUpdated","isupdated","shippingInfo","item","isItemExist","find","i","newOrder","order","myOrders","orders","orderDetails","allOrders","totalAmount","initialState","getItem","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Cart","removeCartItemHandler","removeItemFromCart","newQty","decreaseQty","increaseQty","reduce","acc","Number","toFixed","CheckoutSteps","shipping","confirmOrder","payment","Shipping","countriesList","values","countries","address","setAddress","city","setCity","postalCode","setPostalCode","phoneNo","setPhoneNo","country","setCountry","required","ConfirmOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","sessionStorage","createOrder","options","base","fontSize","invalid","color","Payment","stripe","useStripe","elements","useElements","orderItems","orderInfo","paymentData","amount","Math","round","submitHandler","res","clientsecret","client_secret","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","paymentIntent","status","paymentInfo","OrderSuccess","ListOrders","numOfItems","orderStatus","includes","setOrders","OrderDetails","shippingDetails","isPaid","OrdersList","numofItems","App","stripeApiKey","setStripeApiKey","req","getStripeApiKey","path","exact","orderSuccess","loadStripe","timeout","positions","BOTTOM_CENTER","transition","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"iSAAaA,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAa,aAEbC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iBAEjBC,EAAiB,iBACjBC,EAAc,cAEdC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAwB,wBACxBC,EAAuB,uBAEvBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAIpBC,EAAe,eCgDfC,EAAW,yDAAM,WAAOC,GAAP,iBAAAC,EAAA,sEAE1BD,EAAS,CAAEE,KAAMvB,IAFS,SAIHwB,IAAMC,IAAI,gBAJP,gBAIlBC,EAJkB,EAIlBA,KAERL,EAAS,CACPE,KAAMtB,EACN0B,QAASD,EAAKE,OARU,gDAW1BP,EAAS,CACPE,KAAMrB,EACNyB,QAAS,KAAME,SAASH,KAAKI,UAbL,yDAAN,uDAsJXC,EAAc,SAACV,GAE1BA,EAAS,CACPE,KAAMJ,KC5OGa,EAAc,cACdC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAa,YCKbC,EAAgB,SAACC,EAAIC,GAAL,8CAAkB,WAAOjB,EAAUkB,GAAjB,iBAAAjB,EAAA,sEAGtBE,IAAMC,IAAN,0BAA6BY,IAHP,gBAGrCX,EAHqC,EAGrCA,KAERL,EAAS,CACPE,KAAMS,EACNL,QAAS,CACPa,QAASd,EAAKc,QAAQC,IACtBC,KAAMhB,EAAKc,QAAQE,KACnBC,MAAOjB,EAAKc,QAAQG,MACpBC,MAAOlB,EAAKc,QAAQK,OAAO,GAAGC,IAC9BC,MAAOrB,EAAKc,QAAQO,MACpBT,cAMJU,aAAaC,QAAQ,YAAaC,KAAKC,UAAUZ,IAAWa,KAAKC,YAnBpB,2CAAlB,yDCRhBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAuB,uBAEvBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAgC,gCAChCC,GAAgC,gCAChCC,GAA6B,6BAC7BC,GAA8B,8BAE9BC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBpD,GAAe,eC4DfqD,GAAa,yDAAM,WAAOnD,GAAP,iBAAAC,EAAA,sEAE5BD,EAAS,CAAEE,KAAMqC,KAFW,SAILpC,IAAMC,IAAI,kBAJL,gBAIpBC,EAJoB,EAIpBA,KAERL,EAAS,CACPE,KAAMsC,GACNlC,QAASD,EAAK+C,SARY,gDAW5BpD,EAAS,CACPE,KAAMuC,GACNnC,QAAS,KAAME,SAASH,KAAKI,UAbH,yDAAN,uDAuFbC,GAAe,SAACV,GAC3BA,EAAS,CACPE,KAAMJ,M,QCpIKuD,GAvCA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEhB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAEI,uBAAMC,SAbY,SAACC,GACrBA,EAAEC,iBAECJ,EAAQK,OACTP,EAAQQ,KAAR,kBAAwBN,IAIxBF,EAAQQ,KAAK,MAKb,SACM,uBAAKC,UAAU,cAAf,UACF,wBACE7D,KAAK,OACLc,GAAG,eACH+C,UAAU,eACVC,YAAY,yBACZC,SAAU,SAACN,GAAD,OAAOF,EAAWE,EAAEO,OAAOC,UAEvC,sBAAKJ,UAAU,qBAAf,SACE,yBAAQ/C,GAAG,aAAa+C,UAAU,MAAlC,SACE,oBAAGA,UAAU,eAAe,cAAY,mBCkIvCK,I,cAlJA,WACb,IAAMC,EAAQC,cACRtE,EAAWuE,cAEjB,EAA0BC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA/CnE,EAAR,EAAQA,KACR,GADA,EAAcoE,QACeH,aAAY,SAACC,GAAD,OAAWA,EAAMrB,WAAlDA,EAAR,EAAQA,OACApB,GADR,EAAgB4C,SACMJ,aAAY,SAACC,GAAD,OAAWA,EAAM1C,QAA3CC,WAEF6C,EAAgB,WACpB7E,EJyBqB,uCAAM,WAAOA,GAAP,SAAAC,EAAA,sDAC7B0B,aAAamD,WAAW,aACxBnD,aAAamD,WAAW,gBACxB9E,EAAS,CACPE,KAAMY,IAJqB,2CAAN,uDIxBrBd,ENgMsB,uCAAM,WAAOA,GAAP,SAAAC,EAAA,+EAEtBE,IAAMC,IAAI,sBAFY,OAI5BJ,EAAS,CACPE,KAAMpB,IALoB,+CAQ5BkB,EAAS,CACPE,KAAMnB,EACNuB,QAAS,KAAME,SAASH,KAAKI,UAVH,wDAAN,uDM/LtBT,EF8EwB,uCAAM,WAAOA,GAAP,SAAAC,EAAA,+EAExBE,IAAMC,IAAI,wBAFc,OAI9BJ,EAAS,CACPE,KAAM4C,KALsB,+CAQ9B9C,EAAS,CACPE,KAAM6C,GACNzC,QAAS,KAAME,SAASH,KAAKI,UAVD,wDAAN,uDE7ExB4D,EAAMU,QAAQ,4BAGhB,OACE,eAAC,WAAD,UACE,uBAAKhB,UAAU,aAAf,UACE,sBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CAAMiB,GAAG,IAAT,SACE,sBAAKjB,UAAU,QAAQkB,IAAI,4BAKjC,sBAAKlB,UAAU,0CAAf,SACE,eAAC,IAAD,CAAOmB,OAAQ,gBAAG5B,EAAH,EAAGA,QAAH,OAAiB,eAAC,GAAD,CAAQA,QAASA,SAGnD,uBAAKS,UAAU,4CAAf,UACE,eAAC,IAAD,CAAMiB,GAAG,YAAYjB,UAAU,WAAW/C,GAAG,YAA7C,sBAGA,gBAAC,IAAD,CAAMgE,GAAG,QAAQG,MAAO,CAAEC,eAAgB,QAA1C,UACE,uBAAMpE,GAAG,OAAO+C,UAAU,OAA1B,kBAGA,wBAAMA,UAAU,OAAO/C,GAAG,aAA1B,UACG,IACAgB,EAAUqD,aAId9E,EACC,uBAAKwD,UAAU,yBAAf,UACE,gBAAC,IAAD,CACEiB,GAAG,GACHjB,UAAU,uCACV7D,KAAK,SACLc,GAAG,mBACH,iBAAe,WACf,gBAAc,OACd,gBAAc,QAPhB,UASE,yBAAQ+C,UAAU,oBAAlB,SACE,sBACEkB,IAAK1E,EAAK+E,QAAU/E,EAAK+E,OAAO7D,IAChC8D,IAAKhF,GAAQA,EAAKc,KAClB0C,UAAU,qBAGd,gCAAOxD,GAAQA,EAAKc,UAGtB,uBAAK0C,UAAU,gBAAgB,kBAAgB,mBAA/C,UACE,eAAC,IAAD,CAAMA,UAAU,gBAAgBiB,GAAG,eAAnC,oBAGA,eAAC,IAAD,CAAMjB,UAAU,gBAAgBiB,GAAG,QAAnC,qBAGA,eAAC,IAAD,CACEjB,UAAU,4BACViB,GAAG,IACHQ,QAASX,EAHX,2BAUHzB,GACC,eAAC,IAAD,CAAM4B,GAAG,SAASjB,UAAU,WAAW/C,GAAG,YAA1C,mBAMHoC,EACC,uBAAKW,UAAU,yBAAf,UACE,gBAAC,IAAD,CACEiB,GAAG,GACHjB,UAAU,uCACV7D,KAAK,SACLc,GAAG,mBACH,iBAAe,WACf,gBAAc,OACd,gBAAc,QAPhB,UASE,yBAAQ+C,UAAU,oBAAlB,SACE,sBACEkB,IAAK7B,EAAOkC,QAAUlC,EAAOkC,OAAO7D,IACpC8D,IAAKnC,GAAUA,EAAO/B,KACtB0C,UAAU,qBAGd,gCAAOX,GAAUA,EAAOqC,gBAG1B,uBAAK1B,UAAU,gBAAgB,kBAAgB,mBAA/C,UACGX,GAA0B,WAAhBA,EAAOsC,KAChB,eAAC,IAAD,CAAM3B,UAAU,gBAAgBiB,GAAG,cAAnC,oBAIA,gBAAC,IAAD,CAAMjB,UAAU,gBAAgBiB,GAAG,aAAnC,UACG,IADH,YAEY,OAGd,eAAC,IAAD,CAAMjB,UAAU,gBAAgBiB,GAAG,UAAnC,qBAGA,eAAC,IAAD,CACEjB,UAAU,4BACViB,GAAG,IACHQ,QAASX,EAHX,yBAlCyCzB,IA4C5C7C,GACC,eAAC,IAAD,CAAMyE,GAAG,eAAejB,UAAU,WAAW/C,GAAG,YAAhD,oCCvIC2E,GAZA,WACb,OACE,+BACI,yBAAQ5B,UAAU,OAAlB,SACA,oBAAGA,UAAU,mBAAb,sE,UCKO6B,GARE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACjB,OACE,eAACC,GAAA,EAAD,UACE,iDAAYD,EAAZ,wBCyBU1E,GA5BC,YAAsB,IAApBA,EAAmB,EAAnBA,QAAS4E,EAAU,EAAVA,IACzB,OACC,sBAAMhC,UAAS,oCAA+BgC,EAA/B,SAAf,SACA,uBAAKhC,UAAU,mBAAf,UACE,sBACEA,UAAU,uBACVkB,IAAK9D,EAAQK,OAAO,GAAGC,MAEzB,uBAAKsC,UAAU,+BAAf,UACE,qBAAIA,UAAU,aAAd,SACE,eAAC,IAAD,CAAMiB,GAAE,mBAAc7D,EAAQC,KAA9B,SAAuCD,EAAQE,SAEjD,uBAAK0C,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,mBAEjB,wBAAM/C,GAAG,gBAAT,cAA2BG,EAAQ6E,aAAnC,kBAEF,qBAAGjC,UAAU,YAAb,UAA0B5C,EAAQG,MAAlC,SAGA,eAAC,IAAD,CAAM0D,GAAE,mBAAc7D,EAAQC,KAAOJ,GAAG,WAAW+C,UAAU,gBAA7D,mCCdOkC,GARA,WACb,OACE,sBAAKlC,UAAU,Y,qBCJNmC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBAEpBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAuB,uBAGvBC,GAA6B,6BAC7BC,GAA6B,6BAC7BC,GAA0B,0BAG1BC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAmB,mBACnBC,GAAkB,kBAIlB/H,GAAe,eCqBfgI,GAAoB,SAAC9G,GAAD,8CAAQ,WAAOhB,GAAP,iBAAAC,EAAA,sEAErCD,EAAS,CAAEE,KAAMkH,KAFoB,SAIdjH,IAAMC,IAAN,0BAA6BY,IAJf,gBAI7BX,EAJ6B,EAI7BA,KAERL,EAAS,CACPE,KAAMmH,GACN/G,QAASD,EAAKc,UARqB,gDAWrCnB,EAAS,CACPE,KAAMoH,GACNhH,QAAS,KAAME,SAASH,KAAKI,UAbM,yDAAR,uDAoBpBsH,GAAmB,yDAAM,WAAO/H,GAAP,iBAAAC,EAAA,sEAElCD,EAAS,CAAEE,KAAM+G,KAFiB,SAIX9G,IAAMC,IAAN,0BAJW,gBAI1BC,EAJ0B,EAI1BA,KAERL,EAAS,CACPE,KAAMgH,GACN5G,QAASD,EAAK2H,WARkB,gDAWlChI,EAAS,CACPE,KAAMiH,GACN7G,QAAS,KAAME,SAASH,KAAKI,UAbG,yDAAN,uDA0JnBC,GAAe,SAACV,GAC3BA,EAAS,CACPE,KAAMJ,M,SC9NJmI,I,QAAQC,EADoBC,KAA3BD,yBAC+BC,KAAOF,QAqM9BG,GAlMF,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACb,EAAsC9E,mBAAS,GAA/C,mBAAO+E,EAAP,KAAoBC,EAApB,KACA,EAA0BhF,mBAAS,CAAC,EAAG,MAAvC,mBAAOjC,EAAP,KAAckH,EAAd,KACA,EAAgCjF,mBAAS,IAAzC,mBAAOkF,EAAP,KAAiBC,EAAjB,KAqBMrE,EAAQC,cACRtE,EAAWuE,cAEjB,EAAqFC,aAAY,SAAAC,GAAK,OAAIA,EAAMuD,YAAzGrD,EAAP,EAAOA,QAASqD,EAAhB,EAAgBA,SAAUW,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,cAAeC,EAAhD,EAAgDA,WAAYC,EAA5D,EAA4DA,qBAItDtF,GAFYgB,aAAY,SAAAC,GAAK,OAAIA,EAAMsE,cAAtCC,QAESX,EAAMY,OAAOzF,SAE7B0F,qBAAU,WACR,GAAGP,EAIF,OADCtE,EAAMU,QAAQ,WACRV,EAAMsE,MAAMA,GAItB3I,EDzBA,eAACwD,EAAD,uDAAW,GAAI8E,EAAf,uDAA6B,EAAGhH,EAAhC,uCAAuCmH,EAAvC,qFACA,WAAOzI,GAAP,mBAAAC,EAAA,sEAEID,EAAS,CAAEE,KAAMgG,KAEbiD,EAJR,mCAI2C3F,EAJ3C,iBAI2D8E,EAJ3D,uBAIqFhH,EAAM,GAJ3F,uBAI4GA,EAAM,IAE1GmH,IACFU,EAAI,mCAA+B3F,EAA/B,iBAA+C8E,EAA/C,uBAAyEhH,EAAM,GAA/E,uBAAgGA,EAAM,GAAtG,qBAAqHmH,IAP/H,SAU2BtI,IAAMC,IAAI+I,GAVrC,gBAUY9I,EAVZ,EAUYA,KAERL,EAAS,CACPE,KAAMiG,GACN7F,QAASD,IAdf,kDAiBIL,EAAS,CACPE,KAAMkG,GACN9F,QAAS,KAAME,SAASH,KAAKI,UAnBnC,0DADA,sDCyBS2I,CAAY5F,EAAS8E,EAAahH,EAAOmH,MAIhD,CAACzI,EAAUqE,EAAOsE,EAAOnF,EAAS8E,EAAahH,EAAOmH,IAOvD,IAAIY,EAAQT,EAMb,OALIpF,IACD6F,EAAQP,GAMT,gBAAC,WAAD,WAKGnE,EAAU,eAAC,GAAD,IAAa,KACxB,eAAC,GAAD,CAAUkB,MAAO,4BAGhB,qBAAI7E,GAAG,mBAAP,6BACA,0BAASA,GAAG,WAAWsI,MAAM,iBAA7B,SACD,sBAAKvF,UAAU,MAAf,SAECP,EAEC,gBAAC,WAAD,WAGI,sBAAKO,UAAU,8BAAf,SACE,uBAAKA,UAAU,OAAf,UACE,eAACkE,GAAD,CACEsB,MAAO,CACL,EAAE,OACF,IAAO,aAGTC,IAAM,EACNC,IAAK,IACLC,aAAc,CAAC,EAAG,KAClBC,aAAc,SAAAxF,GAAK,mBAAUA,IAC7ByF,SAAU,CACRC,UAAW,MACXC,SAAS,GAGX3F,MAAO7C,EACP2C,SAAU,SAAA3C,GAAK,OAAIkH,EAASlH,MAO1B,qBAAIyC,UAAU,SAxBpB,IA0BM,uBAAKA,UAAU,OAAf,UACI,qBAAIA,UAAU,OAAd,wBAIA,qBAAIA,UAAU,OAAd,SA3GH,CACjB,cACA,UACA,UACA,YACA,cACA,eACA,aACA,eACA,MACA,YACA,MACA,YACA,QACA,aACA,MACA,cACA,OACA,WA0FoCgG,KAAI,SAAAtB,GAAQ,OACpB,qBACItD,MAAO,CACH6E,OAAQ,UACRC,cAAe,QAGnBzE,QAAS,kBAAMkD,EAAYD,IAN/B,SAQKA,GAHIA,gBAa3B,sBAAK1E,UAAU,iBAAf,SACA,sBAAKA,UAAU,MAAf,SAECiE,GAAYA,EAAS+B,KAAI,SAAA5I,GAAO,OAEjC,eAAC+I,GAAD,CAAS/I,QAASA,EAA2B4E,IAAK,GAAlB5E,EAAQC,eAa9C4G,GAAYA,EAAS+B,KAAI,SAAA5I,GAAO,OAE9B,eAAC+I,GAAD,CAAS/I,QAASA,EAA2B4E,IAAK,GAAlB5E,EAAQC,YAgB7CyH,EAAaQ,GACZ,sBAAKtF,UAAU,qCAAf,SAEA,eAAC,KAAD,CACEoG,WAAc7B,EACd8B,kBAAqBvB,EACrBwB,gBAAmBzB,EACnB3E,SA7HN,SAA0BqG,GACxB/B,EAAe+B,IA6HXC,aAAe,OACfC,aAAe,OACfC,cAAgB,QAChBC,aAAe,OACfC,UAAY,YACZC,UAAY,oB,UChLLC,GApBK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACI,uBAAKxB,MAAM,eAAX,UACI,mDACA,wBACCwB,GAAWA,EAAQf,KAAI,SAAAgB,GAAM,OAC1B,uBAAsBzB,MAAM,mBAA5B,UACI,sBAAKA,MAAM,eAAX,SACI,sBAAKA,MAAM,eAAenE,MAAO,CAAE6F,MAAM,GAAD,OAAMD,EAAOE,OAAS,EAAK,IAA3B,UAE5C,qBAAG3B,MAAM,cAAT,gBAA2ByB,EAAO1J,QAClC,oBAAGiI,MAAM,iBAAT,SAA2ByB,EAAOG,UAElC,0BAPMH,EAAO3J,YCkSlB+J,GA9RQ,SAAC,GAAe,IAAb9C,EAAY,EAAZA,MAGxB,EAAgC9E,mBAAS,GAAzC,mBAAOtC,EAAP,KAAiBmK,EAAjB,KACA,EAA4B7H,mBAAS,GAArC,mBAAO0H,EAAP,KAAeI,EAAf,KACA,EAA6B9H,mBAAS,IAAtC,mBAAM2H,EAAN,KAAeI,EAAf,KAEMtL,EAAWuE,cACXF,EAAQC,cACd,EAAoCE,aAClC,SAACC,GAAD,OAAWA,EAAM8G,kBADX5G,EAAR,EAAQA,QAASgE,EAAjB,EAAiBA,MAAOxH,EAAxB,EAAwBA,QAIxB,EAAsCqD,aAAY,SAAAC,GAAK,OAAIA,EAAM+G,aAAnDC,EAAd,EAAO9C,MAAoB5D,EAA3B,EAA2BA,QAEnBxE,EAASiE,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAtCnE,KAER2I,qBAAU,WACRlJ,EAAS8H,GAAkBO,EAAMY,OAAOjI,KAEpC2H,IACFtE,EAAMsE,MAAMA,GACZ3I,EAASU,KAIP+K,IACFpH,EAAMsE,MAAM8C,GACZzL,EAASU,OAGPqE,IACFV,EAAMU,QAAQA,GACd/E,EAAS,CAACE,KAAM0H,QAGjB,CAAC5H,EAAUqE,EAAOsE,EAAO8C,EAAapD,EAAMY,OAAOjI,GAAI+D,IAyE1D,OACE,eAAC,WAAD,UACGJ,EACC,eAAC,GAAD,IAEA,gBAAC,WAAD,WACE,eAAC,GAAD,CAAUkB,MAAO1E,EAAQE,OACzB,uBAAK0C,UAAU,oCAAf,UACE,sBAAKA,UAAU,4BAA4B/C,GAAG,gBAA9C,SACE,eAAC0K,GAAA,EAAD,CAAUC,MAAM,QAAhB,SACGxK,EAAQK,QACPL,EAAQK,OAAOuI,KAAI,SAACxI,GAAD,OACjB,eAACmK,GAAA,EAASE,KAAV,UACE,sBACE7H,UAAU,gBACVkB,IAAK1D,EAAME,IACX8D,IAAKpE,EAAQ0E,SAJGtE,EAAMsK,kBAWlC,uBAAK9H,UAAU,uBAAf,UACE,8BAAK5C,EAAQE,OACb,qBAAGL,GAAG,aAAN,uBAA8BG,EAAQC,IAAtC,OAEA,wBAEA,sBAAK2C,UAAU,eAAf,SACE,sBAAKA,UAAU,mBAEjB,wBAAM/C,GAAG,gBAAT,cAA2BG,EAAQ6E,aAAnC,cAEA,wBAEA,oBAAGhF,GAAG,gBAAN,SAAuBG,EAAQG,QAC/B,uBAAKyC,UAAU,wBAAf,UACE,uBAAMA,UAAU,uBAAuByB,QA/FjC,WAClB,IAAM6D,EAAQyC,SAASC,cAAc,UAErC,KAAI1C,EAAM2C,eAAiB,GAA3B,CAEA,IAAMC,EAAM5C,EAAM2C,cAAgB,EAClCZ,EAAYa,KAyFA,eAIA,wBACE/L,KAAK,SACL6D,UAAU,8BACVI,MAAOlD,EACPiL,UAAQ,IAGV,uBAAMnI,UAAU,uBAAuByB,QAnHjC,WAClB,IAAM6D,EAAQyC,SAASC,cAAc,UAErC,KAAI1C,EAAM2C,eAAiB7K,EAAQO,OAAnC,CAEA,IAAMuK,EAAM5C,EAAM2C,cAAgB,EAClCZ,EAAYa,KA6GA,kBAIF,yBACE/L,KAAK,SACLc,GAAG,WACH+C,UAAU,gCACVyB,QAhII,WAChBxF,EAASe,EAAcsH,EAAMY,OAAOjI,GAAIC,IACxCoD,EAAMU,QAAQ,uBA0HJ,yBASA,wBAEA,yCACU,IACR,uBACE/D,GAAG,eACH+C,UAAW5C,EAAQO,MAAQ,EAAI,aAAe,WAFhD,SAIGP,EAAQO,MAAQ,EAAI,WAAa,oBAItC,wBAEA,qBAAIqC,UAAU,OAAd,0BACA,6BAAI5C,EAAQgL,cAEZ,qBAAGnL,GAAG,sBAAN,sBACW,kCAASG,EAAQiC,YAG3B7C,EACC,yBACES,GAAG,aACHd,KAAK,SACL6D,UAAU,uBACV,iBAAe,QACf,iBAAe,eACfyB,QA1IhB,WACE,IAAM4G,EAAQN,SAASO,iBAAiB,SAUxC,SAASC,EAAY3I,GAAI,IAAD,OACtByI,EAAMG,SAAQ,SAACC,EAAMC,GACJ,UAAX9I,EAAEzD,OACAuM,EAAQ,EAAKC,WACfF,EAAKG,UAAUC,IAAI,UAEnBvB,EAAU,EAAKqB,YAEfF,EAAKG,UAAUE,OAAO,WAIX,cAAXlJ,EAAEzD,OACAuM,EAAQ,EAAKC,UACfF,EAAKG,UAAUC,IAAI,UAEnBJ,EAAKG,UAAUE,OAAO,WAIX,aAAXlJ,EAAEzD,MACJsM,EAAKG,UAAUE,OAAO,aA7B5BT,EAAMG,SAAQ,SAACC,EAAMC,GACnBD,EAAKE,UAAYD,EAAQ,EAEzB,CAAC,QAAS,YAAa,YAAYF,SAAQ,SAAU5I,GACnD6I,EAAKM,iBAAiBnJ,EAAG2I,UA6HjB,gCAWA,sBAAKvI,UAAU,0BAA0B7D,KAAK,QAA9C,wCAKF,sBAAK6D,UAAU,gBAAf,SACE,sBAAKA,UAAU,cAAf,SACE,sBACEA,UAAU,aACV/C,GAAG,cACH+L,SAAS,KACTrH,KAAK,SACL,kBAAgB,mBAChB,cAAY,OANd,SAQE,sBAAK3B,UAAU,eAAe2B,KAAK,WAAnC,SACE,uBAAK3B,UAAU,gBAAf,UACE,uBAAKA,UAAU,eAAf,UACE,qBAAIA,UAAU,cAAc/C,GAAG,mBAA/B,2BAGA,yBACEd,KAAK,SACL6D,UAAU,QACV,kBAAgB,QAChB,aAAW,QAJb,SAME,uBAAM,cAAY,OAAlB,uBAGJ,uBAAKA,UAAU,aAAf,UACE,sBAAIA,UAAU,QAAd,UACE,qBAAIA,UAAU,OAAd,SACE,oBAAGA,UAAU,iBAEf,qBAAIA,UAAU,OAAd,SACE,oBAAGA,UAAU,iBAEf,qBAAIA,UAAU,OAAd,SACE,oBAAGA,UAAU,iBAEf,qBAAIA,UAAU,OAAd,SACE,oBAAGA,UAAU,iBAEf,qBAAIA,UAAU,OAAd,SACE,oBAAGA,UAAU,oBAIjB,2BACE1C,KAAK,SACLL,GAAG,SACH+C,UAAU,oBACVI,MAAO+G,EACPjH,SAAU,SAACN,GAAD,OAAO2H,EAAW3H,EAAEO,OAAOC,UAGvC,yBACEJ,UAAU,kDACVyB,QApKJ,WACpB,IH6FsBwH,EG7FhBC,EAAW,IAAIC,SAErBD,EAASE,IAAI,SAAUlC,GACvBgC,EAASE,IAAI,UAAWjC,GACxB+B,EAASE,IAAI,YAAa9E,EAAMY,OAAOjI,IAEvChB,GHuFsBgN,EGvFHC,EHuFE,uCAAgB,WAAOjN,GAAP,mBAAAC,EAAA,sEAGnCD,EAAS,CAAEE,KAAMwH,KAEX0F,EAAS,CACXC,QAAS,CACL,eAAgB,qBAPW,SAWZlN,IAAMmN,IAAN,iBAA4BN,EAAYI,GAX5B,gBAW3B/M,EAX2B,EAW3BA,KAERL,EAAS,CACLE,KAAMyH,GACNrH,QAASD,EAAK0E,UAfiB,kDAmBnC/E,EAAS,CACLE,KAAM2H,GACNvH,QAAS,KAAME,SAASH,KAAKI,UArBE,0DAAhB,yDGuEG,kBAAgB,QAChB,aAAW,QAJb,wCAgBfU,EAAQ2J,SAAW3J,EAAQ2J,QAAQzF,OAAS,GAC/B,eAAC,GAAD,CAAayF,QAAS3J,EAAQ2J,gBC/LvCyC,GAzFD,SAAC,GAA2B,IAAzBjK,EAAwB,EAAxBA,QAASkK,EAAe,EAAfA,SACxB,EAA0BjK,mBAAS,IAAnC,mBAAOkK,EAAP,KAAcC,EAAd,KACA,EAAgCnK,mBAAS,IAAzC,mBAAOoK,EAAP,KAAiBC,EAAjB,KAEMvJ,EAAQC,cACRtE,EAAWuE,cAEjB,EAAgDC,aAC9C,SAACC,GAAD,OAAWA,EAAMC,QADXmJ,EAAR,EAAQA,oBAAqBlF,EAA7B,EAA6BA,MAAOhE,EAApC,EAAoCA,QAI9BmJ,EAAWN,EAASO,OAASP,EAASO,OAAOC,MAAM,KAAK,GAAK,IAEnE9E,qBAAU,WACJ2E,IACFvK,EAAQQ,KAAKgK,GACbzJ,EAAMU,QAAQ,0BAGZ4D,IAEFtE,EAAMsE,MAAMA,GACZ3I,EAASU,MAEV,CAACV,EAAUqE,EAAOwJ,EAAqBlF,EAAOrF,IAOjD,OACE,eAAC,WAAD,UACGqB,EACC,eAAC,GAAD,IAEA,gBAAC,WAAD,WACE,eAAC,GAAD,CAAUkB,MAAO,UAEjB,sBAAK9B,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,wBAAMA,UAAU,YAAYL,SAflB,SAACC,GACrBA,EAAEC,iBACF5D,EhBRiB,SAACyN,EAAOE,GAAR,8CAAqB,WAAO3N,GAAP,mBAAAC,EAAA,sEAEtCD,EAAS,CAAEE,KAAM7B,IAEX+O,EAAS,CACbC,QAAS,CACP,eAAgB,qBANkB,SAUflN,IAAM8N,KAC3B,oBACA,CAAER,QAAOE,YACTP,GAboC,gBAU9B/M,EAV8B,EAU9BA,KAMRL,EAAS,CACPE,KAAM5B,EACNgC,QAASD,EAAKE,OAlBsB,kDAqBtCP,EAAS,CACPE,KAAM3B,EACN+B,QAAS,KAAME,SAASH,KAAKI,UAvBO,0DAArB,sDgBQRyN,CAAMT,EAAOE,KAaZ,UACE,qBAAI5J,UAAU,OAAd,mBACA,uBAAKA,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,mBACA,wBACEjO,KAAK,QACLc,GAAG,cACH+C,UAAU,eACVI,MAAOsJ,EACPxJ,SAAU,SAACN,GAAD,OAAO+J,EAAS/J,EAAEO,OAAOC,aAIvC,qBAAGiK,IAAE,EAACrK,UAAU,aAAhB,UACE,wBAAOoK,QAAQ,iBAAf,sBACA,wBACEjO,KAAK,WACLc,GAAG,iBACH+C,UAAU,eACVI,MAAOwJ,EACP1J,SAAU,SAACN,GAAD,OAAOiK,EAAYjK,EAAEO,OAAOC,aAI1C,eAAC,IAAD,CAAMa,GAAG,uBAAuBjB,UAAU,mBAA1C,8BAIA,yBACE/C,GAAG,eACHd,KAAK,SACL6D,UAAU,qBAHZ,mBAQA,eAAC,IAAD,CAAMiB,GAAG,YAAYjB,UAAU,mBAA/B,oC,SCiFDsK,GAhKE,SAAC,GAA2B,IAAzB/K,EAAwB,EAAxBA,QAClB,GAD0C,EAAfkK,SACHjK,mBAAS,CAC/BlC,KAAM,GACNoM,MAAO,GACPE,SAAU,MAHZ,mBAAOpN,EAAP,KAAa+N,EAAb,KAMQjN,EAA0Bd,EAA1Bc,KAAMoM,EAAoBlN,EAApBkN,MAAOE,EAAapN,EAAboN,SACrB,EAA4BpK,mBAAS,IAArC,mBAAO+B,EAAP,KAAeiJ,EAAf,KACA,EAA0ChL,mBACxC,8BADF,mBAAOiL,EAAP,KAAsBC,EAAtB,KAIMpK,EAAQC,cACRtE,EAAWuE,cAEjB,EAAgDC,aAC9C,SAACC,GAAD,OAAWA,EAAMC,QADXmJ,EAAR,EAAQA,oBAAqBlF,EAA7B,EAA6BA,MAAOhE,EAApC,EAAoCA,QAI9BmJ,EAAWxK,EAAQkK,SAASO,OAC9BzK,EAAQkK,SAASO,OAAOC,MAAM,KAAK,GACnC,IAEJ9E,qBAAU,WACJ2E,IACFvK,EAAQQ,KAAKgK,GACbzJ,EAAMU,QAAQ,0BAGZ4D,IACFtE,EAAMsE,MAAMA,GACZ3I,EAASU,MAEV,CAACV,EAAUqE,EAAOwJ,EAAqBlF,EAAOrF,IAEjD,IAYMW,EAAW,SAACN,GAChB,GAAsB,WAAlBA,EAAEO,OAAO7C,KAAmB,CAE9B,IAAMqN,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WAEY,IAAtBF,EAAOG,aAGTJ,EAAiBC,EAAOI,QACxBP,EAAUG,EAAOI,UAIrBJ,EAAOK,cAAcpL,EAAEO,OAAO8K,MAAM,SAEpCV,EAAQ,2BAAK/N,GAAN,mBAAaoD,EAAEO,OAAO7C,KAAOsC,EAAEO,OAAOC,UAIjD,OACE,gBAAC,WAAD,WACE,eAAC,GAAD,CAAU0B,MAAO,kBACjB,sBAAK9B,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,wBACEA,UAAU,YACVL,SAxCY,SAACC,GACrBA,EAAEC,iBACF,IjBaqBqL,EiBbfhC,EAAW,IAAIC,SAErBD,EAASE,IAAI,OAAQ9L,GACrB4L,EAASE,IAAI,QAASM,GACtBR,EAASE,IAAI,WAAYQ,GACzBV,EAASE,IAAI,SAAU7H,GAEvBtF,GjBMqBiP,EiBNHhC,EjBME,uCAAc,WAAOjN,GAAP,mBAAAC,EAAA,sEAElCD,EAAS,CAAEE,KAAM1B,IAEX4O,EAAS,CACbC,QAAS,CACP,eAAgB,wBANc,SAUXlN,IAAM8N,KAAK,uBAAwBgB,EAAU7B,GAVlC,gBAU1B/M,EAV0B,EAU1BA,KAERL,EAAS,CACPE,KAAMzB,EACN6B,QAASD,EAAKE,OAdkB,kDAiBlCP,EAAS,CACPE,KAAMxB,EACN4B,QAAS,KAAME,SAASH,KAAKI,UAnBG,0DAAd,yDiB0BZyO,QAAQ,sBAHV,UAKE,qBAAInL,UAAU,OAAd,2BAEA,uBAAKA,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,kBACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,OACL8C,MAAO9C,EACP4C,SAAUA,OAId,uBAAKF,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,mBACA,wBACEjO,KAAK,QACLc,GAAG,cACH+C,UAAU,eACV1C,KAAK,QACL8C,MAAOsJ,EACPxJ,SAAUA,OAId,uBAAKF,UAAU,aAAf,UACE,wBAAOoK,QAAQ,iBAAf,sBACA,wBACEjO,KAAK,WACLc,GAAG,iBACH+C,UAAU,eACV1C,KAAK,WACL8C,MAAOwJ,EACP1J,SAAUA,OAId,uBAAKF,UAAU,aAAf,UACE,wBAAOoK,QAAQ,gBAAf,oBACA,uBAAKpK,UAAU,4BAAf,UACE,+BACE,yBAAQA,UAAU,uBAAlB,SACE,sBACEkB,IAAKuJ,EACLzK,UAAU,iBACVwB,IAAI,uBAIV,uBAAKxB,UAAU,cAAf,UACE,wBACE7D,KAAK,OACLmB,KAAK,SACL0C,UAAU,oBACV/C,GAAG,aACHmO,OAAO,WACPlL,SAAUA,IAEZ,wBAAOF,UAAU,oBAAoBoK,QAAQ,aAA7C,oCAON,yBACEnN,GAAG,kBACHd,KAAK,SACL6D,UAAU,qBACVqL,WAAUzK,EAJZ,iCCtFG0K,GA7DC,WACd,MAA0B7K,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA/CnE,EAAR,EAAQA,KAAMoE,EAAd,EAAcA,QACd,OACE,+BACE,eAAC,WAAD,UACGA,EACC,eAAC,GAAD,IAEA,gBAAC,WAAD,WACE,eAAC,GAAD,CAAUkB,MAAO,iBACjB,qBAAI9B,UAAU,YAAd,wBACA,uBAAKA,UAAU,4CAAf,UACE,uBAAKA,UAAU,kBAAf,UACE,yBAAQA,UAAU,wBAAlB,SACE,sBACEA,UAAU,2BACVkB,IAAK1E,EAAK+E,OAAO7D,IACjB8D,IAAKhF,EAAKc,SAGd,eAAC,IAAD,CACE2D,GAAG,eACHhE,GAAG,eACH+C,UAAU,iCAHZ,6BASF,uBAAKA,UAAU,kBAAf,UACE,4CACA,6BAAIxD,EAAKc,OAET,gDACA,6BAAId,EAAKkN,QAET,4CACA,6BAAI6B,OAAO/O,EAAKgP,WAAWC,UAAU,EAAG,MAExC,eAAC,IAAD,CACExK,GAAG,eACHjB,UAAU,gCAFZ,uBAOA,eAAC,IAAD,CACEiB,GAAG,mBACHjB,UAAU,iCAFZ,2CCuGD0L,GA9IO,SAAC,GAAiB,IAAfnM,EAAc,EAAdA,QACvB,EAAwBC,mBAAS,IAAjC,mBAAOlC,EAAP,KAAaqO,EAAb,KACA,EAA0BnM,mBAAS,IAAnC,mBAAOkK,EAAP,KAAcC,EAAd,KACA,EAA4BnK,mBAAS,IAArC,mBAAO+B,EAAP,KAAeiJ,EAAf,KACA,EAA0ChL,mBACxC,8BADF,mBAAOiL,EAAP,KAAsBC,EAAtB,KAIMpK,EAAQC,cACRtE,EAAWuE,cAEThE,EAASiE,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAtCnE,KACR,EAAsCiE,aAAY,SAACC,GAAD,OAAWA,EAAMlE,QAA3DoI,EAAR,EAAQA,MAAOgH,EAAf,EAAeA,UAAWhL,EAA1B,EAA0BA,QAE1BuE,qBAAU,WACJ3I,IAEFmP,EAAQnP,EAAKc,MACbqM,EAASnN,EAAKkN,OACdgB,EAAiBlO,EAAK+E,OAAO7D,MAG3BkH,IACFtE,EAAMsE,MAAMA,GACZ3I,EAASU,IAIPiP,IACFtL,EAAMU,QAAQ,6BACd/E,EAASD,KAETuD,EAAQQ,KAAK,SAEb9D,EAAS,CACPE,KAAMf,OAGT,CAACa,EAAUqE,EAAOsE,EAAOrF,EAASqM,IAyBrC,OACE,gBAAC,WAAD,WACE,eAAC,GAAD,CAAU9J,MAAO,mBAEjB,sBAAK9B,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,wBACEA,UAAU,YACVL,SA/BY,SAACC,GACrBA,EAAEC,iBAEF,InB8C0BqL,EmB9CpBhC,EAAW,IAAIC,SACrBD,EAASE,IAAI,OAAQ9L,GACrB4L,EAASE,IAAI,QAASM,GACtBR,EAASE,IAAI,SAAU7H,GAEvBtF,GnByC0BiP,EmBzCHhC,EnByCE,uCAAc,WAAOjN,GAAP,mBAAAC,EAAA,sEAEvCD,EAAS,CAAEE,KAAMlB,IAEXoO,EAAS,CACbC,QAAS,CACP,eAAgB,wBANmB,SAUhBlN,IAAMmN,IAAI,sBAAuB2B,EAAU7B,GAV3B,gBAU/B/M,EAV+B,EAU/BA,KAERL,EAAS,CACPE,KAAMjB,EACNqB,QAASD,EAAK0E,UAduB,kDAiBvC/E,EAAS,CACPE,KAAMhB,EACNoB,QAAS,KAAME,SAASH,KAAKI,UAnBQ,0DAAd,yDmBjBjByO,QAAQ,sBAHV,UAKE,qBAAInL,UAAU,YAAd,4BAEA,uBAAKA,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,kBACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,OACL8C,MAAO9C,EACP4C,SAAU,SAACN,GAAD,OAAO+L,EAAQ/L,EAAEO,OAAOC,aAItC,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,mBACA,wBACEjO,KAAK,QACLc,GAAG,cACH+C,UAAU,eACV1C,KAAK,QACL8C,MAAOsJ,EACPxJ,SAAU,SAACN,GAAD,OAAO+J,EAAS/J,EAAEO,OAAOC,aAIvC,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,gBAAf,oBACA,uBAAKpK,UAAU,4BAAf,UACE,+BACE,yBAAQA,UAAU,uBAAlB,SACE,sBACEkB,IAAKuJ,EACLzK,UAAU,iBACVwB,IAAI,uBAIV,uBAAKxB,UAAU,cAAf,UACE,wBACE7D,KAAK,OACLmB,KAAK,SACL0C,UAAU,oBACV/C,GAAG,aACHmO,OAAO,UACPlL,SApED,SAACN,GAChB,IAAM+K,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WACY,IAAtBF,EAAOG,aACTJ,EAAiBC,EAAOI,QACxBP,EAAUG,EAAOI,UAIrBJ,EAAOK,cAAcpL,EAAEO,OAAO8K,MAAM,OA4DtB,wBAAOjL,UAAU,oBAAoBoK,QAAQ,aAA7C,oCAON,yBACEjO,KAAK,SACL6D,UAAU,qCACVqL,WAAUzK,EAHZ,+BC/CGiL,GAjFQ,SAAC,GAA2B,IAAzBtM,EAAwB,EAAxBA,QAASkK,EAAe,EAAfA,SACjC,EAAsCjK,mBAAS,IAA/C,mBAAOsM,EAAP,KAAoBC,EAApB,KACA,EAAgCvM,mBAAS,IAAzC,mBAAOoK,EAAP,KAAiBC,EAAjB,KAEMvJ,EAAQC,cACRtE,EAAWuE,cAEjB,EAAsCC,aAAY,SAACC,GAAD,OAAWA,EAAMlE,QAA3DoI,EAAR,EAAQA,MAAOgH,EAAf,EAAeA,UAAWhL,EAA1B,EAA0BA,QACpBmJ,EAAWN,EAASO,OAASP,EAASO,OAAOC,MAAM,KAAK,GAAK,QAEnE9E,qBAAU,WACJP,IACFtE,EAAMsE,MAAMA,GACZ3I,EAASU,IAGPiP,IACFtL,EAAMU,QAAQ,iCACdzB,EAAQQ,KAAKgK,GAGb9N,EAAS,CACPE,KAAMZ,OAGT,CAACU,EAAUqE,EAAOsE,EAAOrF,EAASqM,IAYrC,OACE,gBAAC,WAAD,WACE,eAAC,GAAD,CAAU9J,MAAO,oBAEjB,sBAAK9B,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,wBAAMA,UAAU,YAAYL,SAhBd,SAACC,GACrBA,EAAEC,iBAEF,IpBoF2BmM,EoBpFrB9C,EAAW,IAAIC,SACrBD,EAASE,IAAI,cAAe0C,GAC5B5C,EAASE,IAAI,WAAYQ,GAEzB3N,GpBgF2B+P,EoBhFH9C,EpBgFE,uCAAe,WAAOjN,GAAP,mBAAAC,EAAA,sEAEzCD,EAAS,CAAEE,KAAMd,IAEXgO,EAAS,CACbC,QAAS,CACP,eAAgB,qBANqB,SAUlBlN,IAAMmN,IAC3B,0BACAyC,EACA3C,GAbuC,gBAUjC/M,EAViC,EAUjCA,KAMRL,EAAS,CACPE,KAAMb,EACNiB,QAASD,EAAK0E,UAlByB,kDAqBzC/E,EAAS,CACPE,KAAMX,EACNe,QAAS,KAAME,SAASH,KAAKI,UAvBU,0DAAf,yDoBvEpB,UACE,qBAAIsD,UAAU,YAAd,6BACA,uBAAKA,UAAU,aAAf,UACE,wBAAOiM,IAAI,qBAAX,0BACA,wBACE9P,KAAK,WACLc,GAAG,qBACH+C,UAAU,eACVI,MAAO0L,EACP5L,SAAU,SAACN,GAAD,OAAOmM,EAAenM,EAAEO,OAAOC,aAI7C,uBAAKJ,UAAU,aAAf,UACE,wBAAOiM,IAAI,qBAAX,0BACA,wBACE9P,KAAK,WACLc,GAAG,qBACH+C,UAAU,eACVI,MAAOwJ,EACP1J,SAAU,SAACN,GAAD,OAAOiK,EAAYjK,EAAEO,OAAOC,aAI1C,yBACEjE,KAAK,SACL6D,UAAU,qCACVqL,WAAUzK,EAHZ,wCCRGsL,GAhEQ,WACrB,MAA0B1M,mBAAS,IAAnC,mBAAOkK,EAAP,KAAcC,EAAd,KAEMrJ,EAAQC,cACRtE,EAAWuE,cAEjB,EAAoCC,aAClC,SAACC,GAAD,OAAWA,EAAMyL,kBADXvH,EAAR,EAAQA,MAAOhE,EAAf,EAAeA,QAASlE,EAAxB,EAAwBA,QAIxByI,qBAAU,WACJP,IACFtE,EAAMsE,MAAMA,GACZ3I,EAASU,IAGPD,GACF4D,EAAMU,QAAQtE,KAEf,CAACT,EAAUqE,EAAOsE,EAAOlI,IAW5B,OACE,gBAAC,WAAD,WACE,eAAC,GAAD,CAAUoF,MAAO,oBAEjB,sBAAK9B,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,wBAAMA,UAAU,YAAYL,SAfd,SAACC,GACrBA,EAAEC,iBAEF,IAAMqJ,EAAW,IAAIC,SACrBD,EAASE,IAAI,QAASM,GAEtBzN,ErByH0B,SAACyN,GAAD,8CAAW,WAAOzN,GAAP,mBAAAC,EAAA,sEAGrCD,EAAS,CAAEE,KAAMV,IAEX4N,EAAS,CACbC,QAAS,CACP,eAAgB,qBAPiB,SAWdlN,IAAM8N,KAC3B,8BACAR,EACAL,GAdmC,gBAW7B/M,EAX6B,EAW7BA,KAMRL,EAAS,CACPE,KAAMT,EACNa,QAASD,EAAKI,UAnBqB,kDAsBrCT,EAAS,CACPE,KAAMR,EACNY,QAAS,KAAME,SAASH,KAAKI,UAxBM,0DAAX,sDqBzHjByP,CAAejD,KASlB,UACE,qBAAIlJ,UAAU,OAAd,6BACA,uBAAKA,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,yBACA,wBACEjO,KAAK,QACLc,GAAG,cACH+C,UAAU,eACVI,MAAOsJ,EACPxJ,SAAU,SAACN,GAAD,OAAO+J,EAAS/J,EAAEO,OAAOC,aAIvC,yBACEnD,GAAG,yBACHd,KAAK,SACL6D,UAAU,qBACVqL,WAAUzK,EAJZ,mCC2BGwL,GA5EK,SAAC,GAAwB,IAAtB7M,EAAqB,EAArBA,QAAS+E,EAAY,EAAZA,MAC9B,EAAgC9E,mBAAS,IAAzC,mBAAOoK,EAAP,KAAiBC,EAAjB,KACA,EAA8CrK,mBAAS,IAAvD,mBAAO6M,EAAP,KAAwBC,EAAxB,KAEMhM,EAAQC,cACRtE,EAAWuE,cAEjB,EAA2BC,aAAY,SAACC,GAAD,OAAWA,EAAMyL,kBAAhDvH,EAAR,EAAQA,MAAO5D,EAAf,EAAeA,QAEfmE,qBAAU,WACJP,IACFtE,EAAMsE,MAAMA,GACZ3I,EAASU,IAGPqE,IACFV,EAAMU,QAAQ,iCACdzB,EAAQQ,KAAK,aAEd,CAAC9D,EAAUqE,EAAOsE,EAAO5D,EAASzB,IAYrC,OACE,gBAAC,WAAD,WACE,eAAC,GAAD,CAAUuC,MAAO,uBAEjB,sBAAK9B,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,wBAAMA,UAAU,YAAYL,SAhBd,SAACC,GACrBA,EAAEC,iBAEF,ItB0J0B0M,EAAOP,EsB1J3B9C,EAAW,IAAIC,SACrBD,EAASE,IAAI,WAAYQ,GACzBV,EAASE,IAAI,kBAAmBiD,GAEhCpQ,GtBsJ0BsQ,EsBtJHjI,EAAMY,OAAOqH,MtBsJHP,EsBtJU9C,EtBsJlB,uCAAsB,WAAOjN,GAAP,mBAAAC,EAAA,sEAG/CD,EAAS,CAAEE,KAAMP,IAEXyN,EAAS,CACbC,QAAS,CACP,eAAgB,qBAP2B,SAWxBlN,IAAMmN,IAAN,qCACSgD,GAC9BP,EACA3C,GAd6C,gBAWvC/M,EAXuC,EAWvCA,KAMRL,EAAS,CACPE,KAAMN,EACNU,QAASD,EAAK0E,UAnB+B,kDAsB/C/E,EAAS,CACPE,KAAML,EACNS,QAAS,KAAME,SAASH,KAAKI,UAxBgB,0DAAtB,yDsB7InB,UACE,qBAAIsD,UAAU,OAAd,0BAEA,uBAAKA,UAAU,aAAf,UACE,wBAAOoK,QAAQ,iBAAf,sBACA,wBACEjO,KAAK,WACLc,GAAG,iBACH+C,UAAU,eACVI,MAAOwJ,EACP1J,SAAU,SAACN,GAAD,OAAOiK,EAAYjK,EAAEO,OAAOC,aAI1C,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,yBAAf,8BACA,wBACEjO,KAAK,WACLc,GAAG,yBACH+C,UAAU,eACVI,MAAOiM,EACPnM,SAAU,SAACN,GAAD,OAAO0M,EAAmB1M,EAAEO,OAAOC,aAIjD,yBACEnD,GAAG,sBACHd,KAAK,SACL6D,UAAU,qBAHZ,qCC6BGwM,GAzFK,SAAC,GAA2B,IAAzBjN,EAAwB,EAAxBA,QAASkK,EAAe,EAAfA,SAC9B,EAAsCjK,mBAAS,IAA/C,mBAAOiN,EAAP,KAAoBC,EAApB,KACA,EAAgClN,mBAAS,IAAzC,mBAAOoK,EAAP,KAAiBC,EAAjB,KAEMvJ,EAAQC,cACRtE,EAAWuE,cAEjB,EAAkDC,aAChD,SAACC,GAAD,OAAWA,EAAMrB,UADXsN,EAAR,EAAQA,sBAAuB/H,EAA/B,EAA+BA,MAAOhE,EAAtC,EAAsCA,QAIrB6I,EAASO,QAASP,EAASO,OAAOC,MAAM,KAAK,GAE9D9E,qBAAU,WACJwH,GACFC,OAAOnD,SAASoD,QAAQ,KAItBjI,IACFtE,EAAMsE,MAAMA,GACZ3I,EAASU,OAEV,CAACV,EAAUqE,EAAOqM,EAAuB/H,EAAOrF,IAQnD,OACE,eAAC,WAAD,UACGqB,EACC,eAAC,GAAD,IAEA,gBAAC,WAAD,WACE,eAAC,GAAD,CAAUkB,MAAO,iBAEjB,sBAAK9B,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,wBAAMA,UAAU,YAAYL,SAhBlB,SAACC,GACrBA,EAAEC,iBAEF5D,EnBdwB,SAACwQ,EAAa7C,GAAd,8CAA2B,WAAO3N,GAAP,mBAAAC,EAAA,sEAEnDD,EAAS,CAAEE,KAAM+B,IAEXmL,EAAS,CAEbC,QAAS,CACP,eAAgB,qBAP+B,SAW5BlN,IAAM8N,KAC3B,sBACA,CAAEuC,cAAa7C,YACfP,GAdiD,gBAW3C/M,EAX2C,EAW3CA,KAMRL,EAAS,CACPE,KAAMgC,EACN5B,QAASD,EAAK+C,SAnBmC,kDAsBnDpD,EAAS,CACPE,KAAMiC,EACN7B,QAAS,KAAME,SAASH,KAAKI,UAxBoB,0DAA3B,sDmBcfoQ,CAAaL,EAAa7C,KAazB,UACE,qBAAI5J,UAAU,OAAd,0BACA,uBAAKA,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,0BACA,wBACEjO,KAAK,QACLc,GAAG,cACH+C,UAAU,eACVI,MAAOqM,EACPvM,SAAU,SAACN,GAAD,OAAO8M,EAAe9M,EAAEO,OAAOC,aAI7C,qBAAGiK,IAAE,EAACrK,UAAU,aAAhB,UACE,wBAAOoK,QAAQ,iBAAf,6BACA,wBACEjO,KAAK,WACLc,GAAG,iBACH+C,UAAU,eACVI,MAAOwJ,EACP1J,SAAU,SAACN,GAAD,OAAOiK,EAAYjK,EAAEO,OAAOC,aAI1C,eAAC,IAAD,CAAMa,GAAG,yBAAyBjB,UAAU,mBAA5C,8BAIA,yBACE/C,GAAG,eACHd,KAAK,SACL6D,UAAU,qBAHZ,mBAQA,eAAC,IAAD,CAAMiB,GAAG,kBAAkBjB,UAAU,mBAArC,sCCgJD+M,GA/NQ,SAAC,GAA2B,IAAzBxN,EAAwB,EAAxBA,QACxB,GADgD,EAAfkK,SACLjK,mBAAS,CACnCkC,WAAY,GACZsL,SAAU,GACVC,YAAa,GACbC,gBAAiB,GACjBC,cAAe,GACfV,YAAa,GACb7C,SAAU,MAPZ,mBAAOvK,EAAP,KAAe+N,EAAf,KAWE1L,EAOErC,EAPFqC,WACAsL,EAME3N,EANF2N,SACAC,EAKE5N,EALF4N,YACAC,EAIE7N,EAJF6N,gBACAC,EAGE9N,EAHF8N,cACAV,EAEEpN,EAFFoN,YACA7C,EACEvK,EADFuK,SAEF,EAA4BpK,mBAAS,IAArC,mBAAO+B,EAAP,KAAeiJ,EAAf,KACA,EAA0ChL,mBACxC,8BADF,mBAAOiL,EAAP,KAAsBC,EAAtB,KAIMpK,EAAQC,cACRtE,EAAWuE,cAEjB,EAAkDC,aAChD,SAACC,GAAD,OAAWA,EAAMrB,UADXsN,EAAR,EAAQA,sBAAuB/H,EAA/B,EAA+BA,MAAOhE,EAAtC,EAAsCA,QAIhCmJ,EAAWxK,EAAQkK,SAASO,OAC9BzK,EAAQkK,SAASO,OAAOC,MAAM,KAAK,GACnC,IAEJ9E,qBAAU,WACJwH,GACFpN,EAAQQ,KAAKgK,GAGXnF,IACFtE,EAAMsE,MAAMA,GACZ3I,EAASU,OAEV,CAACV,EAAUqE,EAAOqM,EAAuB/H,EAAOrF,IAEnD,IAgBMW,EAAW,SAACN,GAChB,GAAsB,WAAlBA,EAAEO,OAAO7C,KAAmB,CAE9B,IAAMqN,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WAEY,IAAtBF,EAAOG,aAGTJ,EAAiBC,EAAOI,QACxBP,EAAUG,EAAOI,UAIrBJ,EAAOK,cAAcpL,EAAEO,OAAO8K,MAAM,SAEpCmC,EAAU,2BAAK/N,GAAN,mBAAeO,EAAEO,OAAO7C,KAAOsC,EAAEO,OAAOC,UAIrD,OACE,gBAAC,WAAD,WACE,eAAC,GAAD,CAAU0B,MAAO,oBACjB,sBAAK9B,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,wBACEA,UAAU,YACVL,SA5CY,SAACC,GACrBA,EAAEC,iBACF,IpBH2BqL,EoBGrBhC,EAAW,IAAIC,SAErBD,EAASE,IAAI,aAAc1H,GAC3BwH,EAASE,IAAI,WAAY4D,GACzB9D,EAASE,IAAI,cAAe6D,GAC5B/D,EAASE,IAAI,kBAAmB8D,GAChChE,EAASE,IAAI,gBAAiB+D,GAC9BjE,EAASE,IAAI,cAAeqD,GAC5BvD,EAASE,IAAI,WAAYQ,GACzBV,EAASE,IAAI,SAAU7H,GAEvBtF,GpBd2BiP,EoBcHhC,EpBdE,uCAAc,WAAOjN,GAAP,mBAAAC,EAAA,sEAExCD,EAAS,CAAEE,KAAMkC,IAEXgL,EAAS,CACbC,QAAS,CACP,eAAgB,wBANoB,SAUjBlN,IAAM8N,KAC3B,yBACAgB,EACA7B,GAbsC,gBAUhC/M,EAVgC,EAUhCA,KAMRL,EAAS,CACPE,KAAMmC,GACN/B,QAASD,EAAK+C,SAlBwB,kDAqBxCpD,EAAS,CACPE,KAAMoC,GACNhC,QAAS,KAAME,SAASH,KAAKI,UAvBS,0DAAd,yDoB8ClByO,QAAQ,sBAHV,UAKE,qBAAInL,UAAU,OAAd,6BAEA,uBAAKA,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,yBACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,aACL8C,MAAOsB,EACPxB,SAAUA,OAId,uBAAKF,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,uBACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,WACL8C,MAAO4M,EACP9M,SAAUA,OAId,uBAAKF,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,0BACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,cACL8C,MAAO6M,EACP/M,SAAUA,OAId,uBAAKF,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,+BACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,kBACL8C,MAAO8M,EACPhN,SAAUA,OAId,uBAAKF,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,6BACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,gBACL8C,MAAO+M,EACPjN,SAAUA,OAId,uBAAKF,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,0BACA,wBACEjO,KAAK,QACLc,GAAG,cACH+C,UAAU,eACV1C,KAAK,cACL8C,MAAOqM,EACPvM,SAAUA,OAId,uBAAKF,UAAU,aAAf,UACE,wBAAOoK,QAAQ,iBAAf,sBACA,wBACEjO,KAAK,WACLc,GAAG,iBACH+C,UAAU,eACV1C,KAAK,WACL8C,MAAOwJ,EACP1J,SAAUA,OAId,uBAAKF,UAAU,aAAf,UACE,wBAAOoK,QAAQ,gBAAf,oBACA,uBAAKpK,UAAU,4BAAf,UACE,+BACE,yBAAQA,UAAU,uBAAlB,SACE,sBACEkB,IAAKuJ,EACLzK,UAAU,iBACVwB,IAAI,uBAIV,uBAAKxB,UAAU,cAAf,UACE,wBACE7D,KAAK,OACLmB,KAAK,SACL0C,UAAU,oBACV/C,GAAG,aACHmO,OAAO,WACPlL,SAAUA,IAEZ,wBAAOF,UAAU,oBAAoBoK,QAAQ,aAA7C,oCAON,yBACEnN,GAAG,kBACHd,KAAK,SACL6D,UAAU,qBACVqL,WAAUzK,EAJZ,iCCpIGyM,GA9EO,WACpB,MAA6B5M,aAAY,SAACC,GAAD,OAAWA,EAAMrB,UAAlDA,EAAR,EAAQA,OAAQwB,EAAhB,EAAgBA,SAChB,OACE,+BACE,eAAC,WAAD,UACGA,EACC,eAAC,GAAD,IAEA,gBAAC,WAAD,WACE,eAAC,GAAD,CAAUiB,MAAO,iBACjB,qBAAI9B,UAAU,YAAd,wBACA,uBAAKA,UAAU,4CAAf,UACE,uBAAKA,UAAU,kBAAf,UACE,yBAAQA,UAAU,wBAAlB,SACE,sBACEA,UAAU,2BACVkB,IAAK7B,EAAOkC,OAAO7D,IACnB8D,IAAKnC,EAAO/B,SAGhB,eAAC,IAAD,CACE2D,GAAG,iBACHhE,GAAG,eACH+C,UAAU,iCAHZ,6BASF,uBAAKA,UAAU,kBAAf,UACE,8CACA,6BAAIX,EAAOqC,aAEX,4CACA,6BAAIrC,EAAO2N,WAEX,+CACA,6BAAI3N,EAAO2N,WAEX,gDACA,6BAAI3N,EAAO4N,cAEX,oDACA,6BAAI5N,EAAO6N,kBAEX,kDACA,6BAAI7N,EAAO8N,gBAEX,iDACA,6BAAI9N,EAAOA,SAEX,4CACA,6BAAIkM,OAAOlM,EAAOmM,WAAWC,UAAU,EAAG,MAEzB,WAAhBpM,EAAOsC,MACN,eAAC,IAAD,CACEV,GAAG,cACHjB,UAAU,gCAFZ,uBAQF,eAAC,IAAD,CACEiB,GAAG,mBACHjB,UAAU,iCAFZ,2CCmJDsN,GA3Ma,SAAC,GAAiB,IAAf/N,EAAc,EAAdA,QAC7B,EAAoCC,mBAAS,IAA7C,mBAAOkC,EAAP,KAAmB6L,EAAnB,KACA,EAAgC/N,mBAAS,IAAzC,mBAAOwN,EAAP,KAAiBQ,EAAjB,KACA,EAAsChO,mBAAS,IAA/C,mBAAOyN,EAAP,KAAoBQ,EAApB,KACA,EAA8CjO,mBAAS,IAAvD,mBAAO0N,EAAP,KAAwBQ,EAAxB,KACA,EAA0ClO,mBAAS,IAAnD,mBAAO2N,EAAP,KAAsBQ,EAAtB,KACA,EAAsCnO,mBAAS,IAA/C,mBAAOiN,EAAP,KAAoBC,EAApB,KACA,EAA4BlN,mBAAS,IAArC,mBAAO+B,EAAP,KAAeiJ,EAAf,KACA,EAA0ChL,mBACxC,8BADF,mBAAOiL,EAAP,KAAsBC,EAAtB,KAIMpK,EAAQC,cACRtE,EAAWuE,cAETnB,EAAWoB,aAAY,SAACC,GAAD,OAAWA,EAAMrB,UAAxCA,OACR,EAAsCoB,aAAY,SAACC,GAAD,OAAWA,EAAMkN,WAA3DhJ,EAAR,EAAQA,MAAOgH,EAAf,EAAeA,UAAWhL,EAA1B,EAA0BA,QAE1BuE,qBAAU,WACJ9F,IAEFkO,EAAclO,EAAOqC,YACrB8L,EAAYnO,EAAO2N,UACnBS,EAAepO,EAAO4N,aACtBS,EAAmBrO,EAAO6N,iBAC1BS,EAAiBtO,EAAO8N,eACxBT,EAAerN,EAAOoN,aAEtB/B,EAAiBrL,EAAOkC,OAAO7D,MAG7BkH,IACFtE,EAAMsE,MAAMA,GACZ3I,EAASU,IACTkR,QAAQC,IAAI,WAGVlC,IACFtL,EAAMU,QAAQ,6BACd/E,EAASmD,MAETG,EAAQQ,KAAK,WAEb9D,EAAS,CACPE,KAAM2C,QAGT,CAAC7C,EAAUqE,EAAOsE,EAAOrF,EAASqM,IA6BrC,OACE,gBAAC,WAAD,WACE,eAAC,GAAD,CAAU9J,MAAO,0BAEjB,sBAAK9B,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,wBACEA,UAAU,YACVL,SAnCY,SAACC,GACrBA,EAAEC,iBAEF,ItBsDgCkO,EsBtD1B7E,EAAW,IAAIC,SACrBD,EAASE,IAAI,aAAc1H,GAC3BwH,EAASE,IAAI,WAAY4D,GACzB9D,EAASE,IAAI,cAAe6D,GAC5B/D,EAASE,IAAI,kBAAmB8D,GAChChE,EAASE,IAAI,gBAAiB+D,GAC9BjE,EAASE,IAAI,cAAeqD,GAC5BvD,EAASE,IAAI,SAAU7H,GAEvBtF,GtB6CgC8R,EsB7CH7E,EtB6CE,uCAAgB,WAAOjN,GAAP,mBAAAC,EAAA,sEAE/CD,EAAS,CAAEE,KAAMwC,KAEX0K,EAAS,CACbC,QAAS,CACP,eAAgB,wBAN2B,SAUxBlN,IAAMmN,IAC3B,wBACAwE,EACA1E,GAb6C,gBAUvC/M,EAVuC,EAUvCA,KAMRL,EAAS,CACPE,KAAMyC,GACNrC,QAASD,EAAK+C,SAlB+B,kDAqB/CpD,EAAS,CACPE,KAAM0C,GACNtC,QAAS,KAAME,SAASH,KAAKI,UAvBgB,0DAAhB,yDsBrBvByO,QAAQ,sBAHV,UAKE,qBAAInL,UAAU,YAAd,mCAEA,uBAAKA,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,yBACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,aACL8C,MAAOsB,EACPxB,SAAU,SAACN,GAAD,OAAO2N,EAAc3N,EAAEO,OAAOC,aAI5C,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,uBACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,WACL8C,MAAO4M,EACP9M,SAAU,SAACN,GAAD,OAAO4N,EAAY5N,EAAEO,OAAOC,aAI1C,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,0BACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,cACL8C,MAAO6M,EACP/M,SAAU,SAACN,GAAD,OAAO6N,EAAe7N,EAAEO,OAAOC,aAI7C,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,+BACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,kBACL8C,MAAO8M,EACPhN,SAAU,SAACN,GAAD,OAAO8N,EAAmB9N,EAAEO,OAAOC,aAIjD,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,6BACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACV1C,KAAK,gBACL8C,MAAO+M,EACPjN,SAAU,SAACN,GAAD,OAAO+N,EAAiB/N,EAAEO,OAAOC,aAI/C,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,2BACA,wBACEjO,KAAK,QACLc,GAAG,cACH+C,UAAU,eACV1C,KAAK,cACL8C,MAAOqM,EACPvM,SAAU,SAACN,GAAD,OAAO8M,EAAe9M,EAAEO,OAAOC,aAI7C,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,gBAAf,oBACA,uBAAKpK,UAAU,4BAAf,UACE,+BACE,yBAAQA,UAAU,uBAAlB,SACE,sBACEkB,IAAKuJ,EACLzK,UAAU,iBACVwB,IAAI,uBAIV,uBAAKxB,UAAU,cAAf,UACE,wBACE7D,KAAK,OACLmB,KAAK,SACL0C,UAAU,oBACV/C,GAAG,aACHmO,OAAO,UACPlL,SApHD,SAACN,GAChB,IAAM+K,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WACY,IAAtBF,EAAOG,aACTJ,EAAiBC,EAAOI,QACxBP,EAAUG,EAAOI,UAIrBJ,EAAOK,cAAcpL,EAAEO,OAAO8K,MAAM,OA4GtB,wBAAOjL,UAAU,oBAAoBoK,QAAQ,aAA7C,oCAON,yBACEjO,KAAK,SACL6D,UAAU,qCACVqL,WAAUzK,EAHZ,+B,oCC9KGoN,GAxBQ,SAAC,GAA+C,EAA7CC,QAA8C,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,mBAErE,EAA+C3N,aAC7C,SAACC,GAAD,OAAWA,EAAMC,QADXmJ,EAAR,EAAQA,oBAAqBlJ,EAA7B,EAA6BA,QAA7B,EAAsCpE,KAItC,OACE,eAAC,WAAD,WACe,IAAZoE,GACC,eAAC,IAAD,2BACMwN,GADN,IAEEjN,OAAQ,SAACkN,GACP,OAA4B,IAAxBvE,EACK,eAAC,IAAD,CAAU7I,GAAG,WAGf,eAACiN,EAAD,eAAeG,W,2BCUnBC,GA1BS,SAAC,GAAgD,IAA9CL,EAA6C,EAA7CA,QAAoBC,EAAyB,EAApCC,UAAyBC,EAAW,mBACtE,EAAoD3N,aAClD,SAACC,GAAD,OAAWA,EAAMrB,UADXsN,EAAR,EAAQA,sBAAuB9L,EAA/B,EAA+BA,SAAUxB,EAAzC,EAAyCA,OAGzC,OACE,eAAC,WAAD,WACgB,IAAbwB,GACC,eAAC,IAAD,2BACMuN,GADN,IAEEjN,OAAQ,SAACkN,GACP,OAA8B,IAA1B1B,EACK,eAAC,IAAD,CAAU1L,GAAG,YAGN,IAAZgN,GAAoC,UAAhB5O,EAAOsC,KACtB,eAAC,IAAD,CAAUV,GAAG,MAGf,eAACiN,EAAD,eAAeG,W,mBCudnBE,I,OAneE,SAAC,GAAQ,IAAD,gDACvB,IAAMtS,EAAWuE,cACTyE,EAAYxE,aAAY,SAACC,GAAD,OAAWA,EAAMsE,cAAzCC,QACAhB,EAAaxD,aAAY,SAACC,GAAD,OAAWA,EAAM8N,eAA1CvK,SAER,EAA4CzE,mBAAS,IAArD,mBAAOiP,EAAP,KAAuBC,EAAvB,KACA,EAA0BlP,mBAAS,GAAnC,mBAAOmP,EAAP,KAAcC,EAAd,KACA,EAA4CpP,mBAAS,IAArD,mBAAOqP,EAAP,KAAuBC,EAAvB,KACA,EAAwBtP,mBAAS,IAAjC,mBAAOuP,EAAP,KAAaC,EAAb,KACA,EAAwBxP,mBAAS,IAAjC,mBAAOyP,EAAP,KAAaC,EAAb,KACA,EAAwC1P,mBAAS,IAAjD,mBAAO2P,EAAP,KAAqBC,EAArB,KACA,EAAwB5P,mBAAS,IAAjC,mBAAO6P,GAAP,KAAaC,GAAb,KACA,GAAgC9P,mBAAS,IAAzC,qBAAO+P,GAAP,MAAiBC,GAAjB,MACA,GAAwChQ,mBAAS,IAAjD,qBAAOiQ,GAAP,MAAqBC,GAArB,MACA,GAA0BlQ,mBAAS,IAAnC,qBAAOmQ,GAAP,MAAcC,GAAd,MACA,GAAgCpQ,mBAAS,IAAzC,qBAAOqQ,GAAP,MAAiBC,GAAjB,MACA,GAA0BtQ,mBAAS,IAAnC,qBAAOuQ,GAAP,MAAcC,GAAd,MAEA7K,qBAAU,WACRlJ,EjB2JuB,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,sEAG3BD,EAAS,CAAEE,KAAMqH,KAHU,SAKJpH,IAAMC,IAAI,0BALN,gBAKnBC,EALmB,EAKnBA,KAERL,EAAS,CACLE,KAAMsH,GACNlH,QAASD,EAAK2H,WATS,gDAa3BhI,EAAS,CACLE,KAAMuH,GACNnH,QAAS,yCAfc,yDAAN,yDiB1JtB,IAEH4I,qBAAU,WACR0I,QAAQC,IAAI,kBAAmBe,GAC/BoB,KACApC,QAAQC,IAAI7J,GACZ,IAAMiM,EAAYjM,EAASkM,QAAO,SAACC,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGC,UAAWxB,KACvDH,EAAkB,aAAIwB,MACrB,CAACrB,IAEJ1J,qBAAU,WACR,IAAMmL,EAAQ7B,EAAe0B,QAC3B,SAACC,GAAD,MAAoC,QAA7BA,EAAE1L,SAAS6L,iBAEdC,EAAQ/B,EAAe0B,QAC3B,SAACC,GAAD,MAAoC,iBAA7BA,EAAE1L,SAAS6L,iBAGdE,EAAgBhC,EAAe0B,QACnC,SAACC,GAAD,MAAoC,iBAA7BA,EAAE1L,SAAS6L,iBAGdG,EAAQjC,EAAe0B,QAC3B,SAACC,GAAD,MAAoC,QAA7BA,EAAE1L,SAAS6L,iBAGdI,EAAYlC,EAAe0B,QAC/B,SAACC,GAAD,MAAoC,cAA7BA,EAAE1L,SAAS6L,iBAGdK,EAAgBnC,EAAe0B,QACnC,SAACC,GAAD,MAAoC,gBAA7BA,EAAE1L,SAAS6L,iBAGdM,EAASpC,EAAe0B,QAC5B,SAACC,GAAD,MAAoC,SAA7BA,EAAE1L,SAAS6L,iBAGdO,EAAYrC,EAAe0B,QAC/B,SAACC,GAAD,MAAoC,YAA7BA,EAAE1L,SAAS6L,iBAGpBvB,EAAQsB,GACRpB,EAAQsB,GACRpB,EAAgBqB,GAChBnB,GAAQoB,GACRlB,GAAYmB,GACZjB,GAAgBkB,GAChBhB,GAASiB,GACTf,GAAYgB,KACX,CAACrC,IAEJ,IAAMwB,GAAgB,WACpBD,GAAS,IACThB,EAAQ,IACRN,EAAkB,IAClBQ,EAAQ,IACRE,EAAgB,IAChBE,GAAQ,IACRE,GAAY,IACZE,GAAgB,IAChBE,GAAS,IACTE,GAAY,KAWd,OARA3K,qBAAU,WACR0I,QAAQC,IAAI,gBAAiBiC,IAE7BgB,OAAOC,KAAKjB,IAAOvH,SAAQ,SAACyI,GAC1BrC,EAASD,EAAQoB,GAAMkB,GAAK1T,YAE7B,CAACwS,KAGF,eAAC,WAAD,UACE,uBAAKxK,MAAM,YAAX,UACE,sDAEA,0BACEvF,UAAU,YACVE,SAAU,SAACN,GAAD,OAAOkP,EAAkBlP,EAAEO,OAAOC,QAF9C,UAIE,yBAAQA,MAAO,KAAM8Q,UAAQ,EAA7B,4BAGCjM,EAAQe,KAAI,SAAC3G,GACZ,OACE,yBAAQe,MAAOf,EAAOhC,IAAtB,SACGgC,EAAO2N,UADsB3N,EAAOhC,WAO7C,sBAAKkI,MAAM,MAAX,SACE,sBAAKA,MAAM,SAAX,SACE,uBAAKA,MAAM,OAAX,UACE,sBAAKA,MAAM,wBAAX,SACE,qBAAIA,MAAM,mBAAV,8BAEF,sBAAKA,MAAM,mBAAX,SACE,yBAAOA,MAAM,QAAb,UACE,wBAAOA,MAAM,cAAb,SACE,gCACE,qBAAI4L,MAAM,MAAV,uBACA,qBAAIA,MAAM,MAAV,oBACA,qBAAIA,MAAM,MAAV,uBACA,qBAAIA,MAAM,MAAV,qBACA,qBAAIA,MAAM,MAAV,wBAGJ,yBAAO5L,MAAM,cAAb,UACE,gCACE,8BACE,yCAEF,8BACE,0BACEvF,UAAU,WACVE,SAAU,SAACN,GAAD,OACRoQ,GAAS,2BACJD,IADG,IAENqB,IAAKtT,KAAKuT,MAAMzR,EAAEO,OAAOC,WAL/B,UASE,yBAAQA,MAAO,KAAM8Q,UAAQ,EAA7B,0BAGCnC,EAAK/I,KAAI,SAAC5I,GACT,OACE,yBAEEgD,MAAOtC,KAAKC,UAAUX,GAFxB,SAIGA,EAAQE,MAHJF,EAAQC,aASvB,qCAAK0S,SAAL,IAAKA,IAAL,UAAKA,GAAOqB,WAAZ,aAAK,EAAY9T,OACjB,qCAAKyS,SAAL,IAAKA,IAAL,UAAKA,GAAOqB,WAAZ,aAAK,EAAY7T,QACjB,gCACG,IACD,oBACEgI,MAAM,cACN,cAAY,OACZ9D,QAAS,kBAAMuO,GAAS,2BAAKD,IAAN,IAAaqB,IAAK,SACrC,UAIV,gCACE,8CACA,8BACE,0BACEpR,UAAU,WACVE,SAAU,SAACN,GAAD,OACRoQ,GAAS,2BACJD,IADG,IAENZ,aAAcrR,KAAKuT,MAAMzR,EAAEO,OAAOC,WALxC,UASE,yBAAQA,MAAO,KAAM8Q,UAAQ,EAA7B,kCAGC/B,EAAanJ,KAAI,SAAC5I,GACjB,OACE,yBAEEgD,MAAOtC,KAAKC,UAAUX,GAFxB,SAIGA,EAAQE,MAHJF,EAAQC,aASvB,qCAAK0S,SAAL,IAAKA,IAAL,UAAKA,GAAOZ,oBAAZ,aAAK,EAAqB7R,OAC1B,qCAAKyS,SAAL,IAAKA,IAAL,UAAKA,GAAOZ,oBAAZ,aAAK,EAAqB5R,QAC1B,gCACG,IACD,oBACEgI,MAAM,cACN,cAAY,OACZ9D,QAAS,kBACPuO,GAAS,2BAAKD,IAAN,IAAaZ,aAAc,SAEjC,UAIV,gCACE,sCAEA,8BACE,0BACEnP,UAAU,WACVE,SAAU,SAACN,GAAD,OACRoQ,GAAS,2BACJD,IADG,IAENV,KAAMvR,KAAKuT,MAAMzR,EAAEO,OAAOC,WALhC,UASE,yBAAQA,MAAO,KAAM8Q,UAAQ,EAA7B,0BAGC7B,GAAKrJ,KAAI,SAAC5I,GACT,OACE,yBAEEgD,MAAOtC,KAAKC,UAAUX,GAFxB,SAIGA,EAAQE,MAHJF,EAAQC,aASvB,qCAAK0S,SAAL,IAAKA,IAAL,UAAKA,GAAOV,YAAZ,aAAK,EAAa/R,OAClB,qCAAKyS,SAAL,IAAKA,IAAL,UAAKA,GAAOV,YAAZ,aAAK,EAAa9R,QAClB,gCACG,IACD,oBACEgI,MAAM,cACN,cAAY,OACZ9D,QAAS,kBACPuO,GAAS,2BAAKD,IAAN,IAAaV,KAAM,SAEzB,UAIV,gCACE,4CACA,8BACE,0BACErP,UAAU,WACVE,SAAU,SAACN,GAAD,OACRoQ,GAAS,2BACJD,IADG,IAENR,SAAUzR,KAAKuT,MAAMzR,EAAEO,OAAOC,WALpC,UASE,yBAAQA,MAAO,KAAM8Q,UAAQ,EAA7B,8BAGC3B,GAASvJ,KAAI,SAAC5I,GACb,OACE,yBAEEgD,MAAOtC,KAAKC,UAAUX,GAFxB,SAIGA,EAAQE,MAHJF,EAAQC,aASvB,qCAAK0S,SAAL,IAAKA,IAAL,UAAKA,GAAOR,gBAAZ,aAAK,EAAiBjS,OACtB,qCAAKyS,SAAL,IAAKA,IAAL,UAAKA,GAAOR,gBAAZ,aAAK,EAAiBhS,QACtB,gCACG,IACD,oBACEgI,MAAM,cACN,cAAY,OACZ9D,QAAS,kBACPuO,GAAS,2BAAKD,IAAN,IAAaR,SAAU,SAE7B,UAIV,gCACE,iDACA,gCACG,IACD,0BACEvP,UAAU,WACVE,SAAU,SAACN,GAAD,OACRoQ,GAAS,2BACJD,IADG,IAENuB,aAAcxT,KAAKuT,MAAMzR,EAAEO,OAAOC,WALxC,UASE,yBAAQA,MAAO,KAAM8Q,UAAQ,EAA7B,0BAGCjC,EAAKjJ,KAAI,SAAC5I,GACT,OACE,yBAEEgD,MAAOtC,KAAKC,UAAUX,GAFxB,SAIGA,EAAQE,MAHJF,EAAQC,cASvB,qCAAK0S,SAAL,IAAKA,IAAL,UAAKA,GAAOuB,oBAAZ,aAAK,EAAqBhU,OAC1B,qCAAKyS,SAAL,IAAKA,IAAL,UAAKA,GAAOuB,oBAAZ,aAAK,EAAqB/T,QAC1B,gCACG,IACD,oBACEgI,MAAM,cACN,cAAY,OACZ9D,QAAS,kBACPuO,GAAS,2BAAKD,IAAN,IAAauB,aAAc,SAEjC,UAIV,gCACE,+CACA,8BACE,0BACEtR,UAAU,WACVE,SAAU,SAACN,GAAD,OACRoQ,GAAS,2BACJD,IADG,IAENN,aAAc3R,KAAKuT,MAAMzR,EAAEO,OAAOC,WALxC,UASE,yBAAQA,MAAO,KAAM8Q,UAAQ,EAA7B,kCAGCzB,GAAazJ,KAAI,SAAC5I,GACjB,OACE,yBAEEgD,MAAOtC,KAAKC,UAAUX,GAFxB,SAIGA,EAAQE,MAHJF,EAAQC,aASvB,qCAAK0S,SAAL,IAAKA,IAAL,UAAKA,GAAON,oBAAZ,aAAK,EAAqBnS,OAC1B,qCAAKyS,SAAL,IAAKA,IAAL,UAAKA,GAAON,oBAAZ,aAAK,EAAqBlS,QAC1B,gCACG,IACD,oBACEgI,MAAM,cACN,cAAY,OACZ9D,QAAS,kBACPuO,GAAS,2BAAKD,IAAN,IAAaN,aAAc,SAEjC,UAIV,gCACE,uCACA,8BACE,0BACEzP,UAAU,WACVE,SAAU,SAACN,GAAD,OACRoQ,GAAS,2BACJD,IADG,IAENJ,MAAO7R,KAAKuT,MAAMzR,EAAEO,OAAOC,WALjC,UASE,yBAAQA,MAAO,KAAM8Q,UAAQ,EAA7B,6BAGCvB,GAAM3J,KAAI,SAAC5I,GACV,OACE,yBAEEgD,MAAOtC,KAAKC,UAAUX,GAFxB,SAIGA,EAAQE,MAHJF,EAAQC,aASvB,qCAAK0S,SAAL,IAAKA,IAAL,UAAKA,GAAOJ,aAAZ,aAAK,EAAcrS,OACnB,qCAAKyS,SAAL,IAAKA,IAAL,UAAKA,GAAOJ,aAAZ,aAAK,EAAcpS,QACnB,gCACG,IACD,oBACEgI,MAAM,cACN,cAAY,OACZ9D,QAAS,kBACPuO,GAAS,2BAAKD,IAAN,IAAaJ,MAAO,SAE1B,UAIV,gCACE,4CACA,8BACE,0BACE3P,UAAU,WACVE,SAAU,SAACN,GAAD,OACRoQ,GAAS,2BACJD,IADG,IAENF,SAAU/R,KAAKuT,MAAMzR,EAAEO,OAAOC,WALpC,UASE,yBAAQA,MAAO,KAAM8Q,UAAQ,EAA7B,8BAGCrB,GAAS7J,KAAI,SAAC5I,GACb,OACE,yBAEEgD,MAAOtC,KAAKC,UAAUX,GAFxB,SAIGA,EAAQE,MAHJF,EAAQC,aASvB,qCAAK0S,SAAL,IAAKA,IAAL,UAAKA,GAAOF,gBAAZ,aAAK,EAAiBvS,OACtB,qCAAKyS,SAAL,IAAKA,IAAL,UAAKA,GAAOF,gBAAZ,aAAK,EAAiBtS,QAEtB,gCACG,IACD,oBACEgI,MAAM,cACN,cAAY,OACZ9D,QAAS,kBACPuO,GAAS,2BAAKD,IAAN,IAAaF,SAAU,SAE7B,kBAMhB,wBACA,wBACA,yBAAOtK,MAAM,cAAb,2BAA0CoJ,KAC1C,eAAC,IAAD,CAAM1N,GAAG,QAAT,SACE,yBAAQ9E,KAAK,SAAS6D,UAAU,UAAhC,uBAKF,sCCvaCuR,GA1DC,WACd,OACE,sBAAKvR,UAAU,kBAAf,SACE,sBAAK/C,GAAG,UAAR,SACE,sBAAI+C,UAAU,2BAAd,UACE,8BACE,gBAAC,IAAD,CAAMiB,GAAG,aAAT,UACE,oBAAGjB,UAAU,qBADf,kBAKF,sBAAIoB,MAAO,CAACoQ,SAAU,YAAtB,UACE,qBACEC,KAAK,kBACL,iBAAe,WACf,gBAAc,QACdzR,UAAU,kBAJZ,UAME,oBAAGA,UAAU,uBANf,eAQA,sBAAIA,UAAU,yBAAyB/C,GAAG,iBAA1C,UACE,8BACE,gBAAC,IAAD,CAAMgE,GAAG,kBAAT,UACE,oBAAGjB,UAAU,oBADf,YAKF,8BACE,gBAAC,IAAD,CAAMiB,GAAG,iBAAT,UACE,oBAAGjB,UAAU,eADf,qBAON,8BACE,gBAAC,IAAD,CAAMiB,GAAG,gBAAT,UACE,oBAAGjB,UAAU,0BADf,eAKF,8BACE,gBAAC,IAAD,CAAMiB,GAAG,eAAT,UACE,oBAAGjB,UAAU,gBADf,cAKF,8BACE,gBAAC,IAAD,CAAMiB,GAAG,iBAAT,UACE,oBAAGjB,UAAU,eADf,wBCiEG0R,GA1GG,WAChB,IAAMzV,EAAWuE,cACTnB,EAAUoB,aAAY,SAAAC,GAAK,OAAIA,EAAMrB,UAArCA,OACA4E,EAAaxD,aAAY,SAACC,GAAD,OAAWA,EAAMuD,YAA1CA,SAER,EAA4CzE,mBAAS,IAArD,mBAAOiP,EAAP,KAAuBC,EAAvB,KAEAvJ,qBAAU,WACR,IAAM+K,EAAYjM,EAASkM,QAAO,SAAAC,GAAC,OAAIA,EAAEC,SAAWhR,EAAOhC,OAE3DqR,EAAkBwB,KAClB,CAACjM,IAGH,IAAI0N,EAAa,EAUjB,OATA1N,EAASuE,SAAQ,SAACpL,GACM,IAAlBA,EAAQO,QACVgU,GAAc,MAIlBxM,qBAAU,WACRlJ,EAAS+H,QACR,CAAC/H,IAEF,eAAC,WAAD,UACE,uBAAK+D,UAAU,MAAf,UACE,sBAAKA,UAAU,mBAAf,SACE,eAAC,GAAD,MAGF,uBAAKA,UAAU,mBAAf,UACE,qBAAIA,UAAU,OAAd,uBACA,sBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,4CAAf,SACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,6BAAf,yBAEE,wBAFF,IAES,kCAOjB,uBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,yBAAf,SACE,uBAAKA,UAAU,4CAAf,UACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,6BAAf,qBAEE,wBAFF,IAES,6BAAIyO,GAAkBA,EAAenN,cAGhD,gBAAC,IAAD,CACEtB,UAAU,4CACViB,GAAG,kBAFL,UAIE,uBAAMjB,UAAU,aAAhB,0BACA,uBAAMA,UAAU,cAAhB,SACE,oBAAGA,UAAU,gCAMrB,sBAAKA,UAAU,yBAAf,SACE,uBAAKA,UAAU,2CAAf,UACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,6BAAf,mBAEE,6BAGJ,gBAAC,IAAD,CACEA,UAAU,4CACViB,GAAG,gBAFL,UAIE,uBAAMjB,UAAU,aAAhB,0BACA,uBAAMA,UAAU,cAAhB,SACE,oBAAGA,UAAU,gCAQrB,sBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,4CAAf,SACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,6BAAf,yBAEE,wBAFF,IAES,6BAAI2R,yB,SCmChBC,GA9HM,SAAC,GAAiB,IAAfrS,EAAc,EAAdA,QAChBe,EAAQC,cACRtE,EAAWuE,cAEjB,EAAqCC,aAAY,SAACC,GAAD,OAAWA,EAAMuD,YAA1DrD,EAAR,EAAQA,QAASgE,EAAjB,EAAiBA,MAAOX,EAAxB,EAAwBA,SAChB5E,EAAUoB,aAAY,SAAAC,GAAK,OAAIA,EAAMrB,UAArCA,OACR,EAA4CG,mBAAS,IAArD,mBAEA,GAFA,UAE0CiB,aACxC,SAACC,GAAD,OAAWA,EAAMtD,YADJyU,EAAf,EAAQjN,MAAoBkN,EAA5B,EAA4BA,UAI5B3M,qBAAU,WACRlJ,EAAS+H,MAELY,IACFtE,EAAMsE,MAAMA,GACZ3I,EAASU,KAGPkV,IACFvR,EAAMsE,MAAMiN,GACZ5V,EAASU,KAGPmV,IACFxR,EAAMU,QAAQ,gCACdzB,EAAQQ,KAAK,mBACb9D,EAAS,CAAEE,KAAM0G,QAElB,CAAC5G,EAAUqE,EAAOsE,EAAOiN,EAAaC,EAAWvS,IAEpD,IA4DMwS,EAAuB,SAAC9U,GAC5BhB,EpBwByB,SAACgB,GAAD,8CAAQ,WAAOhB,GAAP,iBAAAC,EAAA,sEAEjCD,EAAS,CAAEE,KAAMuG,KAFgB,SAMVtG,IAAM4V,OAAN,gCACI/U,IAPM,gBAMzBX,EANyB,EAMzBA,KAIRL,EAAS,CACPE,KAAMwG,GACNpG,QAASD,EAAK0E,UAZiB,gDAejC/E,EAAS,CACPE,KAAMyG,GACNrG,QAAS,KAAME,SAASH,KAAKI,UAjBE,yDAAR,sDoBxBhBuV,CAAchV,KAGzB,OACE,gBAAC,WAAD,WACE,eAAC,GAAD,CAAU6E,MAAO,iBACjB,uBAAK9B,UAAU,MAAf,UACE,sBAAKA,UAAU,kBAAf,SACE,eAAC,GAAD,MAGF,sBAAKA,UAAU,mBAAf,SACE,gBAAC,WAAD,WACE,qBAAIA,UAAU,OAAd,0BAECY,EACC,eAAC,GAAD,IAEA,eAAC,KAAD,CACEtE,KAhFM,WAClB,IAAMA,EAAO,CACX4V,QAAS,CACP,CACEC,MAAO,KACPC,MAAO,KACPC,KAAM,OAER,CACEF,MAAO,OACPC,MAAO,OACPC,KAAM,OAER,CACEF,MAAO,QACPC,MAAO,QACPC,KAAM,OAER,CACEF,MAAO,QACPC,MAAO,QACPC,KAAM,OAER,CACEF,MAAO,UACPC,MAAO,YAGXE,KAAM,IA6BR,OA1BArO,EAASuE,SAAQ,SAACpL,GACbA,EAAQiT,SAAWhR,EAAOhC,KAC5Bf,EAAKgW,KAAKvS,KAAK,CACd9C,GAAIG,EAAQC,IACZC,KAAMF,EAAQE,KACdC,MAAM,GAAD,OAAKH,EAAQG,MAAb,MACLI,MAAOP,EAAQO,MACf4U,QACE,gBAAC,WAAD,WACE,eAAC,IAAD,CACEtR,GAAE,yBAAoB7D,EAAQC,KAC9B2C,UAAU,4BAFZ,SAIE,oBAAGA,UAAU,mBAEf,yBACEA,UAAU,gCACVyB,QAAS,kBAAMsQ,EAAqB3U,EAAQC,MAF9C,SAIE,oBAAG2C,UAAU,0BAOhB1D,EAuBWkW,GACNxS,UAAU,OACVyS,UAAQ,EACRC,SAAO,EACPC,OAAK,gBCoHNC,GA3OI,SAAC,GAAiB,IAAfrT,EAAc,EAAdA,QACpB,EAA4BC,mBAAS,IAArC,mBAAO6Q,EAAP,KAAewC,EAAf,KACA,EAAwBrT,mBAAS,IAAjC,mBAAOlC,EAAP,KAAaqO,EAAb,KACA,EAA0BnM,mBAAS,GAAnC,mBAAOjC,EAAP,KAAckH,EAAd,KACA,EAAsCjF,mBAAS,IAA/C,mBAAO4I,EAAP,KAAoB0K,EAApB,KACA,EAAgCtT,mBAAS,IAAzC,mBAAOkF,EAAP,KAAiBC,EAAjB,KACA,EAA0BnF,mBAAS,GAAnC,mBAAO7B,EAAP,KAAcoV,EAAd,KAEA,EAA4BvT,mBAAS,IAArC,mBAAO/B,EAAP,KAAeuV,EAAf,KACA,EAA0CxT,mBAAS,IAAnD,mBAAOyT,EAAP,KAAsBC,EAAtB,KAuBM5S,EAAQC,cACRtE,EAAWuE,cAEjB,EAAoCC,aAAY,SAACC,GAAD,OAAWA,EAAMyS,cAAzDvS,EAAR,EAAQA,QAASgE,EAAjB,EAAiBA,MAAO5D,EAAxB,EAAwBA,QAChB3B,EAAUoB,aAAY,SAAAC,GAAK,OAAIA,EAAMrB,UAArCA,OAER8F,qBAAU,WACJP,IACFtE,EAAMsE,MAAMA,GACZ3I,EAASU,OAGPqE,IACFzB,EAAQQ,KAAK,mBACbO,EAAMU,QAAQ,gCACd/E,EAAS,CAAEE,KAAMsG,QAElB,CAACxG,EAAUqE,EAAOsE,EAAO5D,EAASzB,IAyCrC,OACE,gBAAC,WAAD,WACE,eAAC,GAAD,CAAUuC,MAAO,gBACjB,uBAAK9B,UAAU,MAAf,UACE,sBAAKA,UAAU,kBAAf,SACE,eAAC,GAAD,MAGF,sBAAKA,UAAU,mBAAf,SACE,eAAC,WAAD,UACE,sBAAKA,UAAU,eAAf,SACE,wBACEA,UAAU,YACVL,SApDQ,SAACC,GACrBA,EAAEC,iBAEF,IrBoCuBuT,EqBpCjBlK,EAAW,IAAIC,SACrBD,EAASE,IAAI,SAAU/J,EAAOhC,KAC9B6L,EAASE,IAAI,OAAQ9L,GACrB4L,EAASE,IAAI,QAAS7L,GACtB2L,EAASE,IAAI,cAAehB,GAC5Bc,EAASE,IAAI,WAAY1E,GACzBwE,EAASE,IAAI,QAASzL,GACtBuL,EAASE,IAAI,SAAU/J,EAAO/B,MAE9BG,EAAO+K,SAAQ,SAAChL,GACd0L,EAASmK,OAAO,SAAU7V,MAG5BvB,GrBuBuBmX,EqBvBHlK,ErBuBE,uCAAiB,WAAOjN,GAAP,mBAAAC,EAAA,sEAEvCD,EAAS,CAAEE,KAAMmG,KAEX+G,EAAS,CACbC,QAAS,CACP,eAAgB,qBANmB,SAUhBlN,IAAM8N,KAAN,4BAErBkJ,EACA/J,GAbqC,gBAU/B/M,EAV+B,EAU/BA,KAMRL,EAAS,CACPE,KAAMoG,GACNhG,QAASD,IAlB4B,kDAqBvCL,EAAS,CACPE,KAAMqG,GACNjG,QAAS,KAAME,SAASH,KAAKI,UAvBQ,0DAAjB,yDqBcVyO,QAAQ,sBAHV,UAKE,qBAAInL,UAAU,OAAd,yBAEA,uBAAKA,UAAU,aAAf,UACE,wBAAOoK,QAAQ,aAAf,qBACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACVI,MAAOiQ,EACPnQ,SAAU,SAACN,GAAD,OAAOiT,EAAUjT,EAAEO,OAAOC,aAIxC,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,aAAf,kBACA,wBACEjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACVI,MAAO9C,EACP4C,SAAU,SAACN,GAAD,OAAO+L,EAAQ/L,EAAEO,OAAOC,aAItC,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,mBACA,wBACEjO,KAAK,OACLc,GAAG,cACH+C,UAAU,eACVI,MAAO7C,EACP2C,SAAU,SAACN,GAAD,OAAO6E,EAAS7E,EAAEO,OAAOC,aAIvC,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,oBAAf,yBACA,2BACEpK,UAAU,eACV/C,GAAG,oBACHqV,KAAK,IACLlS,MAAOgI,EACPlI,SAAU,SAACN,GAAD,OAAOkT,EAAelT,EAAEO,OAAOC,aAI7C,uBAAKJ,UAAU,aAAf,UACE,wBAAOoK,QAAQ,iBAAf,sBACA,yBACEpK,UAAU,eACV/C,GAAG,iBACHmD,MAAOsE,EACPxE,SAAU,SAACN,GAAD,OAAO+E,EAAY/E,EAAEO,OAAOC,QAJxC,SA/IG,CACjB,cACA,UACA,UACA,YACA,cACA,eACA,aACA,eACA,MACA,YACA,MACA,YACA,QACA,aACA,MACA,cACA,OACA,WAmI4B4F,KAAI,SAACtB,GAAD,OACd,yBAAuBtE,MAAOsE,EAA9B,SACGA,GADUA,WAMnB,uBAAK1E,UAAU,aAAf,UACE,wBAAOoK,QAAQ,cAAf,mBACA,wBACEjO,KAAK,SACLc,GAAG,cACH+C,UAAU,eACVI,MAAOzC,EACPuC,SAAU,SAACN,GAAD,OAAOmT,EAASnT,EAAEO,OAAOC,aAevC,uBAAKJ,UAAU,aAAf,UACE,4CAEA,uBAAKA,UAAU,cAAf,UACE,wBACE7D,KAAK,OACLmB,KAAK,iBACL0C,UAAU,oBACV/C,GAAG,aACHiD,SAhIH,SAACN,GAChB,IAAMqL,EAAQqI,MAAMC,KAAK3T,EAAEO,OAAO8K,OAElCiI,EAAiB,IACjBF,EAAU,IAEV/H,EAAMzC,SAAQ,SAACgL,GACb,IAAM7I,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WACY,IAAtBF,EAAOG,aACToI,GAAiB,SAACO,GAAD,6BAAkBA,GAAlB,CAA4B9I,EAAOI,YACpDiI,GAAU,SAACS,GAAD,6BAAkBA,GAAlB,CAA4B9I,EAAOI,cAIjDJ,EAAOK,cAAcwI,OAiHLE,UAAQ,IAEV,wBAAO1T,UAAU,oBAAoBoK,QAAQ,aAA7C,8BAKD6I,EAAcjN,KAAI,SAAC2N,GAAD,OACjB,sBACEzS,IAAKyS,EAELnS,IAAI,iBACJxB,UAAU,YACViH,MAAM,KACN2M,OAAO,MAJFD,SASX,yBACE1W,GAAG,eACHd,KAAK,SACL6D,UAAU,qBACVqL,WAAUzK,EAJZ,oCCkBDiT,GA5OO,SAAC,GAAwB,IAAtBvP,EAAqB,EAArBA,MAAO/E,EAAc,EAAdA,QAE5B,EAAwBC,mBAAS,IAAjC,mBAAOlC,EAAP,KAAaqO,EAAb,KACA,EAA0BnM,mBAAS,GAAnC,mBAAOjC,EAAP,KAAckH,EAAd,KACA,EAAsCjF,mBAAS,IAA/C,mBAAO4I,EAAP,KAAoB0K,EAApB,KACA,EAAgCtT,mBAAS,IAAzC,mBAAOkF,EAAP,KAAiBC,EAAjB,KACA,EAA0BnF,mBAAS,GAAnC,mBAAO7B,EAAP,KAAcoV,EAAd,KACA,EAA4BvT,mBAAS,IAArC,mBAAOsU,EAAP,KAAeC,EAAf,KACA,EAA4BvU,mBAAS,IAArC,mBAAO/B,EAAP,KAAeuV,EAAf,KAEA,EAAkCxT,mBAAS,IAA3C,mBAAOwU,EAAP,KAAkBC,EAAlB,KACA,EAA0CzU,mBAAS,IAAnD,mBAAOyT,EAAP,KAAsBC,EAAtB,KAuBM5S,EAAQC,cACRtE,EAAWuE,cAEjB,EAA2BC,aAAY,SAAAC,GAAK,OAAIA,EAAM8G,kBAA9C5C,EAAR,EAAQA,MAAOxH,EAAf,EAAeA,QACf,EAAmDqD,aAAY,SAAAC,GAAK,OAAIA,EAAMtD,WAAtEwD,EAAR,EAAQA,QAAgBsT,EAAxB,EAAiBtP,MAAoBgH,GAArC,EAAqCA,UAE/BuI,GAAY7P,EAAMY,OAAOjI,GAE/BkI,qBAAU,WAEF/H,GAAWA,EAAQC,MAAQ8W,GAC3BlY,EAAS8H,GAAkBoQ,MAE3BxI,EAAQvO,EAAQE,MAChBmH,EAASrH,EAAQG,OACjBuV,EAAe1V,EAAQgL,aACvBzD,EAAYvH,EAAQsH,UACpBqP,EAAU3W,EAAQ0W,QAClBf,EAAS3V,EAAQO,OACjBsW,EAAa7W,EAAQK,SAGrBmH,IACAtE,EAAMsE,MAAMA,GACZ3I,EAASU,KAGTuX,IACA5T,EAAMsE,MAAMsP,GACZjY,EAASU,KAITiP,KACArM,EAAQQ,KAAK,mBACbO,EAAMU,QAAQ,gCACd/E,EAAS,CAAEE,KAAM8G,QAGtB,CAAChH,EAAUqE,EAAOsE,EAAOgH,GAAWrM,EAAS2U,EAAa9W,EAAS+W,KA4CtE,OACI,gBAAC,WAAD,WACI,eAAC,GAAD,CAAUrS,MAAO,mBACjB,uBAAK9B,UAAU,MAAf,UACI,sBAAKA,UAAU,kBAAf,SACI,eAAC,GAAD,MAGJ,sBAAKA,UAAU,mBAAf,SACI,eAAC,WAAD,UACI,sBAAKA,UAAU,eAAf,SACI,wBAAMA,UAAU,YAAYL,SApD9B,SAACC,GACnBA,EAAEC,iBAEF,ItBiEsB5C,EAAImW,EsBjEpBlK,EAAW,IAAIC,SACrBD,EAASE,IAAI,OAAQ9L,GACrB4L,EAASE,IAAI,QAAS7L,GACtB2L,EAASE,IAAI,cAAehB,GAC5Bc,EAASE,IAAI,WAAY1E,GACzBwE,EAASE,IAAI,QAASzL,GACtBuL,EAASE,IAAI,SAAU0K,GAEvBrW,EAAO+K,SAAQ,SAAAhL,GACX0L,EAASmK,OAAO,SAAU7V,MAG9BvB,GtBqDsBgB,EsBrDCG,EAAQC,ItBqDL+V,EsBrDUlK,EtBqDf,uCAAqB,WAAOjN,GAAP,mBAAAC,EAAA,sEAE9CD,EAAS,CAAEE,KAAM2G,KAEXuG,EAAS,CACbC,QAAS,CACP,eAAgB,qBAN0B,SAUvBlN,IAAMmN,IAAN,gCACItM,GACzBmW,EACA/J,GAb4C,gBAUtC/M,EAVsC,EAUtCA,KAMRL,EAAS,CACPE,KAAM4G,GACNxG,QAASD,EAAK0E,UAlB8B,kDAqB9C/E,EAAS,CACPE,KAAM6G,GACNzG,QAAS,KAAME,SAASH,KAAKI,UAvBe,0DAArB,yDsBhBoDyO,QAAQ,sBAA7D,UACI,qBAAInL,UAAU,OAAd,4BAEA,uBAAKA,UAAU,aAAf,UACI,wBAAOoK,QAAQ,aAAf,kBACA,wBACIjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACVI,MAAO9C,EACP4C,SAAU,SAACN,GAAD,OAAO+L,EAAQ/L,EAAEO,OAAOC,aAI1C,uBAAKJ,UAAU,aAAf,UACI,wBAAOoK,QAAQ,cAAf,mBACA,wBACIjO,KAAK,OACLc,GAAG,cACH+C,UAAU,eACVI,MAAO7C,EACP2C,SAAU,SAACN,GAAD,OAAO6E,EAAS7E,EAAEO,OAAOC,aAI3C,uBAAKJ,UAAU,aAAf,UACI,wBAAOoK,QAAQ,oBAAf,yBACA,2BAAUpK,UAAU,eAAe/C,GAAG,oBAAoBqV,KAAK,IAAIlS,MAAOgI,EAAalI,SAAU,SAACN,GAAD,OAAOkT,EAAelT,EAAEO,OAAOC,aAGpI,uBAAKJ,UAAU,aAAf,UACI,wBAAOoK,QAAQ,iBAAf,sBACA,yBAAQpK,UAAU,eAAe/C,GAAG,iBAAiBmD,MAAOsE,EAAUxE,SAAU,SAACN,GAAD,OAAO+E,EAAY/E,EAAEO,OAAOC,QAA5G,SAnJb,CACf,cACA,UACA,UACA,YACA,cACA,eACA,aACA,eACA,MACA,YACA,MACA,YACA,QACA,aACA,MACA,cACA,OACA,WAkI4C4F,KAAI,SAAAtB,GAAQ,OACpB,yBAAuBtE,MAAOsE,EAA9B,SAA0CA,GAA7BA,WAKzB,uBAAK1E,UAAU,aAAf,UACI,wBAAOoK,QAAQ,cAAf,mBACA,wBACIjO,KAAK,SACLc,GAAG,cACH+C,UAAU,eACVI,MAAOzC,EACPuC,SAAU,SAACN,GAAD,OAAOmT,EAASnT,EAAEO,OAAOC,aAI3C,uBAAKJ,UAAU,aAAf,UACI,wBAAOoK,QAAQ,eAAf,yBACA,wBACIjO,KAAK,OACLc,GAAG,eACH+C,UAAU,eACVI,MAAO0T,EACP5T,SAAU,SAACN,GAAD,OAAOmU,EAAUnU,EAAEO,OAAOC,aAI5C,uBAAKJ,UAAU,aAAf,UACI,4CAEA,uBAAKA,UAAU,cAAf,UACI,wBACI7D,KAAK,OACLmB,KAAK,iBACL0C,UAAU,oBACV/C,GAAG,aACHiD,SAxGvB,SAAAN,GAEb,IAAMqL,EAAQqI,MAAMC,KAAK3T,EAAEO,OAAO8K,OAElCiI,EAAiB,IACjBF,EAAU,IACViB,EAAa,IAEbhJ,EAAMzC,SAAQ,SAAAgL,GACV,IAAM7I,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WACc,IAAtBF,EAAOG,aACPoI,GAAiB,SAAAO,GAAQ,6BAAQA,GAAR,CAAkB9I,EAAOI,YAClDiI,GAAU,SAAAS,GAAQ,6BAAQA,GAAR,CAAkB9I,EAAOI,cAInDJ,EAAOK,cAAcwI,OAuFWE,UAAQ,IAEZ,wBAAO1T,UAAU,oBAAoBoK,QAAQ,aAA7C,8BAKH4J,GAAaA,EAAUhO,KAAI,SAAA2N,GAAG,OAC3B,sBAAezS,IAAKyS,EAAIjW,IAAK8D,IAAKmS,EAAIjW,IAAKsC,UAAU,YAAYiH,MAAM,KAAK2M,OAAO,MAAzED,MAGbV,EAAcjN,KAAI,SAAA2N,GAAG,OAClB,sBAAKzS,IAAKyS,EAAenS,IAAI,iBAAiBxB,UAAU,YAAYiH,MAAM,KAAK2M,OAAO,MAAlED,SAM5B,yBACI1W,GAAG,eACHd,KAAK,SACL6D,UAAU,qBACVqL,WAAUzK,EAJd,oC,6BClOnBwT,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBvY,GAAe,eAEfwY,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBAEjBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAIlBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBCI5BC,GAAUC,2BAAgB,CAC9BhR,SCW8B,WAAuC,IAAtCvD,EAAqC,uDAA7B,CAAEuD,SAAU,IAAMiR,EAAW,uCACpE,OAAQA,EAAO/Y,MACb,KAAKgG,GACL,KAAKe,GACH,MAAO,CACLtC,SAAS,EACTqD,SAAU,IAGd,KAAK7B,GACH,MAAO,CACLxB,SAAS,EACTqD,SAAUiR,EAAO3Y,QAAQ0H,SACzBY,cAAeqQ,EAAO3Y,QAAQsI,cAC9BC,WAAYoQ,EAAO3Y,QAAQuI,WAC3BC,qBAAsBmQ,EAAO3Y,QAAQwI,sBAGzC,KAAK5B,GACH,MAAO,CACLvC,SAAS,EACTqD,SAAUiR,EAAO3Y,SAGrB,KAAK8F,GACL,KAAKe,GACH,MAAO,CACLxC,SAAS,EACTgE,MAAOsQ,EAAO3Y,SAGlB,KAAKR,GACH,OAAO,2BACF2E,GADL,IAEEkE,MAAO,OAGX,QACE,OAAOlE,IDhDX8G,eCoDmC,WAAsC,IAArC9G,EAAoC,uDAA5B,CAAEtD,QAAS,IAAM8X,EAAW,uCACxE,OAAQA,EAAO/Y,MACb,KAAKkH,GACH,OAAO,2BACF3C,GADL,IAEEE,SAAS,IAGb,KAAK0C,GACH,MAAO,CACL1C,SAAS,EACTxD,QAAS8X,EAAO3Y,SAGpB,KAAKgH,GACH,OAAO,2BACF7C,GADL,IAEEkE,MAAOsQ,EAAO3Y,UAGlB,KAAKR,GACH,OAAO,2BACF2E,GADL,IAEEkE,MAAO,OAGX,QACE,OAAOlE,ID9EXyS,WCkF+B,WAAsC,IAArCzS,EAAoC,uDAA5B,CAAEtD,QAAS,IAAM8X,EAAW,uCACpE,OAAQA,EAAO/Y,MACb,KAAKmG,GACH,OAAO,2BACF5B,GADL,IAEEE,SAAS,IAGb,KAAK2B,GACH,MAAO,CACL3B,SAAS,EACTI,QAASkU,EAAO3Y,QAAQyE,QACxB5D,QAAS8X,EAAO3Y,QAAQa,SAG5B,KAAKoF,GACH,OAAO,2BACF9B,GADL,IAEEkE,MAAOsQ,EAAO3Y,UAGlB,KAAKkG,GACH,OAAO,2BACF/B,GADL,IAEEM,SAAS,IAGb,KAAKjF,GACH,OAAO,2BACF2E,GADL,IAEEkE,MAAO,OAGX,QACE,OAAOlE,IDnHXtD,QC0H4B,WAA0B,IAAzBsD,EAAwB,uDAAhB,GAAKwU,EAAW,uCACrD,OAAQA,EAAO/Y,MACb,KAAKuG,GACH,KAAKI,GACL,OAAO,2BACFpC,GADL,IAEEE,SAAS,IAGb,KAAK+B,GACH,OAAO,2BACFjC,GADL,IAEEE,SAAS,EACTkR,UAAWoD,EAAO3Y,UAKtB,KAAKwG,GACH,OAAO,2BACFrC,GADL,IAEEE,SAAS,EACTgL,UAAWsJ,EAAO3Y,UAItB,KAAKqG,GACH,KAAKI,GACL,OAAO,2BACFtC,GADL,IAEEkE,MAAOsQ,EAAO3Y,UAGlB,KAAKsG,GACH,OAAO,2BACFnC,GADL,IAEEoR,WAAW,IAGb,KAAK7O,GACH,OAAO,2BACFvC,GADL,IAEEkL,WAAW,IAGjB,KAAK7P,GACH,OAAO,2BACF2E,GADL,IAEEkE,MAAO,OAGX,QACE,OAAOlE,ID7KX8N,YCoLiC,WAAuC,IAAtC9N,EAAqC,uDAA7B,CAAEuD,SAAU,IAAMiR,EAAW,uCACvE,OAAQA,EAAO/Y,MACb,KAAKqH,GAEL,MAAO,CACH5C,SAAS,EACTqD,SAAU,IAGd,KAAKR,GACH,MAAO,CACL7C,SAAS,EACTqD,SAAUiR,EAAO3Y,SAKrB,KAAKmH,GAEH,MAAO,CACL9C,SAAS,EACTgE,MAAOsQ,EAAO3Y,SAGlB,KAAKR,GACH,OAAO,2BACF2E,GADL,IAEEkE,MAAO,OAGX,QACE,OAAOlE,IDlNX+G,UCwN8B,WAAyB,IAAxB/G,EAAuB,uDAAf,GAAIwU,EAAW,uCACtD,OAAQA,EAAO/Y,MAEX,KAAKwH,GACD,OAAO,2BACAjD,GADP,IAEIE,SAAS,IAGjB,KAAKgD,GACD,MAAO,CACHhD,SAAS,EACTI,QAASkU,EAAO3Y,SAGxB,KAAKuH,GACD,OAAO,2BACApD,GADP,IAEIkE,MAAOsQ,EAAO3Y,UAGtB,KAAKsH,GACD,OAAO,2BACAnD,GADP,IAEIM,SAAS,IAGjB,KAAKjF,GACD,OAAO,2BACA2E,GADP,IAEIkE,MAAO,OAGf,QACI,OAAOlE,IDxPfC,KEAyB,WAAmC,IAAlCD,EAAiC,uDAAzB,CAAElE,KAAM,IAAM0Y,EAAW,uCAE3D,OAAQA,EAAO/Y,MACb,KAAK7B,EACL,KAAKG,EACL,KAAKG,EACH,MAAO,CACLgG,SAAS,EACTkJ,qBAAqB,GAGzB,KAAKvP,EACL,KAAKG,EACL,KAAKG,EACH,OAAO,2BACF6F,GADL,IAEEE,SAAS,EACTkJ,qBAAqB,EACrBtN,KAAM0Y,EAAO3Y,UAGjB,KAAKxB,EACH,MAAO,CACL6F,SAAS,EACTkJ,qBAAqB,EACrBtN,KAAM,MAGV,KAAK1B,EACH,MAAO,CACL8F,SAAS,EACTkJ,qBAAqB,EACrBtN,KAAM,KACNoI,MAAOsQ,EAAO3Y,SAGlB,KAAKvB,EACH,OAAO,2BACF0F,GADL,IAEEyU,MAAOD,EAAO3Y,UAGlB,KAAK/B,EACL,KAAKG,EACH,OAAO,2BACF+F,GADL,IAEEE,SAAS,EACTwU,iBAAiB,EACjB5Y,KAAM,KACNoI,MAAOsQ,EAAO3Y,UAGlB,KAAKR,EACH,OAAO,2BACF2E,GADL,IAEEkE,MAAO,OAGX,QACE,OAAOlE,IF1DXrB,OGV2B,WAAqC,IAApCqB,EAAmC,uDAA3B,CAAErB,OAAQ,IAAM6V,EAAW,uCAC/D,OAAQA,EAAO/Y,MACb,KAAK+B,EACL,KAAKG,EACL,KAAKG,GACH,MAAO,CACLqC,UAAU,EACV8L,uBAAuB,GAG3B,KAAKxO,EACL,KAAKG,GACL,KAAKG,GACH,OAAO,2BACFiC,GADL,IAEEG,UAAU,EACV8L,uBAAuB,EACvBtN,OAAQ6V,EAAO3Y,UAGnB,KAAKwC,GACH,MAAO,CACL8B,UAAU,EACV8L,uBAAuB,EACvBtN,OAAQ,MAGZ,KAAKX,GACH,MAAO,CACLmC,UAAU,EACV8L,uBAAuB,EACvBtN,OAAQ,KACRuF,MAAOsQ,EAAO3Y,SAGlB,KAAKyC,GACH,OAAO,2BACF0B,GADL,IAEEyU,MAAOD,EAAO3Y,UAGlB,KAAK6B,EACL,KAAKG,GACH,OAAO,2BACFmC,GADL,IAEEG,UAAU,EACV8L,uBAAuB,EACvBtN,OAAQ,KACRuF,MAAOsQ,EAAO3Y,UAGlB,KAAKR,GACH,OAAO,2BACF2E,GADL,IAEEkE,MAAO,OAGX,QACE,OAAOlE,IH/CXkN,QGmD4B,WAAyB,IAAxBlN,EAAuB,uDAAf,GAAIwU,EAAW,uCACpD,OAAQA,EAAO/Y,MACb,KAAKwC,GACH,OAAO,2BACF+B,GADL,IAEEE,SAAS,IAGb,KAAKhC,GACH,OAAO,2BACF8B,GADL,IAEEE,SAAS,EACTyU,UAAWH,EAAO3Y,UAGtB,KAAKuC,GACH,OAAO,2BACF4B,GADL,IAEEkL,WAAW,IAGf,KAAK/M,GACH,OAAO,2BACF6B,GADL,IAEEE,SAAS,EACTgE,MAAOsQ,EAAO3Y,UAElB,QACE,OAAOmE,IH9EXsE,WGmF+B,WAAoC,IAAnCtE,EAAkC,uDAA1B,CAACuE,QAAS,IAAKiQ,EAAW,uCAClE,OAAQA,EAAO/Y,MAEb,KAAK8C,GACH,OAAO,2BACFyB,GADL,IAEEE,SAAS,IAMb,KAAK1B,GACH,OAAO,2BACFwB,GADL,IAEEuE,QAASiQ,EAAO3Y,UAIpB,KAAK4C,GAOL,KAAKpD,GACH,OAAO,2BACF2E,GADL,IAEEE,SAAS,EACTgE,MAAOsQ,EAAO3Y,UAGlB,QACE,OAAOmE,IHlHXlE,KEyDyB,WAAyB,IAAxBkE,EAAuB,uDAAf,GAAIwU,EAAW,uCACjD,OAAQA,EAAO/Y,MACb,KAAKlB,EACL,KAAKI,EACH,OAAO,2BACFqF,GADL,IAEEE,SAAS,IAGb,KAAK1F,EACL,KAAKI,EACH,OAAO,2BACFoF,GADL,IAEEE,SAAS,EACTgL,UAAWsJ,EAAO3Y,UAGtB,KAAKnB,EACL,KAAKG,EACH,OAAO,2BACFmF,GADL,IAEE4U,WAAW,IAGf,KAAKna,EACL,KAAKK,EACH,OAAO,2BACFkF,GADL,IAEEE,SAAS,EACTgE,MAAOsQ,EAAO3Y,UAGlB,KAAKR,EACH,OAAO,2BACF2E,GADL,IAEEkE,MAAO,OAGX,QACE,OAAOlE,IF/FXyL,eEmGmC,WAAyB,IAAxBzL,EAAuB,uDAAf,GAAIwU,EAAW,uCAC3D,OAAQA,EAAO/Y,MACb,KAAKV,EACL,KAAKG,EACH,OAAO,2BACF8E,GADL,IAEEE,SAAS,EACTgE,MAAO,OAGX,KAAKlJ,EACH,OAAO,2BACFgF,GADL,IAEEE,SAAS,EACTlE,QAASwY,EAAO3Y,UAGpB,KAAKV,EACH,OAAO,2BACF6E,GADL,IAEEM,QAASkU,EAAO3Y,UAGpB,KAAKZ,EACL,KAAKG,EACH,OAAO,2BACF4E,GADL,IAEEE,SAAS,EACTgE,MAAOsQ,EAAO3Y,UAGlB,KAAKR,EACH,OAAO,2BACF2E,GADL,IAEEkE,MAAO,OAGX,QACE,OAAOlE,IFxIX1C,KIhCyB,WAGrB,IAFJ0C,EAEG,uDAFK,CAAEzC,UAAW,GAAIsX,aAAc,IACvCL,EACG,uCAEH,OAAQA,EAAO/Y,MACb,KAAKY,EACH,MAAO,CACLkB,UAAW,GACXsX,aAAc,IAGlB,KAAK3Y,EACH,IAAM4Y,EAAON,EAAO3Y,QACdkZ,EAAc/U,EAAMzC,UAAUyX,MAClC,SAACC,GAAD,OAAOA,EAAEvY,UAAYoY,EAAKpY,WAG5B,OAAIqY,EACK,2BACF/U,GADL,IAEEzC,UAAWyC,EAAMzC,UAAU+H,KAAI,SAAC2P,GAAD,OAC7BA,EAAEvY,UAAYqY,EAAYrY,QAAUoY,EAAOG,OAIxC,2BACFjV,GADL,IAEEzC,UAAU,GAAD,oBAAMyC,EAAMzC,WAAZ,CAAuBuX,MAItC,KAAK3Y,EACH,OAAO,2BACF6D,GADL,IAEEzC,UAAWyC,EAAMzC,UAAUkS,QAAO,SAACwF,GAAD,OAAOA,EAAEvY,UAAY8X,EAAO3Y,aAGlE,KAAKO,EACH,OAAO,2BACF4D,GADL,IAEE6U,aAAcL,EAAO3Y,UAGzB,QACE,OAAOmE,IJXXkV,SKzB6B,WAAyB,IAAxBlV,EAAuB,uDAAf,GAAIwU,EAAW,uCACrD,OAAQA,EAAO/Y,MAEX,KAAKiY,GACD,OAAO,2BACA1T,GADP,IAEIE,SAAS,IAGjB,KAAKyT,GACD,MAAO,CACHzT,SAAS,EACTiV,MAAOX,EAAO3Y,SAGtB,KAAK+X,GACD,MAAO,CACH1T,SAAS,EACTgE,MAAOsQ,EAAO3Y,SAGtB,KAAKR,GACD,OAAO,2BACA2E,GADP,IAEIkE,MAAO,OAGf,QACI,OAAOlE,ILFfoV,SKO6B,WAAqC,IAApCpV,EAAmC,uDAA3B,CAAEqV,OAAQ,IAAMb,EAAW,uCAC/D,OAAQA,EAAO/Y,MAEX,KAAKoY,GACD,MAAO,CACH3T,SAAS,GAGjB,KAAK4T,GACD,MAAO,CACH5T,SAAS,EACTmV,OAAQb,EAAO3Y,SAGvB,KAAKkY,GACD,MAAO,CACH7T,SAAS,EACTgE,MAAOsQ,EAAO3Y,SAEtB,KAAKR,GACD,OAAO,2BACA2E,GADP,IAEIkE,MAAO,OAGf,QACI,OAAOlE,ILhCjBsV,aKqCiC,WAAoC,IAAnCtV,EAAkC,uDAA1B,CAAEmV,MAAO,IAAMX,EAAW,uCAClE,OAAQA,EAAO/Y,MAEX,KAAK0Y,GACD,MAAO,CACHjU,SAAS,GAGjB,KAAKkU,GACD,MAAO,CACHlU,SAAS,EACTiV,MAAOX,EAAO3Y,SAGtB,KAAKwY,GACD,MAAO,CACHnU,SAAS,EACTgE,MAAOsQ,EAAO3Y,SAEtB,KAAKR,GACD,OAAO,2BACA2E,GADP,IAEIkE,MAAO,OAGf,QACI,OAAOlE,IL9DjBuV,UKkE8B,WAAqC,IAApCvV,EAAmC,uDAA3B,CAAEqV,OAAQ,IAAMb,EAAW,uCAChE,OAAQA,EAAO/Y,MAEX,KAAKuY,GACD,MAAO,CACH9T,SAAS,GAGjB,KAAK+T,GACD,MAAO,CACH/T,SAAS,EACTmV,OAAQb,EAAO3Y,QAAQwZ,OACvBG,YAAahB,EAAO3Y,QAAQ2Z,aAGpC,KAAKtB,GACD,MAAO,CACHhU,SAAS,EACTgE,MAAOsQ,EAAO3Y,SAEtB,KAAKR,GACD,OAAO,2BACA2E,GADP,IAEIkE,MAAO,OAGf,QACI,OAAOlE,ML1FfyV,GAAe,CACjBnY,KAAM,CACJC,UAAWL,aAAawY,QAAQ,aAC5BtY,KAAKuT,MAAMzT,aAAawY,QAAQ,cAChC,GAEFb,aAAc3X,aAAawY,QAAQ,gBACjCtY,KAAKuT,MAAMzT,aAAawY,QAAQ,iBAChC,KAIFC,GAAa,CAACC,MAOLC,GANDC,uBACZxB,GACAmB,GACAM,+BAAoBC,mBAAe,WAAf,EAAmBL,MMoG1BM,GA3JF,SAAC,GAAgB,IAAfpX,EAAc,EAAdA,QACPtD,EAAWuE,cAETvC,EAAcwC,aAAY,SAACC,GAAD,OAAWA,EAAM1C,QAA3CC,UAEF2Y,EAAwB,SAAC3Z,GAC7BhB,ExCgB8B,SAACgB,GAAD,8CAAQ,WAAOhB,EAAUkB,GAAjB,SAAAjB,EAAA,sDACxCD,EAAS,CACPE,KAAMU,EACNN,QAASU,IAGXW,aAAaC,QAAQ,YAAaC,KAAKC,UAAUZ,IAAWa,KAAKC,YANzB,2CAAR,wDwChBrB4Y,CAAmB5Z,KAuB9B,OACE,gBAAC,WAAD,WACE,eAAC,GAAD,CAAU6E,MAAO,cACK,IAArB7D,EAAUqD,OACT,qBAAItB,UAAU,OAAd,gCAEA,gBAAC,WAAD,WACE,sBAAIA,UAAU,OAAd,wBACa,+BAAI/B,EAAUqD,OAAd,eAGb,uBAAKtB,UAAU,qCAAf,UACE,sBAAKA,UAAU,kBAAf,SACG/B,EAAU+H,KAAI,SAACwP,GAAD,OACb,gBAAC,WAAD,WACE,wBAEA,sBAAKxV,UAAU,YAAf,SACE,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,sBAAKkB,IAAKsU,EAAKhY,MAAOgE,IAAI,GAAGoS,OAAO,KAAK3M,MAAM,UAGjD,sBAAKjH,UAAU,iBAAf,SACE,eAAC,IAAD,CAAMiB,GAAE,oBAAeuU,EAAKpY,SAA5B,SACGoY,EAAKlY,SAIV,sBAAK0C,UAAU,8BAAf,SACE,qBAAG/C,GAAG,kBAAN,eAA2BuY,EAAKjY,WAGlC,sBAAKyC,UAAU,8BAAf,SACE,uBAAKA,UAAU,wBAAf,UACE,uBACEA,UAAU,uBACVyB,QACE,kBAlDR,SAACxE,EAAIC,GACvB,IAAM4Z,EAAS5Z,EAAW,EAEtB4Z,GAAU,GAEd7a,EAASe,EAAcC,EAAI6Z,IA6CKC,CAAYvB,EAAKpY,QAASoY,EAAKtY,WAHzC,eASA,wBACEf,KAAK,SACL6D,UAAU,8BACVI,MAAOoV,EAAKtY,SACZiL,UAAQ,IAGV,uBACEnI,UAAU,uBACVyB,QAAS,kBAzEf,SAACxE,EAAIC,EAAUS,GACjC,IAAMmZ,EAAS5Z,EAAW,EAEtB4Z,EAASnZ,GAEb1B,EAASe,EAAcC,EAAI6Z,IAqEDE,CACExB,EAAKpY,QACLoY,EAAKtY,SACLsY,EAAK7X,QANX,oBAeJ,sBAAKqC,UAAU,8BAAf,SACE,oBACE/C,GAAG,mBACH+C,UAAU,6BACVyB,QAAS,kBAAMmV,EAAsBpB,EAAKpY,kBArDlBoY,EAAKpY,SA0DrC,gCAKN,sBAAK4C,UAAU,uBAAf,SACE,uBAAK/C,GAAG,gBAAR,UACE,gDACA,wBACA,2CACY,IACV,wBAAM+C,UAAU,uBAAhB,UACG/B,EAAUgZ,QAET,SAACC,EAAK1B,GAAN,OAAe0B,EAAMC,OAAO3B,EAAKtY,YACjC,GACC,IALL,gBASF,6CACc,IACZ,wBAAM8C,UAAU,uBAAhB,eAEG/B,EACEgZ,QACC,SAACC,EAAK1B,GAAN,OAAe0B,EAAM1B,EAAKtY,SAAWsY,EAAKjY,QAC1C,GAGD6Z,QAAQ,SAIf,wBACA,yBACEna,GAAG,eACH+C,UAAU,4BACVyB,QArHQ,WACtBlC,EAAQQ,KAAK,6BAiHD,sC,UC/FDsX,GAhDO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAC7C,OACI,uBAAKxX,UAAU,uDAAf,UAIKsX,EAAW,gBAAC,IAAD,CAAMrW,GAAG,YAAYjB,UAAU,cAA/B,UACR,sBAAKA,UAAU,qBACf,sBAAKA,UAAU,mBAAf,sBACA,sBAAKA,UAAU,uBAIT,gBAAC,IAAD,CAAMiB,GAAG,KAAKoK,UAAQ,EAAtB,UACF,sBAAKrL,UAAU,yBACf,sBAAKA,UAAU,kBAAf,sBACA,sBAAKA,UAAU,2BAKtBuX,EAAe,gBAAC,IAAD,CAAMtW,GAAG,iBAAiBjB,UAAU,cAApC,UACZ,sBAAKA,UAAU,qBACf,sBAAKA,UAAU,mBAAf,2BACA,sBAAKA,UAAU,uBAIT,gBAAC,IAAD,CAAMiB,GAAG,KAAKoK,UAAQ,EAAtB,UACF,sBAAKrL,UAAU,yBACf,sBAAKA,UAAU,kBAAf,2BACA,sBAAKA,UAAU,2BAGtBwX,EAAU,gBAAC,IAAD,CAAMvW,GAAG,WAAWjB,UAAU,cAA9B,UACP,sBAAKA,UAAU,qBACf,sBAAKA,UAAU,mBAAf,qBACA,sBAAKA,UAAU,uBACT,gBAAC,IAAD,CAAMiB,GAAG,KAAKoK,UAAQ,EAAtB,UACF,sBAAKrL,UAAU,yBACf,sBAAKA,UAAU,kBAAf,qBACA,sBAAKA,UAAU,+BCgFpByX,GApHE,SAAC,GAAiB,IAAflY,EAAc,EAAdA,QAEVmY,EAAgB3G,OAAO4G,OAAOC,cAE5BrC,EAAiB9U,aAAY,SAAAC,GAAK,OAAIA,EAAM1C,QAA5CuX,aAER,EAA8B/V,mBAAS+V,EAAasC,SAApD,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAwBtY,mBAAS+V,EAAawC,MAA9C,mBAAOA,EAAP,KAAaC,EAAb,KACA,EAAoCxY,mBAAS+V,EAAa0C,YAA1D,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAA8B1Y,mBAAS+V,EAAa4C,SAApD,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAA8B5Y,mBAAS+V,EAAa8C,SAApD,mBAAOA,EAAP,KAAgBC,EAAhB,KAEMrc,EAAWuE,cAWjB,OACI,gBAAC,WAAD,WAEI,eAAC,GAAD,CAAUsB,MAAO,kBAEjB,eAAC,GAAD,CAAewV,UAAQ,IAEvB,sBAAKtX,UAAU,cAAf,SACI,sBAAKA,UAAU,kBAAf,SACI,wBAAMA,UAAU,YAAYL,SAlBtB,SAACC,G1CgBK,IAACtD,E0CfzBsD,EAAEC,iBAIF5D,G1CWyBK,E0CXC,CAAEub,UAASE,OAAMI,UAASF,aAAYI,W1CWxC,uCAAU,WAAOpc,GAAP,SAAAC,EAAA,sDACxCD,EAAS,CACPE,KAAMW,EACNP,QAASD,IAGXsB,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUzB,IANZ,2CAAV,wD0CVxBiD,EAAQQ,KAAK,aAYD,UACI,qBAAIC,UAAU,OAAd,2BACA,uBAAKA,UAAU,aAAf,UACI,wBAAOoK,QAAQ,gBAAf,qBACA,wBACIjO,KAAK,OACLc,GAAG,gBACH+C,UAAU,eACVI,MAAOyX,EACP3X,SAAU,SAACN,GAAD,OAAOkY,EAAWlY,EAAEO,OAAOC,QACrCmY,UAAQ,OAIhB,uBAAKvY,UAAU,aAAf,UACI,wBAAOoK,QAAQ,aAAf,kBACA,wBACIjO,KAAK,OACLc,GAAG,aACH+C,UAAU,eACVI,MAAO2X,EACP7X,SAAU,SAACN,GAAD,OAAOoY,EAAQpY,EAAEO,OAAOC,QAClCmY,UAAQ,OAIhB,uBAAKvY,UAAU,aAAf,UACI,wBAAOoK,QAAQ,cAAf,sBACA,wBACIjO,KAAK,QACLc,GAAG,cACH+C,UAAU,eACVI,MAAO+X,EACPjY,SAAU,SAACN,GAAD,OAAOwY,EAAWxY,EAAEO,OAAOC,QACrCmY,UAAQ,OAIhB,uBAAKvY,UAAU,aAAf,UACI,wBAAOoK,QAAQ,oBAAf,yBACA,wBACIjO,KAAK,SACLc,GAAG,oBACH+C,UAAU,eACVI,MAAO6X,EACP/X,SAAU,SAACN,GAAD,OAAOsY,EAActY,EAAEO,OAAOC,QACxCmY,UAAQ,OAIhB,uBAAKvY,UAAU,aAAf,UACI,wBAAOoK,QAAQ,gBAAf,qBACA,yBACInN,GAAG,gBACH+C,UAAU,eACVI,MAAOiY,EACPnY,SAAU,SAACN,GAAD,OAAO0Y,EAAW1Y,EAAEO,OAAOC,QACrCmY,UAAQ,EALZ,SAQKb,EAAc1R,KAAI,SAAAqS,GAAO,OACtB,yBAA2BjY,MAAOiY,EAAQ/a,KAA1C,SACK+a,EAAQ/a,MADA+a,EAAQ/a,cAQjC,yBACIL,GAAG,eACHd,KAAK,SACL6D,UAAU,qBAHd,iCCPTwY,GA/FM,SAAC,GAAiB,IAAfjZ,EAAc,EAAdA,QAEpB,EAAoCkB,aAAY,SAAAC,GAAK,OAAIA,EAAM1C,QAAvDC,EAAR,EAAQA,UAAWsX,EAAnB,EAAmBA,aACX/Y,EAASiE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCnE,KAGFic,EAAaxa,EAAUgZ,QAAO,SAACC,EAAK1B,GAAN,OAAe0B,EAAM1B,EAAKjY,MAAQiY,EAAKtY,WAAU,GAG/Ewb,EAAgBD,EAAa,IAAM,EAAI,GACvCE,EAAWxB,QAAQ,IAAOsB,GAAYrB,QAAQ,IAC9CwB,GAAcH,EAAaC,EAAgBC,GAAUvB,QAAQ,GAcnE,OACI,gBAAC,WAAD,WAEI,eAAC,GAAD,CAAUtV,MAAO,kBAEjB,eAAC,GAAD,CAAewV,UAAQ,EAACC,cAAY,IAEpC,uBAAKvX,UAAU,qCAAf,UACI,uBAAKA,UAAU,qCAAf,UAEI,qBAAIA,UAAU,OAAd,2BACA,+BAAG,uCAAH,IAAiBxD,GAAQA,EAAKc,QAC9B,+BAAG,wCAAH,IAAkBiY,EAAa4C,WAC/B,qBAAGnY,UAAU,OAAb,UAAoB,0CAApB,cAAwCuV,EAAasC,QAArD,aAAiEtC,EAAawC,KAA9E,aAAuFxC,EAAa0C,WAApG,aAAmH1C,EAAa8C,YAEhI,wBACA,qBAAIrY,UAAU,OAAd,8BAEC/B,EAAU+H,KAAI,SAAAwP,GAAI,OACf,gBAAC,WAAD,WACI,wBACA,sBAAKxV,UAAU,iBAAf,SACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,iBAAf,SACI,sBAAKkB,IAAKsU,EAAKhY,MAAOgE,IAAI,SAASoS,OAAO,KAAK3M,MAAM,SAGzD,sBAAKjH,UAAU,iBAAf,SACI,eAAC,IAAD,CAAMiB,GAAE,0BAAR,SAAsCuU,EAAKlY,SAI/C,sBAAK0C,UAAU,8BAAf,SACI,+BAAIwV,EAAKtY,SAAT,OAAuBsY,EAAKjY,MAA5B,MAAqC,8BAAKiY,EAAKtY,SAAWsY,EAAKjY,OAAO6Z,QAAQ,cAZrD5B,EAAKpY,SAiB1C,iCAQZ,sBAAK4C,UAAU,uBAAf,SACI,uBAAK/C,GAAG,gBAAR,UACI,gDACA,wBACA,6CAAc,uBAAM+C,UAAU,uBAAhB,SAAwCyY,OACtD,4CAAa,uBAAMzY,UAAU,uBAAhB,SAAwC0Y,OACrD,wCAAS,uBAAM1Y,UAAU,uBAAhB,SAAwC2Y,OAEjD,wBAEA,yCAAU,uBAAM3Y,UAAU,uBAAhB,SAAwC4Y,OAElD,wBACA,yBAAQ3b,GAAG,eAAe+C,UAAU,4BAA4ByB,QAvE3D,WACrB,IAAMnF,EAAO,CACTmc,WAAYA,EAAWrB,QAAQ,GAC/BsB,gBACAC,WACAC,cAGJC,eAAehb,QAAQ,YAAaC,KAAKC,UAAUzB,IACnDiD,EAAQQ,KAAK,aA8DG,4CCzET+Y,GAAc,SAACjD,GAAD,8CAAW,WAAO5Z,EAAUkB,GAAjB,mBAAAjB,EAAA,sEAGhCD,EAAS,CAAEE,KAAMiY,KAEX/K,EAAS,CACXC,QAAS,CACL,eAAgB,qBAPQ,SAWTlN,IAAM8N,KAAK,oBAAqB2L,EAAOxM,GAX9B,gBAWxB/M,EAXwB,EAWxBA,KAERL,EAAS,CACLE,KAAMkY,GACN9X,QAASD,IAfmB,kDAmBhCL,EAAS,CACLE,KAAMmY,GACN/X,QAAS,KAAME,SAASH,KAAKI,UArBD,0DAAX,yDA6FhBC,GAAe,SAACV,GAC3BA,EAAS,CACLE,KAAMJ,M,SCrGNgd,GAAU,CACZ3X,MAAO,CACH4X,KAAM,CACFC,SAAU,QAEdC,QAAS,CACLC,MAAO,aAqKJC,GAhKC,SAAC,GAAiB,IAAf7Z,EAAc,EAAdA,QAETe,EAAQC,cACR8Y,EAASC,uBACTC,EAAWC,yBACXvd,EAAWuE,cAEThE,EAASiE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCnE,KACR,EAAoCiE,aAAY,SAAAC,GAAK,OAAIA,EAAM1C,QAAvDC,EAAR,EAAQA,UAAWsX,EAAnB,EAAmBA,aACX3Q,EAAUnE,aAAY,SAAAC,GAAK,OAAIA,EAAMkV,YAArChR,MAERO,qBAAU,WACFP,IACAtE,EAAMsE,MAAMA,GACZ3I,EAASU,OAId,CAACV,EAAUqE,EAAOsE,IAErB,IAAMiR,EAAQ,CACV4D,WAAYxb,EACZsX,gBAKEmE,EAAY5b,KAAKuT,MAAMwH,eAAezC,QAAQ,cAChDsD,IACA7D,EAAM4C,WAAaiB,EAAUjB,WAC7B5C,EAAM6C,cAAgBgB,EAAUhB,cAChC7C,EAAM8C,SAAWe,EAAUf,SAC3B9C,EAAM+C,WAAac,EAAUd,YAGjC,IAAMe,EAAc,CAChBC,OAAQC,KAAKC,MAA6B,IAAvBJ,EAAUd,aAG3BmB,EAAa,uCAAG,WAAOna,GAAP,qBAAA1D,EAAA,6DAClB0D,EAAEC,iBAEFkI,SAASC,cAAc,YAAYqD,UAAW,EAH5B,SAQRhC,EAAS,CACXC,QAAS,CACL,eAAgB,qBAVV,SAcFlN,IAAM8N,KAAK,0BAA4ByP,EAAatQ,GAdlD,UAcd2Q,EAdc,OAgBRC,EAAeD,EAAI1d,KAAK4d,cAE9BrM,QAAQC,IAAImM,GAEPZ,GAAWE,EApBF,oEAwBOF,EAAOc,mBAAmBF,EAAc,CACzDG,eAAgB,CACZC,KAAMd,EAASe,WAAWC,sBAC1BC,gBAAiB,CACbld,KAAMd,EAAKc,KACXoM,MAAOlN,EAAKkN,UA7BV,SAwBRqB,EAxBQ,QAkCHnG,OACPtE,EAAMsE,MAAMmG,EAAOnG,MAAMlI,SACzBqL,SAASC,cAAc,YAAYqD,UAAW,GAIV,cAAhCN,EAAO0P,cAAcC,QAErB7E,EAAM8E,YAAc,CAChB1d,GAAI8N,EAAO0P,cAAcxd,GACzByd,OAAQ3P,EAAO0P,cAAcC,QAGjCze,EAAS6c,GAAYjD,IAErBtW,EAAQQ,KAAK,aAEbO,EAAMsE,MAAM,gDAnDN,kDAyDdmD,SAASC,cAAc,YAAYqD,UAAW,EAC9C/K,EAAMsE,MAAM,KAAMnI,SAASH,KAAKI,SAEhCmR,QAAQC,IAAI,KAAMrR,SAASH,MA5Db,0DAAH,sDAgEnB,OACI,gBAAC,WAAD,WACI,eAAC,GAAD,CAAUwF,MAAO,YAEjB,eAAC,GAAD,CAAewV,UAAQ,EAACC,cAAY,EAACC,SAAO,IAE5C,sBAAKxX,UAAU,cAAf,SACI,sBAAKA,UAAU,kBAAf,SACI,wBAAMA,UAAU,YAAYL,SAAUoa,EAAtC,UACI,qBAAI/Z,UAAU,OAAd,uBACA,uBAAKA,UAAU,aAAf,UACI,wBAAOoK,QAAQ,iBAAf,yBACA,eAAC,qBAAD,CACIjO,KAAK,OACLc,GAAG,iBACH+C,UAAU,eACV+Y,QAASA,QAIjB,uBAAK/Y,UAAU,aAAf,UACI,wBAAOoK,QAAQ,iBAAf,yBACA,eAAC,qBAAD,CACIjO,KAAK,OACLc,GAAG,iBACH+C,UAAU,eACV+Y,QAASA,QAIjB,uBAAK/Y,UAAU,aAAf,UACI,wBAAOoK,QAAQ,iBAAf,sBACA,eAAC,kBAAD,CACIjO,KAAK,OACLc,GAAG,iBACH+C,UAAU,eACV+Y,QAASA,QAKjB,0BACI9b,GAAG,UACHd,KAAK,SACL6D,UAAU,qBAHd,8BAKe0Z,GAAaA,EAAUd,0BCpJ/CgC,GArBM,WACjB,OACI,gBAAC,WAAD,WAEI,eAAC,GAAD,CAAU9Y,MAAO,kBAEjB,sBAAK9B,UAAU,6BAAf,SACI,uBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,iCAAiCkB,IAAI,iCAAiCM,IAAI,gBAAgByF,MAAM,MAAM2M,OAAO,QAE5H,2EAEA,eAAC,IAAD,CAAM3S,GAAG,eAAT,mCCkFL4Z,GAvFI,WAEf,IAAMva,EAAQC,cACRtE,EAAWuE,cAEjB,EAAmCC,aAAY,SAAAC,GAAK,OAAIA,EAAMoV,YAAtDlV,EAAR,EAAQA,QAASgE,EAAjB,EAAiBA,MAAOmR,EAAxB,EAAwBA,OAExB5Q,qBAAU,WACNlJ,EH2BgB,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,sEAGtBD,EAAS,CAAEE,KAAMoY,KAHK,SAKCnY,IAAMC,IAAI,uBALX,gBAKdC,EALc,EAKdA,KAERL,EAAS,CACLE,KAAMqY,GACNjY,QAASD,EAAKyZ,SATI,gDAatB9Z,EAAS,CACLE,KAAMsY,GACNlY,QAAS,KAAME,SAASH,KAAKI,UAfX,yDAAN,uDGzBZkI,IACAtE,EAAMsE,MAAMA,GACZ3I,EAASU,OAEd,CAACV,EAAUqE,EAAOsE,IAoDrB,OACI,gBAAC,WAAD,WAEI,eAAC,GAAD,CAAU9C,MAAO,cAEjB,qBAAI9B,UAAU,OAAd,uBAECY,EAAU,eAAC,GAAD,IACP,eAAC,KAAD,CACItE,KA3DE,WACd,IAAMA,EAAO,CACT4V,QAAS,CACL,CACIC,MAAO,WACPC,MAAO,KACPC,KAAM,OAEV,CACIF,MAAO,eACPC,MAAO,aACPC,KAAM,OAEV,CACIF,MAAO,SACPC,MAAO,SACPC,KAAM,OAEV,CACIF,MAAO,SACPC,MAAO,SACPC,KAAM,OAEV,CACIF,MAAO,UACPC,MAAO,UACPC,KAAM,QAGdC,KAAM,IAkBV,OAfAyD,EAAOvN,SAAQ,SAAAqN,GACXvZ,EAAKgW,KAAKvS,KAAK,CACX9C,GAAI4Y,EAAMxY,IACVyd,WAAYjF,EAAM4D,WAAWnY,OAC7BsY,OAAO,GAAD,OAAK/D,EAAM+C,WAAX,OACN8B,OAAQ7E,EAAMkF,aAAexP,OAAOsK,EAAMkF,aAAaC,SAAS,aAC1D,oBAAG5Z,MAAO,CAAE+X,MAAO,SAAnB,SAA+BtD,EAAMkF,cACrC,oBAAG3Z,MAAO,CAAE+X,MAAO,OAAnB,SAA6BtD,EAAMkF,cACzCxI,QACI,eAAC,IAAD,CAAMtR,GAAE,iBAAY4U,EAAMxY,KAAO2C,UAAU,kBAA3C,SACI,oBAAGA,UAAU,qBAKtB1D,EAYW2e,GACNjb,UAAU,OACVyS,UAAQ,EACRC,SAAO,EACPC,OAAK,QCGVuI,GAnFM,SAAC,GAAe,IAAb5W,EAAY,EAAZA,MAEdhE,EAAQC,cACRtE,EAAWuE,cAEjB,EAAuCC,aAAY,SAAAC,GAAK,OAAIA,EAAMsV,gBAA1DpV,EAAR,EAAQA,QAASgE,EAAjB,EAAiBA,MAAjB,IAAwBiR,aAAxB,MAAgC,GAAhC,EACQN,EAAyEM,EAAzEN,aAAckE,EAA2D5D,EAA3D4D,WAAYkB,EAA+C9E,EAA/C8E,YAAane,EAAkCqZ,EAAlCrZ,KAAMoc,EAA4B/C,EAA5B+C,WAAYmC,EAAgBlF,EAAhBkF,YAEjE5V,qBAAU,WJiDiB,IAAClI,EIhDxBhB,GJgDwBgB,EIhDCqH,EAAMY,OAAOjI,GJgDf,uCAAQ,WAAOhB,GAAP,iBAAAC,EAAA,sEAI/BD,EAAS,CAAEE,KAAM0Y,KAJc,SAMRzY,IAAMC,IAAN,wBAA2BY,IANnB,gBAMvBX,EANuB,EAMvBA,KAERL,EAAS,CACLE,KAAM2Y,GACNvY,QAASD,EAAKuZ,QAVa,gDAc/B5Z,EAAS,CACLE,KAAM4Y,GACNxY,QAAS,KAAME,SAASH,KAAKI,UAhBF,yDAAR,wDI9CnBkI,IACAtE,EAAMsE,MAAMA,GACZ3I,EAASU,OAEd,CAACV,EAAUqE,EAAOsE,EAAON,EAAMY,OAAOjI,KAEzC,IAAMke,EAAkB5F,GAAY,UAAOA,EAAasC,QAApB,aAAgCtC,EAAawC,KAA7C,aAAsDxC,EAAa0C,WAAnE,aAAkF1C,EAAa8C,SAE7H+C,KAAST,GAAsC,cAAvBA,EAAYD,QAE1C,OACI,gBAAC,WAAD,WACI,eAAC,GAAD,CAAU5Y,MAAO,kBAEhBlB,EAAU,eAAC,GAAD,IACP,eAAC,WAAD,UACI,sBAAKZ,UAAU,qCAAf,SACI,uBAAKA,UAAU,qCAAf,UAEI,sBAAIA,UAAU,OAAd,qBAA8B6V,EAAMxY,OAEpC,qBAAI2C,UAAU,OAAd,2BACA,+BAAG,uCAAH,IAAiBxD,GAAQA,EAAKc,QAC9B,+BAAG,wCAAH,IAAkBiY,GAAgBA,EAAa4C,WAC/C,qBAAGnY,UAAU,OAAb,UAAoB,0CAAgBmb,KACpC,+BAAG,yCAAH,IAAmBvC,EAAnB,SAEA,wBAEA,qBAAI5Y,UAAU,OAAd,qBACA,oBAAGA,UAAWob,EAAS,aAAe,WAAtC,SAAkD,6BAAIA,EAAS,OAAS,eAGxE,qBAAIpb,UAAU,OAAd,2BACA,oBAAGA,UAAW6V,EAAMkF,aAAexP,OAAOsK,EAAMkF,aAAaC,SAAS,aAAe,aAAe,WAApG,SAAiH,6BAAID,MAGrH,qBAAI/a,UAAU,OAAd,0BAEA,wBACA,sBAAKA,UAAU,iBAAf,SACKyZ,GAAcA,EAAWzT,KAAI,SAAAwP,GAAI,OAC9B,uBAAwBxV,UAAU,WAAlC,UACI,sBAAKA,UAAU,iBAAf,SACI,sBAAKkB,IAAKsU,EAAKhY,MAAOgE,IAAKgU,EAAKlY,KAAMsW,OAAO,KAAK3M,MAAM,SAG5D,sBAAKjH,UAAU,iBAAf,SACI,eAAC,IAAD,CAAMiB,GAAE,oBAAeuU,EAAKpY,SAA5B,SAAwCoY,EAAKlY,SAIjD,sBAAK0C,UAAU,8BAAf,SACI,mCAAKwV,EAAKjY,MAAV,WAGJ,sBAAKyC,UAAU,8BAAf,SACI,+BAAIwV,EAAKtY,SAAT,mBAfEsY,EAAKpY,cAoBvB,mCCmCbie,GAzGI,SAAC,GAAiB,IAAf9b,EAAc,EAAdA,QAEZe,EAAQC,cACRtE,EAAWuE,cAEjB,EAAmCC,aAAY,SAAAC,GAAK,OAAIA,EAAMuV,aAAtDrV,EAAR,EAAQA,QAASgE,EAAjB,EAAiBA,MAAOmR,EAAxB,EAAwBA,OAGxB5Q,qBAAU,WACNlJ,ELmEiB,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,sEAGvBD,EAAS,CAAEE,KAAMuY,KAHM,SAKAtY,IAAMC,IAAN,wBALA,gBAKfC,EALe,EAKfA,KAERL,EAAS,CACLE,KAAMwY,GACNpY,QAASD,IATU,gDAavBL,EAAS,CACLE,KAAMyY,GACNrY,QAAS,KAAME,SAASH,KAAKI,UAfV,yDAAN,uDKjEbkI,IACAtE,EAAMsE,MAAMA,GACZ3I,EAASU,OAId,CAACV,EAAUqE,EAAOsE,EAAQrF,IA0D7B,OACI,gBAAC,WAAD,WACI,eAAC,GAAD,CAAUuC,MAAO,eACjB,uBAAK9B,UAAU,MAAf,UACI,sBAAKA,UAAU,kBAAf,SACI,eAAC,GAAD,MAGJ,sBAAKA,UAAU,mBAAf,SACI,gBAAC,WAAD,WACI,qBAAIA,UAAU,OAAd,wBAECY,EAAU,eAAC,GAAD,IACP,eAAC,KAAD,CACItE,KApEV,WACd,IAAMA,EAAO,CACT4V,QAAS,CACL,CACIC,MAAO,WACPC,MAAO,KACPC,KAAM,OAEV,CACIF,MAAO,cACPC,MAAO,aACPC,KAAM,OAEV,CACIF,MAAO,SACPC,MAAO,SACPC,KAAM,OAEV,CACIF,MAAO,SACPC,MAAO,SACPC,KAAM,OAEV,CACIF,MAAO,UACPC,MAAO,YAGfE,KAAM,IAsBV,OAnBAyD,EAAOvN,SAAQ,SAAAqN,GACXvZ,EAAKgW,KAAKvS,KAAK,CACX9C,GAAI4Y,EAAMxY,IACVie,WAAYzF,EAAM4D,WAAWnY,OAC7BsY,OAAO,GAAD,OAAK/D,EAAM+C,YACjB8B,OAAQ7E,EAAMkF,aAAexP,OAAOsK,EAAMkF,aAAaC,SAAS,aAC1D,oBAAG5Z,MAAO,CAAE+X,MAAO,SAAnB,SAA+BtD,EAAMkF,cACrC,oBAAG3Z,MAAO,CAAE+X,MAAO,OAAnB,SAA6BtD,EAAMkF,cACzCxI,QAAS,gBAAC,WAAD,WACL,eAAC,IAAD,CAAMtR,GAAE,2BAA8BjB,UAAU,4BAAhD,SACI,oBAAGA,UAAU,gBAEjB,yBAAQA,UAAU,gCAAlB,SACI,oBAAGA,UAAU,0BAMtB1D,EAkBuB2e,GACNjb,UAAU,OACVyS,UAAQ,EACRC,SAAO,EACPC,OAAK,gB,UC+DtB4I,OAxGf,WAGA,MAAuC/b,mBAAS,IAAhD,mBAAMgc,EAAN,KAAoBC,EAApB,KAgBE,OAdAtW,qBAAU,WAAM,4CAKd,8BAAAjJ,EAAA,sEACuBE,IAAMC,IAAI,qBADjC,gBACSC,EADT,EACSA,KAEPuR,QAAQC,IAAIxR,EAAKkf,cACjBC,EAAgBnf,EAAKkf,cAJvB,4CALc,sBACdjF,GAAMta,SAASD,KACfua,GAAMta,SAASmD,MACfmX,GAAMta,ShD2EgB,uCAAM,WAAOA,GAAP,eAAAC,EAAA,sEAE5B2R,QAAQC,IAAI,uBACZ7R,EAAS,CAAEE,KAAM8C,KACjB4O,QAAQC,IAAI,QAJgB,SAKV1R,IAAMC,IAAI,yBALA,OAKtBqf,EALsB,OAM5B7N,QAAQC,IAAI,WAAY4N,GAExBzf,EAAS,CACPE,KAAM+C,GACN3C,QAASmf,EAAIpf,KAAK2I,UAVQ,kDAa5B4I,QAAQC,IAAI,eACZ7R,EAAS,CACPE,KAAMgD,GACN5C,QAAS,KAAME,SAASH,KAAKI,UAhBH,0DAAN,uDgD9ER,mCAWdif,KACA,IAGA,eAAC,IAAD,UACE,uBAAK3b,UAAU,MAAf,UACE,eAAC,GAAD,IACA,eAAC,IAAD,CAAO4b,KAAK,IAAIzN,UAAW9J,GAAMwX,OAAK,IACtC,eAAC,IAAD,CAAOD,KAAK,mBAAmBzN,UAAW9J,KAC1C,eAAC,IAAD,CAAOuX,KAAK,eAAezN,UAAW/G,GAAgByU,OAAK,IAG3D,eAAC,IAAD,CAAOD,KAAK,QAAQzN,UAAWwI,GAAMkF,OAAK,IAC1C,eAAC,GAAD,CAAgBD,KAAK,YAAYzN,UAAWsJ,KAE5C,eAAC,GAAD,CAAgBmE,KAAK,WAAWzN,UAAWqK,KAC3C,eAAC,GAAD,CAAgBoD,KAAK,WAAWzN,UAAW2N,KAE3C,eAAC,GAAD,CAAgBF,KAAK,eAAezN,UAAW0M,KAC/C,eAAC,GAAD,CAAgBe,KAAK,aAAazN,UAAW+M,KAC7C,eAAC,GAAD,CAAiBU,KAAK,gBAAgB3N,SAAS,EAAME,UAAWkN,GAAYQ,OAAK,IAIhFL,GACA,eAAC,YAAD,CAAUnC,OAAQ0C,aAAWP,GAA7B,SACC,eAAC,GAAD,CAAgBI,KAAK,WAAWzN,UAAWiL,OAI7C,eAAC,IAAD,CAAOwC,KAAK,SAASzN,UAAW3E,KAChC,eAAC,IAAD,CAAOoS,KAAK,eAAezN,UAAW3B,KACtC,eAAC,IAAD,CAAOoP,KAAK,kBAAkBzN,UAAWpB,KAEzC,eAAC,IAAD,CAAO6O,KAAK,YAAYzN,UAAW7D,KACnC,eAAC,IAAD,CAAOsR,KAAK,uBAAuBzN,UAAWjC,GAAgB2P,OAAK,IACnE,eAAC,IAAD,CACED,KAAK,6BACLzN,UAAW/B,GACXyP,OAAK,IAEP,eAAC,IAAD,CAAOD,KAAK,iBAAiBzN,UAAWb,GAAqBuO,OAAK,IAClE,eAAC,GAAD,CAAgBD,KAAK,QAAQzN,UAAW7C,GAASuQ,OAAK,IACtD,eAAC,GAAD,CAAgBD,KAAK,eAAezN,UAAWzC,GAAemQ,OAAK,IACnE,eAAC,GAAD,CACED,KAAK,mBACLzN,UAAWtC,GACXgQ,OAAK,IAGP,eAAC,GAAD,CAAiBD,KAAK,UAAUzN,UAAWd,GAAewO,OAAK,IAE/D,eAAC,GAAD,CACED,KAAK,aACL3N,SAAS,EACTE,UAAWuD,GACXmK,OAAK,IAGP,eAAC,GAAD,CACED,KAAK,kBACL3N,SAAS,EACTE,UAAWyD,GACXiK,OAAK,IAGP,eAAC,GAAD,CACED,KAAK,iBACL3N,SAAS,EACTE,UAAWyE,GACXiJ,OAAK,IAGP,eAAC,GAAD,CACED,KAAK,qBACL3N,SAAS,EACTE,UAAW0F,KAIb,eAAC,IAAD,CAAO+H,KAAK,YAAYzN,UAAWI,GAAUsN,OAAK,IAElD,eAAC,GAAD,U,UCxJF9C,GAAU,CACdiD,QAAS,IACTxK,SAAUyK,IAAUC,cACpBC,WAAYC,IAAYC,OAG1BC,IAASnb,OACP,eAAC,IAAD,CAAUoV,MAAOA,GAAjB,SACE,eAAC,IAAD,yBAAegG,SAAUC,MAAmBzD,IAA5C,aACE,eAAC,GAAD,SAGJhR,SAAS0U,eAAe,W","file":"static/js/main.7ec50184.chunk.js","sourcesContent":["export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\n\r\nexport const REGISTER_USER_REQUEST = \"REGISTER_USER_REQUEST\";\r\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\r\nexport const REGISTER_USER_FAIL = \"REGISTER_USER_FAIL\";\r\n\r\nexport const LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\r\nexport const LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\r\nexport const LOAD_USER_FAIL = \"LOAD_USER_FAIL\";\r\n\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\r\n\r\nexport const UPDATE_PROFILE_REQUEST = \"UPDATE_PROFILE_REQUEST\";\r\nexport const UPDATE_PROFILE_SUCCESS = \"UPDATE_PROFILE_SUCCESS\";\r\nexport const UPDATE_PROFILE_FAIL = \"UPDATE_PROFILE_FAIL\";\r\nexport const UPDATE_PROFILE_RESET = \"UPDATE_PROFILE_RESET\";\r\n\r\nexport const UPDATE_PASSWORD_REQUEST = \"UPDATE_PASSWORD_REQUEST\";\r\nexport const UPDATE_PASSWORD_SUCCESS = \"UPDATE_PASSWORD_SUCCESS\";\r\nexport const UPDATE_PASSWORD_RESET = \"UPDATE_PASSWORD_RESET\";\r\nexport const UPDATE_PASSWORD_FAIL = \"UPDATE_PASSWORD_FAIL\";\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = \"FORGOT_PASSWORD_REQUEST\";\r\nexport const FORGOT_PASSWORD_SUCCESS = \"FORGOT_PASSWORD_SUCCESS\";\r\nexport const FORGOT_PASSWORD_FAIL = \"FORGOT_PASSWORD_FAIL\";\r\n\r\nexport const NEW_PASSWORD_REQUEST = \"NEW_PASSWORD_REQUEST\";\r\nexport const NEW_PASSWORD_SUCCESS = \"NEW_PASSWORD_SUCCESS\";\r\nexport const NEW_PASSWORD_FAIL = \"NEW_PASSWORD_FAIL\";\r\n\r\n\r\n\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  REGISTER_USER_REQUEST,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_FAIL,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  UPDATE_PASSWORD_REQUEST,\r\n  UPDATE_PASSWORD_SUCCESS,\r\n  UPDATE_PASSWORD_FAIL,\r\n  NEW_PASSWORD_REQUEST,\r\n  NEW_PASSWORD_SUCCESS,\r\n  NEW_PASSWORD_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAIL,\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/userConstants\";\r\n\r\n// Login\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/v1/loginuser\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: data.user,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//Register User\r\nexport const register = (userData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: REGISTER_USER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/v1/registeruser\", userData, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_USER_SUCCESS,\r\n      payload: data.user,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REGISTER_USER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n// Load user or user profile\r\nexport const loadUser = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOAD_USER_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/user\");\r\n\r\n    dispatch({\r\n      type: LOAD_USER_SUCCESS,\r\n      payload: data.user,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOAD_USER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//Update User profile\r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PROFILE_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\"/api/v1/user/update\", userData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PROFILE_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Update password\r\nexport const updatePassword = (passwords) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PASSWORD_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      \"/api/v1/password/update\",\r\n      passwords,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_PASSWORD_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PASSWORD_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Forgot password\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n  //we have to pass email as an argument to this function because user has to give email in order to get conformation email\r\n  try {\r\n    dispatch({ type: FORGOT_PASSWORD_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/v1/userpassword/forgot\",\r\n      email,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: FORGOT_PASSWORD_SUCCESS,\r\n      payload: data.message,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FORGOT_PASSWORD_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Reset password\r\nexport const resetPassword = (token, passwords) => async (dispatch) => {\r\n  //Token in reset Token\r\n  try {\r\n    dispatch({ type: NEW_PASSWORD_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/v1/userpassword/reset/${token}`,\r\n      passwords,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: NEW_PASSWORD_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_PASSWORD_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//LogoutUser\r\nexport const logoutUser = () => async (dispatch) => {\r\n  try {\r\n    await axios.get(\"/api/v1/logoutuser\");\r\n\r\n    dispatch({\r\n      type: LOGOUT_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGOUT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n// Clear Errors\r\n\r\n\r\nexport const clearErrors = (dispatch) => {\r\n  \r\n  dispatch({\r\n    type: CLEAR_ERRORS,\r\n  });\r\n};\r\n","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_ITEM_CART = \"REMOVE_ITEM_CART\";\r\nexport const SAVE_SHIPPING_INFO = \"SAVE_SHIPPING_INFO\";\r\nexport const RESET_CART = \"REST_CART\";\r\n","import axios from \"axios\";\r\nimport {\r\n  ADD_TO_CART,\r\n  REMOVE_ITEM_CART,\r\n  SAVE_SHIPPING_INFO,\r\n  RESET_CART,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\r\n  //getState is to get the current state\r\n\r\n  const { data } = await axios.get(`/api/v1/product/${id}`); //get the product details from the api\r\n\r\n  dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: {\r\n      product: data.product._id,\r\n      name: data.product.name,\r\n      price: data.product.price,\r\n      image: data.product.images[0].url,\r\n      stock: data.product.stock,\r\n      quantity,\r\n    },\r\n  });\r\n\r\n  //saving data into the local storage beacuse if we reload the page we have to display the cart item which we will get from local storage\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: REMOVE_ITEM_CART,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingInfo = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: SAVE_SHIPPING_INFO,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"shippingInfo\", JSON.stringify(data));\r\n};\r\n\r\nexport const resetCart = () => async (dispatch) => {\r\n  localStorage.removeItem(\"cartItems\");\r\n  localStorage.removeItem(\"shoppingInfo\");\r\n  dispatch({\r\n    type: RESET_CART,\r\n  });\r\n};\r\n","export const LOGIN_VENDOR_REQUEST = \"LOGIN_VENDOR_REQUEST\";\r\nexport const LOGIN_VENDOR_SUCCESS = \"LOGIN_VENDOR_SUCCESS\";\r\nexport const LOGIN_VENDOR_FAIL = \"LOGIN_VENDOR_FAIL\";\r\n\r\nexport const REGISTER_VENDOR_REQUEST = \"REGISTER_VENDOR_REQUEST\";\r\nexport const REGISTER_VENDOR_SUCCESS = \"REGISTER_VENDOR_SUCCESS\";\r\nexport const REGISTER_VENDOR_FAIL = \"REGISTER_VENDOR_FAIL\";\r\n\r\nexport const LOAD_VENDOR_REQUEST = \"LOAD_VENDOR_REQUEST\";\r\nexport const LOAD_VENDOR_SUCCESS = \"LOAD_VENDOR_SUCCESS\";\r\nexport const LOAD_VENDOR_FAIL = \"LOAD_VENDOR_FAIL\";\r\n\r\nexport const UPDATE_VENDOR_PROFILE_REQUEST = \"UPDATE_VENDOR_PROFILE_REQUEST\";\r\nexport const UPDATE_VENDOR_PROFILE_SUCCESS = \"UPDATE_VENDOR_PROFILE_SUCCESS\";\r\nexport const UPDATE_VENDOR_PROFILE_FAIL = \"UPDATE_VENDOR_PROFILE_FAIL\";\r\nexport const UPDATE_VENDOR_PROFILE_RESET = \"UPDATE_VENDOR_PROFILE_RESET\";\r\n\r\nexport const LOGOUT_VENDOR_SUCCESS = \"LOGOUT_VENDOR_SUCCESS\";\r\nexport const LOGOUT_VENDOR_FAIL = \"LOGOUT_VENDOR_FAIL\";\r\n\r\nexport const ALL_VENDORS_REQUEST = \"ALL_VENDORS_REQUEST\";\r\nexport const ALL_VENDORS_SUCCESS = \"ALL_VENDORS_SUCCESS\";\r\nexport const ALL_VENDORS_FAIL = \"ALL_VENDORS_FAIL\";\r\n\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  LOGIN_VENDOR_REQUEST,\r\n  LOGIN_VENDOR_SUCCESS,\r\n  LOGIN_VENDOR_FAIL,\r\n  CLEAR_ERRORS,\r\n  REGISTER_VENDOR_REQUEST,\r\n  REGISTER_VENDOR_SUCCESS,\r\n  REGISTER_VENDOR_FAIL,\r\n  LOAD_VENDOR_REQUEST,\r\n  LOAD_VENDOR_SUCCESS,\r\n  LOAD_VENDOR_FAIL,\r\n  LOGOUT_VENDOR_SUCCESS,\r\n  LOGOUT_VENDOR_FAIL,\r\n  UPDATE_VENDOR_PROFILE_REQUEST,\r\n  UPDATE_VENDOR_PROFILE_SUCCESS,\r\n  UPDATE_VENDOR_PROFILE_FAIL,\r\n  ALL_VENDORS_REQUEST,\r\n  ALL_VENDORS_SUCCESS,\r\n  ALL_VENDORS_FAIL,\r\n} from \"../constants/vendorConstants\";\r\n\r\n// Login\r\nexport const vendorLoginn = (vendoremail, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOGIN_VENDOR_REQUEST });\r\n\r\n    const config = {\r\n      //because we are sending post request\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/v1/loginvendor\",\r\n      { vendoremail, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOGIN_VENDOR_SUCCESS,\r\n      payload: data.vendor,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_VENDOR_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//Register User\r\nexport const registerVendor = (userData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: REGISTER_VENDOR_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/v1/registervendor\",\r\n      userData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: REGISTER_VENDOR_SUCCESS,\r\n      payload: data.vendor,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REGISTER_VENDOR_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//load vendor\r\n\r\nexport const loadVendor = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOAD_VENDOR_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/vendor\");\r\n\r\n    dispatch({\r\n      type: LOAD_VENDOR_SUCCESS,\r\n      payload: data.vendor,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOAD_VENDOR_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//LogoutUser\r\nexport const logoutVendor = () => async (dispatch) => {\r\n  try {\r\n    await axios.get(\"/api/v1/logoutvendor\");\r\n\r\n    dispatch({\r\n      type: LOGOUT_VENDOR_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGOUT_VENDOR_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//Update vendor Profile\r\nexport const updateVendorProfile = (vendorData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_VENDOR_PROFILE_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      \"/api/v1/vendor/update\",\r\n      vendorData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_VENDOR_PROFILE_SUCCESS,\r\n      payload: data.vendor,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_VENDOR_PROFILE_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get all Vendors\r\nexport const allVendors = () => async (dispatch) => {\r\n  try {\r\n    console.log(\"calling all vendors\");\r\n    dispatch({ type: ALL_VENDORS_REQUEST });\r\n    console.log(\"helo\");\r\n    const req = await axios.get(\"/api/v1/admin/vendors\");\r\n    console.log(\"data got\", req);\r\n\r\n    dispatch({\r\n      type: ALL_VENDORS_SUCCESS,\r\n      payload: req.data.vendors,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"catch error\");\r\n    dispatch({\r\n      type: ALL_VENDORS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//Clear Errors\r\n\r\nexport const clearErrors =  (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_ERRORS,\r\n  });\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nconst Search = ({ history }) => {\r\n\r\n  const [keyword, setKeyword] = useState(''); \r\n\r\n  const searchHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(keyword.trim()){\r\n      history.push(`/search/${keyword}`);\r\n    }\r\n\r\n    else {\r\n      history.push('/');\r\n    }\r\n  }\r\n  return (\r\n    \r\n      <form onSubmit={searchHandler}>\r\n            <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"search_field\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Product Name ...\"\r\n            onChange={(e) => setKeyword(e.target.value)} //when we change the value of the input field, the value will be updated in the state\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button id=\"search_btn\" className=\"btn\">\r\n              <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n      \r\n    \r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { logoutUser } from \"../../actions/userActions\";\r\nimport { resetCart } from \"../../actions/cartActions\";\r\nimport { logoutVendor } from \"../../actions/vendorActions\";\r\n\r\nimport Search from \"./Search\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user, loading } = useSelector((state) => state.auth);\r\n  const { vendor, loadingg } = useSelector((state) => state.vendor);\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(resetCart());\r\n    dispatch(logoutUser());\r\n    dispatch(logoutVendor());\r\n    alert.success(\"Logged out successfully\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav className=\"navbar row\">\r\n        <div className=\"col-12 col-md-3\">\r\n          <div className=\"navbar-brand\">\r\n            <Link to=\"/\">\r\n              <img className=\"image\" src=\"/images/logo1.png\" />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 mt-2 mt-md-0  searchbar\">\r\n          <Route render={({ history }) => <Search history={history} />} />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-3 mt-4 mt-md-0  text-center\">\r\n          <Link to=\"/pcbuildd\" className=\"btn ml-1\" id=\"login_btn\">\r\n            Build Pc\r\n          </Link>\r\n          <Link to=\"/cart\" style={{ textDecoration: \"none\" }}>\r\n            <span id=\"cart\" className=\"ml-8\">\r\n              Cart\r\n            </span>\r\n            <span className=\"ml-1\" id=\"cart_count\">\r\n              {\" \"}\r\n              {cartItems.length}\r\n            </span>\r\n          </Link>\r\n\r\n          {user ? (\r\n            <div className=\"ml-3 dropdown d-inline\">\r\n              <Link\r\n                to=\"\"\r\n                className=\" btn dropdown-toggle mr-4 text-white\"\r\n                type=\"button\"\r\n                id=\"dropDownMenuLink\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <figure className=\"avatar avatar-nav\">\r\n                  <img\r\n                    src={user.avatar && user.avatar.url}\r\n                    alt={user && user.name}\r\n                    className=\"rounded-circle\"\r\n                  />\r\n                </figure>\r\n                <span>{user && user.name}</span>\r\n              </Link>\r\n\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuLink\">\r\n                <Link className=\"dropdown-item\" to=\"/orders/user\">\r\n                  Orders\r\n                </Link>\r\n                <Link className=\"dropdown-item\" to=\"/user\">\r\n                  Profile\r\n                </Link>\r\n                <Link\r\n                  className=\"dropdown-item text-danger\"\r\n                  to=\"/\"\r\n                  onClick={logoutHandler}\r\n                >\r\n                  logout\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            !vendor && (\r\n              <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">\r\n                Login\r\n              </Link>\r\n            )\r\n          )}\r\n\r\n          {vendor ? (\r\n            <div className=\"ml-3 dropdown d-inline\" key={vendor}>\r\n              <Link\r\n                to=\"\"\r\n                className=\" btn dropdown-toggle mr-4 text-white\"\r\n                type=\"button\"\r\n                id=\"dropDownMenuLink\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <figure className=\"avatar avatar-nav\">\r\n                  <img\r\n                    src={vendor.avatar && vendor.avatar.url}\r\n                    alt={vendor && vendor.name}\r\n                    className=\"rounded-circle\"\r\n                  />\r\n                </figure>\r\n                <span>{vendor && vendor.vendorname}</span>\r\n              </Link>\r\n\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuLink\">\r\n                {vendor && vendor.role !== \"vendor\" ? (\r\n                  <Link className=\"dropdown-item\" to=\"orders/user\">\r\n                    orders\r\n                  </Link>\r\n                ) : (\r\n                  <Link className=\"dropdown-item\" to=\"/dashboard\">\r\n                    {\" \"}\r\n                    Dashboard{\" \"}\r\n                  </Link>\r\n                )}\r\n                <Link className=\"dropdown-item\" to=\"/vendor\">\r\n                  Profile\r\n                </Link>\r\n                <Link\r\n                  className=\"dropdown-item text-danger\"\r\n                  to=\"/\"\r\n                  onClick={logoutHandler}\r\n                >\r\n                  logout\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            !user && (\r\n              <Link to=\"/loginvendor\" className=\"btn mr-4\" id=\"login_btn\">\r\n                Vendor Login\r\n              </Link>\r\n            )\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n        <footer className=\"py-1\">\r\n        <p className=\"text-center mt-1\">\r\n          Final Year Project - 2021-2022, All Rights Reserved\r\n        </p>\r\n    </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst MetaData = ({title}) => {\r\n  return (\r\n    <Helmet> \r\n      <title> {`${title} - Project`} </title>\r\n      </Helmet>\r\n  )\r\n}\r\n\r\nexport default MetaData\r\n"," import React from 'react'\r\n import {Link} from 'react-router-dom';\r\n \r\n const product = ({product, col }) => {\r\n   return (\r\n    <div  className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n    <div className=\"card p-3 rounded\">\r\n      <img\r\n        className=\"card-img-top mx-auto\"\r\n        src={product.images[0].url}\r\n      />\r\n      <div className=\"card-body d-flex flex-column\">\r\n        <h5 className=\"card-title\">\r\n          <Link to={`/product/${product._id}`} >{product.name}</Link>\r\n        </h5>\r\n        <div className=\"ratings mt-auto\">\r\n          <div className=\"rating-outer\">\r\n            <div className=\"rating-inner\"></div>\r\n          </div>\r\n          <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n        </div>\r\n        <p className=\"card-text\">{product.price} Rs</p>\r\n       \r\n\r\n        <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n   )\r\n }\r\n \r\n export default product\r\n ","import React from 'react'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","export const ALL_PRODUCTS_REQUEST = \"ALL_PRODUCTS_REQUEST\";\r\nexport const ALL_PRODUCTS_SUCCESS = \"ALL_PRODUCTS_SUCCESS\";\r\nexport const ALL_PRODUCTS_FAIL = \"ALL_PRODUCTS_FAIL\";\r\n\r\nexport const NEW_PRODUCT_REQUEST = \"NEW_PRODUCT_REQUEST\";\r\nexport const NEW_PRODUCT_SUCCESS = \"NEW_PRODUCT_SUCCESS\";\r\nexport const NEW_PRODUCT_FAIL = \"NEW_PRODUCT_FAIL\";\r\nexport const NEW_PRODUCT_RESET = \"NEW_PRODUCT_RESET\";\r\n\r\nexport const DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\";\r\nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\";\r\nexport const DELETE_PRODUCT_FAIL = \"DELETE_PRODUCT_FAIL\";\r\nexport const DELETE_PRODUCT_RESET = \"DELETE_PRODUCT_RESET\";\r\n\r\nexport const UPDATE_PRODUCT_REQUEST = \"UPDATE_PRODUCT_REQUEST\";\r\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\";\r\nexport const UPDATE_PRODUCT_FAIL = \"UPDATE_PRODUCT_FAIL\";\r\nexport const UPDATE_PRODUCT_RESET = \"UPDATE_PRODUCT_RESET\";\r\n\r\nexport const ADMIN_PRODUCTS_REQUEST = \"ADMIN_PRODUCTS_REQUEST\";\r\nexport const ADMIN_PRODUCTS_SUCCESS = \"ADMIN_PRODUCTS_SUCCESS\";\r\nexport const ADMIN_PRODUCTS_FAIL = \"ADMIN_PRODUCTS_FAIL\";\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\n\r\n\r\nexport const SELECT_ALL_PRODUCT_REQUEST = \"SELECT_ALL_PRODUCT_REQUEST\";\r\nexport const SELECT_ALL_PRODUCT_SUCCESS = \"SELECT_ALL_PRODUCT_SUCCESS\";\r\nexport const SELECT_ALL_PRODUCT_FAIL = \"SELECT_ALL_PRODUCT_FAIL\";\r\n\r\n\r\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST'\r\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS'\r\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET'\r\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL'\r\n\r\n\r\n\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  ALL_PRODUCTS_REQUEST,\r\n  ALL_PRODUCTS_SUCCESS,\r\n  ALL_PRODUCTS_FAIL,\r\n  ADMIN_PRODUCTS_REQUEST,\r\n  ADMIN_PRODUCTS_SUCCESS,\r\n  ADMIN_PRODUCTS_FAIL,\r\n  NEW_PRODUCT_REQUEST,\r\n  NEW_PRODUCT_SUCCESS,\r\n  NEW_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAIL,\r\n \r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  SELECT_ALL_PRODUCT_REQUEST,\r\n  SELECT_ALL_PRODUCT_SUCCESS,\r\n  SELECT_ALL_PRODUCT_FAIL,\r\n\r\n  NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_RESET,\r\n    NEW_REVIEW_FAIL,\r\n\r\n  CLEAR_ERRORS,\r\n} from \"../constants/productConstant\";\r\n\r\nexport const getProducts =\r\n  (keyword = \"\", currentPage = 1, price, category) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: ALL_PRODUCTS_REQUEST });\r\n\r\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}`; //in this case price of 0 is 1 Rs\r\n\r\n      if (category) {\r\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}`;\r\n      }\r\n\r\n      const { data } = await axios.get(link);\r\n\r\n      dispatch({\r\n        type: ALL_PRODUCTS_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ALL_PRODUCTS_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// Product detail function\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/product/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Product detail function\r\n\r\nexport const getAdminProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_PRODUCTS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/admin/products`);\r\n\r\n    dispatch({\r\n      type: ADMIN_PRODUCTS_SUCCESS,\r\n      payload: data.products,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_PRODUCTS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//Create New Product\r\nexport const newProduct = (productData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_PRODUCT_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/v1/admin/product/new`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: NEW_PRODUCT_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//deleting a product\r\n\r\nexport const deleteProduct = (id) => async (dispatch) => { //passing id of that product\r\n  try {\r\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\r\n\r\n   \r\n\r\n    const { data } = await axios.delete(\r\n      `/api/v1/admin/product/${id}`,\r\n    );\r\n\r\n    dispatch({\r\n      type: DELETE_PRODUCT_SUCCESS,\r\n      payload: data.success\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n//Delete Product\r\nexport const updateProduct = (id, productData) => async (dispatch) => { //passing id and product data which we want to update\r\n  try {\r\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/v1/admin/product/${id}`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_SUCCESS,\r\n      payload: data.success\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//action for getting all products for Pc build\r\n\r\nexport const allProducts = () => async (dispatch) => {\r\n  try {\r\n\r\n      dispatch({ type: SELECT_ALL_PRODUCT_REQUEST });\r\n\r\n      const { data } = await axios.get('/api/v1/admin/products')\r\n\r\n      dispatch({\r\n          type: SELECT_ALL_PRODUCT_SUCCESS,\r\n          payload: data.products\r\n      })\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: SELECT_ALL_PRODUCT_FAIL,\r\n          payload: 'Error occured while loading products'\r\n      })\r\n  }\r\n}\r\n\r\n// new review actions\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n  try {\r\n\r\n      dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          }\r\n      }\r\n\r\n      const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n      dispatch({\r\n          type: NEW_REVIEW_SUCCESS,\r\n          payload: data.success\r\n      })\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: NEW_REVIEW_FAIL,\r\n          payload: error.response.data.message\r\n      })\r\n  }\r\n}\r\n\r\n\r\n\r\n//Clear Errors\r\n\r\nexport const clearErrors =  (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_ERRORS,\r\n  });\r\n};\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaData from \"./layout/MetaData\";\r\nimport Product from \"./product/Product\";\r\nimport Loader from \"./layout/Loader\";\r\nimport  Pagination from 'react-js-pagination';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { useAlert } from 'react-alert';\r\nimport {allVendors} from\"../actions/vendorActions\";\r\nimport { getProducts } from '../actions/productActions';\r\n\r\n\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nconst {createSliderWithTooltip} = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range);  //tool tip is an additional information to slider\r\n\r\n\r\nconst Home = ({match}) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [price, setPrice] = useState([1, 100000]);\r\n  const [category, setCategory] = useState('');\r\n  const categories = [\r\n    \"Electronics\",\r\n    \"Laptops\",\r\n    \"Mobiles\",\r\n    \"Computers\",\r\n    \"Accessories\",\r\n    \"MotherBoards\",\r\n    \"Processors\",\r\n    \"GraphicCards\",\r\n    \"Ram\",\r\n    \"HardDisks\",\r\n    \"SSD\",\r\n    \"KeyBoards\",\r\n    \"Mouse\",\r\n    \"Headphones\",\r\n    \"Cpu\",\r\n    \"PowerSupply\",\r\n    \"Case\",\r\n    \"Monitor\",\r\n  ]\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n   \r\n  const {loading, products, error, productsCount, resPerPage, filteredProductCount } = useSelector(state => state.products);\r\n\r\n  const {vendors} = useSelector(state => state.allVendors);\r\n\r\n  const keyword = match.params.keyword; //we are using param beacuse we are setting keywords in params in search component \r\n    \r\n  useEffect(() => {\r\n    if(error){\r\n     \r\n\r\n      alert.success('success');\r\n     return alert.error(error);\r\n     \r\n     }\r\n\r\n  dispatch(getProducts(keyword, currentPage, price, category));  \r\n\r\n   \r\n\r\n  },[dispatch, alert, error, keyword, currentPage, price, category]); //this is dependencies array\r\n\r\n\r\n  function setCurrentPageNo(pageNumber){\r\n    setCurrentPage(pageNumber);\r\n   }\r\n\r\n   let count = productsCount;\r\n   if(keyword){\r\n     count = filteredProductCount;\r\n   }\r\n\r\n\r\n  return (\r\n    \r\n    <Fragment>\r\n      \r\n  \r\n\r\n\r\n      {loading ? <Loader /> : null}\r\n      <MetaData title={'buy best product online'} />\r\n      \r\n      \r\n       <h1 id=\"products_heading\">Latest Products</h1>\r\n       <section id=\"products\" class=\"container mt-5\">\r\n      <div className=\"row\">\r\n\r\n      {keyword ? (           //if filter exist like keyword/mouse then we have to show the slider else \r\n                             //show the products\r\n        <Fragment>\r\n\r\n          \r\n            <div className=\"col-6 col-md-3 mt-12 mb-12 \">\r\n              <div className=\"px-5\">\r\n                <Range\r\n                  marks={{\r\n                    1: `Rs 1`,\r\n                    100000: `Rs 100000`\r\n                  }}\r\n\r\n                  min ={1}\r\n                  max={100000}\r\n                  defaultValue={[1, 100000]}\r\n                  tipFormatter={value => `Rs ${value}`}\r\n                  tipProps={{\r\n                    placement: 'top',\r\n                    visible: true\r\n                  }}\r\n\r\n                  value={price}\r\n                  onChange={price => setPrice(price)}\r\n\r\n                \r\n                \r\n                />\r\n\r\n              \r\n                    <hr className=\"my-5\" /> {/* this is a horizontal line for margin top and bottom */}\r\n\r\n                    <div className=\"mt-5\">\r\n                        <h4 className=\"mb-3\">\r\n                            Categories\r\n                        </h4>\r\n\r\n                        <ul className=\"pl-0\">\r\n                            {categories.map(category => (\r\n                                <li\r\n                                    style={{\r\n                                        cursor: 'pointer',\r\n                                        listStyleType: 'none'\r\n                                    }}\r\n                                    key={category}\r\n                                    onClick={() => setCategory(category)}\r\n                                >\r\n                                    {category}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n              </div>\r\n              \r\n              </div>  \r\n\r\n              <div className=\"col-6 col-md-9\">\r\n              <div className=\"row\">\r\n\r\n             { products && products.map(product => (\r\n\r\n              <Product product={product} key={product._id} col={4} />\r\n\r\n                //using key because we are using map function \r\n   \r\n                  ))}\r\n                </div>\r\n\r\n                </div>\r\n                \r\n\r\n        </Fragment>\r\n\r\n      ): (\r\n        products && products.map(product => (\r\n\r\n          <Product product={product} key={product._id} col={3} />\r\n\r\n          //using key because we are using map function \r\n             \r\n        ))\r\n        \r\n      )}\r\n\r\n        \r\n     \r\n\r\n        \r\n       \r\n      </div>\r\n    </section> \r\n\r\n    {resPerPage < count && (\r\n      <div className=\"d-flex justify-content-center mt-5\">\r\n      \r\n      <Pagination\r\n        activePage = {currentPage}\r\n        itemsCountPerPage = {resPerPage}\r\n        totalItemsCount = {productsCount}\r\n        onChange = {setCurrentPageNo}\r\n        nextPageText = 'Next'\r\n        prevPageText = 'Prev'\r\n        firstPageText = 'First'\r\n        lastPageText = 'Last'\r\n        itemClass = 'page-item' //bootstrap class we don't have to handle them in css\r\n        linkClass = 'page-link' //bootstrap class we don't have to handle them in css\r\n\r\n      \r\n      />\r\n      </div>\r\n    )}\r\n    \r\n      \r\n       \r\n      \r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst ListReviews = ({ reviews }) => {\r\n    return (\r\n        <div class=\"reviews w-75\">\r\n            <h3>Other's Reviews:</h3>\r\n            <hr />\r\n            {reviews && reviews.map(review => (\r\n                <div key={review._id} class=\"review-card my-3\">\r\n                    <div class=\"rating-outer\">\r\n                        <div class=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\r\n                    </div>\r\n                    <p class=\"review_user\">by {review.name}</p>\r\n                    <p class=\"review_comment\">{review.comment}</p>\r\n\r\n                    <hr />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListReviews","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductDetails, clearErrors, newReview } from \"../../actions/productActions\";\r\nimport { addItemToCart } from \"../../actions/cartActions\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Loader from \"../layout/Loader\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport { NEW_REVIEW_RESET } from \"../../constants/productConstant\";\r\nimport ListReviews from \"../review/ListReviews\";\r\n\r\n\r\nconst ProductDetails = ({ match }) => {\r\n  //match is a prop that is passed from the router it is just like req.params.id\r\n\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const[comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const { loading, error, product } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n\r\n  const {error: reviewError, success} = useSelector(state => state.newReview);\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductDetails(match.params.id));\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors);\r\n    }\r\n\r\n    \r\n    if (reviewError) {\r\n      alert.error(reviewError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      alert.success(success);\r\n      dispatch({type: NEW_REVIEW_RESET});\r\n    }\r\n\r\n  }, [dispatch, alert, error, reviewError, match.params.id, success]); //if any thing change it will then call the useEffect and run the code inside it\r\n\r\n  const addToCart = () => {\r\n    dispatch(addItemToCart(match.params.id, quantity));\r\n    alert.success(\"Item added to cart\");\r\n  };\r\n\r\n  const increaseQty = () => {\r\n    const count = document.querySelector(\".count\"); // .count is the class name of the span\r\n\r\n    if (count.valueAsNumber >= product.stock) return; //if the value is greater than the stock then it will not increase the quantity\r\n\r\n    const qty = count.valueAsNumber + 1; //if its less then stock then it will add more\r\n    setQuantity(qty);\r\n  };\r\n\r\n  const decreaseQty = () => {\r\n    const count = document.querySelector(\".count\"); // .count is the class name of the span\r\n\r\n    if (count.valueAsNumber <= 1) return; //if the input value is less than 1 then it will not decrease\r\n\r\n    const qty = count.valueAsNumber - 1; //if its less then stock then it will add more\r\n    setQuantity(qty);\r\n  };\r\n\r\n  function setUserRatings() {   \r\n    const stars = document.querySelectorAll(\".star\"); //selecting all stars\r\n\r\n    stars.forEach((star, index) => { \r\n      star.starValue = index + 1; //storing the value of the each star in the starValue property\r\n\r\n      [\"click\", \"mouseover\", \"mouseout\"].forEach(function (e) { //adding multiple event listeners to each star\r\n        star.addEventListener(e, showRatings);\r\n      });\r\n    });\r\n\r\n    function showRatings(e) {\r\n      stars.forEach((star, index) => {\r\n        if (e.type === \"click\") {\r\n          if (index < this.starValue) {\r\n            star.classList.add(\"orange\");\r\n\r\n            setRating(this.starValue);\r\n          } else {\r\n            star.classList.remove(\"orange\");\r\n          }\r\n        }\r\n\r\n        if (e.type === \"mouseover\") {\r\n          if (index < this.starValue) {\r\n            star.classList.add(\"yellow\");\r\n          } else {\r\n            star.classList.remove(\"yellow\");\r\n          }\r\n        }\r\n\r\n        if (e.type === \"mouseout\") {\r\n          star.classList.remove(\"yellow\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const reviewHandler = () => {\r\n    const formData = new FormData();\r\n\r\n    formData.set('rating', rating);\r\n    formData.set('comment', comment);\r\n    formData.set('productId', match.params.id);\r\n\r\n    dispatch(newReview(formData));\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader /> //if loading is true then show the loader else show the product details\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={product.name} />\r\n          <div className=\"row f-flex justify-content-around\">\r\n            <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n              <Carousel pause=\"hover\">\r\n                {product.images &&\r\n                  product.images.map((image) => (\r\n                    <Carousel.Item key={image.public_id}>\r\n                      <img\r\n                        className=\"d-block w-100\"\r\n                        src={image.url}\r\n                        alt={product.title}\r\n                      />\r\n                    </Carousel.Item>\r\n                  ))}\r\n              </Carousel>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-5 mt-5\">\r\n              <h3>{product.name}</h3>\r\n              <p id=\"product_id\">Product # {product._id} </p>\r\n\r\n              <hr />\r\n\r\n              <div className=\"rating-outer\">\r\n                <div className=\"rating-inner\"></div>\r\n              </div>\r\n              <span id=\"no_of_reviews\">({product.numOfReviews}Reviews)</span>\r\n\r\n              <hr />\r\n\r\n              <p id=\"product_price\">{product.price}</p>\r\n              <div className=\"stockCounter d-inline\">\r\n                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>\r\n                  -\r\n                </span>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control count d-inline\"\r\n                  value={quantity}\r\n                  readOnly\r\n                />\r\n\r\n                <span className=\"btn btn-primary plus\" onClick={increaseQty}>\r\n                  +\r\n                </span>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                id=\"cart_btn\"\r\n                className=\"btn btn-primary d-inline ml-4\"\r\n                onClick={addToCart}\r\n              >\r\n                Add to Cart\r\n              </button>\r\n\r\n              <hr />\r\n\r\n              <p>\r\n                Status:{\" \"}\r\n                <span\r\n                  id=\"stock_status\"\r\n                  className={product.stock > 0 ? \"greenColor\" : \"redColor\"}\r\n                >\r\n                  {product.stock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                </span>\r\n              </p>\r\n\r\n              <hr />\r\n\r\n              <h4 className=\"mt-2\">Description:</h4>\r\n              <p>{product.description}</p>\r\n\r\n              <p id=\"product_seller mb-3\">\r\n                Sold by: <strong>{product.vendor}</strong>\r\n              </p>\r\n\r\n              {user ? (\r\n                <button\r\n                  id=\"review_btn\"\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary mt-4\"\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#ratingModal\"\r\n                  onClick={setUserRatings}\r\n                >\r\n                  Submit Your Review\r\n                </button>\r\n              ) : (\r\n                <div className=\"alert alert-danger mt-5\" type=\"alert\">\r\n                  Login to post your review.\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"row mt-2 mb-5\">\r\n                <div className=\"rating w-50\">\r\n                  <div\r\n                    className=\"modal fade\"\r\n                    id=\"ratingModal\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"ratingModalLabel\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                      <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                          <h5 className=\"modal-title\" id=\"ratingModalLabel\">\r\n                            Submit Review\r\n                          </h5>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-bs-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                          >\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                          <ul className=\"stars\">\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                          </ul>\r\n\r\n                          <textarea\r\n                            name=\"review\"\r\n                            id=\"review\"\r\n                            className=\"form-control mt-3\"\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                          ></textarea>\r\n\r\n                          <button\r\n                            className=\"btn my-3 float-right review-btn px-4 text-white\"\r\n                            onClick={reviewHandler}\r\n                            data-bs-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {product.reviews && product.reviews.length > 0 && (\r\n                        <ListReviews reviews={product.reviews} />\r\n                    )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Loader from \"../layout/Loader\";\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, clearErrors } from \"../../actions/userActions\";\r\n\r\nconst Login = ({ history, location }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticatedUser, error, loading } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticatedUser) {\r\n      history.push(redirect);\r\n      alert.success(\"You are now logged in\");\r\n    }\r\n\r\n    if (error) {\r\n  \r\n      alert.error(error);\r\n      dispatch(clearErrors);\r\n    }\r\n  }, [dispatch, alert, isAuthenticatedUser, error, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={\"Login\"} />\r\n\r\n          <div className=\"row wrapper\">\r\n            <div className=\"col-10 col-lg-5\">\r\n              <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                <h1 className=\"mb-3\">Login</h1>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email_field\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email_field\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <d iv className=\"form-group\">\r\n                  <label htmlFor=\"password_field\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password_field\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </d>\r\n\r\n                <Link to=\"/userpassword/forgot\" className=\"float-right mb-4\">\r\n                  Forgot Password?\r\n                </Link>\r\n\r\n                <button\r\n                  id=\"login_button\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-block py-3\"\r\n                >\r\n                  LOGIN\r\n                </button>\r\n\r\n                <Link to=\"/register\" className=\"float-right mt-3\">\r\n                  New User?\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register, clearErrors } from \"../../actions/userActions\";\r\n\r\nconst Register = ({ history, location }) => {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\", //using an object\r\n    password: \"\",\r\n  });\r\n\r\n  const { name, email, password } = user;\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [avatarPreview, setAvatarPreview] = useState(\r\n    \"/images/default_avatar.jpg\"\r\n  ); //preview the image before uploading\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticatedUser, error, loading } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  const redirect = history.location.search\r\n    ? history.location.search.split(\"=\")[1]\r\n    : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticatedUser) {\r\n      history.push(redirect);\r\n      alert.success(\"You are now logged in\");\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors);\r\n    }\r\n  }, [dispatch, alert, isAuthenticatedUser, error, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    formData.set(\"name\", name);\r\n    formData.set(\"email\", email);\r\n    formData.set(\"password\", password);\r\n    formData.set(\"avatar\", avatar);\r\n\r\n    dispatch(register(formData)); //dispatching the action\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    if (e.target.name === \"avatar\") {\r\n      //if target value is avatar i have to handle the avatar\r\n      const reader = new FileReader(); // in else i will handle name email and password\r\n\r\n      reader.onload = () => {\r\n        //when we read the targer.file we pass to callback and check\r\n        if (reader.readyState === 2) {\r\n          // three ready states 0 mean reader is created\r\n          //1 mean reader is processing 2 mean reader is ready to use\r\n          setAvatarPreview(reader.result);\r\n          setAvatar(reader.result);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    } else {\r\n      setUser({ ...user, [e.target.name]: e.target.value }); //whatever in the user i spread user to get it. and then i add the name and value e.g name = email and target value is email\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"Register User\"} />\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form\r\n            className=\"shadow-lg\"\r\n            onSubmit={submitHandler}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <h1 className=\"mb-3\">Register User</h1>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Name</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password_field\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password_field\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"avatar_upload\">Avatar</label>\r\n              <div className=\"d-flex align-items-center\">\r\n                <div>\r\n                  <figure className=\"avatar mr-3 item-rtl\">\r\n                    <img\r\n                      src={avatarPreview}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"Avatar Preview\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"custom-file\">\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"avatar\"\r\n                    className=\"custom-file-input\"\r\n                    id=\"customFile\"\r\n                    accept=\"images/*\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                    Choose Avatar\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              id=\"register_button\"\r\n              type=\"submit\"\r\n              className=\"btn btn-block py-3\"\r\n              disabled={loading ? true : false} //when user press register i will dispatch the userRegister request while its loading i will disable the button\r\n            >\r\n              REGISTER\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport Loader from \"../layout/Loader\";\r\n\r\nconst Profile = () => {\r\n  const { user, loading } = useSelector((state) => state.auth);\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Fragment>\r\n            <MetaData title={\"Your profile\"} />\r\n            <h2 className=\"mt-5 ml-5\">My Profile</h2>\r\n            <div className=\"row justify-content-around mt-5 user-info\">\r\n              <div className=\"col-12 col-md-3\">\r\n                <figure className=\"avatar avatar-profile\">\r\n                  <img\r\n                    className=\"rounded-circle img-fluid\"\r\n                    src={user.avatar.url}\r\n                    alt={user.name}\r\n                  />\r\n                </figure>\r\n                <Link\r\n                  to=\"/user/update\"\r\n                  id=\"edit_profile\"\r\n                  className=\"btn btn-primary btn-block my-5\"\r\n                >\r\n                  Edit Profile\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"col-12 col-md-5\">\r\n                <h4>Full Name</h4>\r\n                <p>{user.name}</p>\r\n\r\n                <h4>Email Address</h4>\r\n                <p>{user.email}</p>\r\n\r\n                <h4>Joined On</h4>\r\n                <p>{String(user.createdAt).substring(0, 10)}</p>\r\n\r\n                <Link\r\n                  to=\"/orders/user\"\r\n                  className=\"btn btn-danger btn-block mt-5\"\r\n                >\r\n                  My Orders\r\n                </Link>\r\n\r\n                <Link\r\n                  to=\"/password/update\"\r\n                  className=\"btn btn-primary btn-block mt-3\"\r\n                >\r\n                  Change Password\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateProfile,\r\n  loadUser,\r\n  clearErrors,\r\n} from \"../../actions/userActions\";\r\nimport { UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [avatarPreview, setAvatarPreview] = useState(\r\n    \"/images/default_avatar.jpg\"\r\n  );\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { error, isUpdated, loading } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      //if user exist in state then we set the values\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setAvatarPreview(user.avatar.url);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors);\r\n      \r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"User updated successfully\");\r\n      dispatch(loadUser());\r\n\r\n      history.push(\"/user\");\r\n\r\n      dispatch({\r\n        type: UPDATE_PROFILE_RESET,\r\n      });\r\n    }\r\n  }, [dispatch, alert, error, history, isUpdated]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set(\"name\", name);\r\n    formData.set(\"email\", email);\r\n    formData.set(\"avatar\", avatar);\r\n\r\n    dispatch(updateProfile(formData));\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setAvatarPreview(reader.result);\r\n        setAvatar(reader.result);\r\n      }\r\n    };\r\n\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"Update Profile\"} />\r\n\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form\r\n            className=\"shadow-lg\"\r\n            onSubmit={submitHandler}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Name</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"avatar_upload\">Avatar</label>\r\n              <div className=\"d-flex align-items-center\">\r\n                <div>\r\n                  <figure className=\"avatar mr-3 item-rtl\">\r\n                    <img\r\n                      src={avatarPreview}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"Avatar Preview\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"custom-file\">\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"avatar\"\r\n                    className=\"custom-file-input\"\r\n                    id=\"customFile\"\r\n                    accept=\"image/*\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                    Choose Avatar\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn update-btn btn-block mt-4 mb-3\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updatePassword,\r\n  loadUser,\r\n  clearErrors,\r\n} from \"../../actions/userActions\";\r\nimport { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\r\n\r\nconst UpdatePassword = ({ history, location }) => {\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { error, isUpdated, loading } = useSelector((state) => state.user);\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/user\";\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors);\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"Password updated successfully\");\r\n      history.push(redirect);\r\n      //  history.push(\"/user\");\r\n\r\n      dispatch({\r\n        type: UPDATE_PASSWORD_RESET,\r\n      });\r\n    }\r\n  }, [dispatch, alert, error, history, isUpdated]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set(\"oldPassword\", oldPassword);\r\n    formData.set(\"password\", password);\r\n\r\n    dispatch(updatePassword(formData));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"Change Password\"} />\r\n\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n            <h1 className=\"mt-2 mb-5\">Update Password</h1>\r\n            <div className=\"form-group\">\r\n              <label for=\"old_password_field\">Old Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"old_password_field\"\r\n                className=\"form-control\"\r\n                value={oldPassword}\r\n                onChange={(e) => setOldPassword(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label for=\"new_password_field\">New Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"new_password_field\"\r\n                className=\"form-control\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn update-btn btn-block mt-4 mb-3\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              Update Password\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePassword;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { forgotPassword, clearErrors } from \"../../actions/userActions\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { error, loading, message } = useSelector(\r\n    (state) => state.forgotPassword\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors);\r\n    }\r\n\r\n    if (message) {\r\n      alert.success(message);\r\n    }\r\n  }, [dispatch, alert, error, message]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set(\"email\", email);\r\n\r\n    dispatch(forgotPassword(formData));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"Forgot Password\"} />\r\n\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n            <h1 className=\"mb-3\">Forgot Password</h1>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Enter Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                className=\"form-control\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              id=\"forgot_password_button\"\r\n              type=\"submit\"\r\n              className=\"btn btn-block py-3\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              Send Email\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetPassword, clearErrors } from \"../../actions/userActions\";\r\n\r\nconst NewPassword = ({ history, match }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { error, success } = useSelector((state) => state.forgotPassword);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors);\r\n    }\r\n\r\n    if (success) {\r\n      alert.success(\"Password updated successfully\");\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, alert, error, success, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set(\"password\", password);\r\n    formData.set(\"confirmPassword\", confirmPassword);\r\n\r\n    dispatch(resetPassword(match.params.token, formData)); //password reset token\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"New Password Reset\"} />\r\n\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n            <h1 className=\"mb-3\">New Password</h1>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password_field\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password_field\"\r\n                className=\"form-control\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"confirm_password_field\">Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirm_password_field\"\r\n                className=\"form-control\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              id=\"new_password_button\"\r\n              type=\"submit\"\r\n              className=\"btn btn-block py-3\"\r\n            >\r\n              Set Password\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Loader from \"../layout/Loader\";\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { vendorLoginn, clearErrors } from \"../../actions/vendorActions\";\r\n\r\nconst VendorLogin = ({ history, location }) => {\r\n  const [vendoremail, setVendorEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticatedVendor, error, loading } = useSelector(\r\n    (state) => state.vendor\r\n  );\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticatedVendor) {\r\n      window.location.replace(\"/\");\r\n      // history.push('redirect');\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors);\r\n    }\r\n  }, [dispatch, alert, isAuthenticatedVendor, error, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault(); //prevent it from reloading\r\n\r\n    dispatch(vendorLoginn(vendoremail, password));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={\"Vendor Login\"} />\r\n\r\n          <div className=\"row wrapper\">\r\n            <div className=\"col-10 col-lg-5\">\r\n              <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                <h1 className=\"mb-3\">Vendor Login</h1>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email_field\">Vendor Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email_field\"\r\n                    className=\"form-control\"\r\n                    value={vendoremail}\r\n                    onChange={(e) => setVendorEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <d iv className=\"form-group\">\r\n                  <label htmlFor=\"password_field\">Vendor Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password_field\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </d>\r\n\r\n                <Link to=\"/vendorpassword/forgot\" className=\"float-right mb-4\">\r\n                  Forgot Password?\r\n                </Link>\r\n\r\n                <button\r\n                  id=\"login_button\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-block py-3\"\r\n                >\r\n                  LOGIN\r\n                </button>\r\n\r\n                <Link to=\"/registervendor\" className=\"float-right mt-3\">\r\n                  New Vendor?\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default VendorLogin;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerVendor, clearErrors } from \"../../actions/vendorActions\";\r\n\r\nconst RegisterVendor = ({ history, location }) => {\r\n  const [vendor, setVendor] = useState({\r\n    vendorname: \"\",\r\n    shopname: \"\", //using an object\r\n    shopaddress: \"\",\r\n    vendorcontactno: \"\",\r\n    shopcontactno: \"\",\r\n    vendoremail: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const {\r\n    vendorname,\r\n    shopname,\r\n    shopaddress,\r\n    vendorcontactno,\r\n    shopcontactno,\r\n    vendoremail,\r\n    password,\r\n  } = vendor;\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [avatarPreview, setAvatarPreview] = useState(\r\n    \"/images/default_avatar.jpg\"\r\n  ); //preview the image before uploading\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticatedVendor, error, loading } = useSelector(\r\n    (state) => state.vendor\r\n  );\r\n\r\n  const redirect = history.location.search\r\n    ? history.location.search.split(\"=\")[1]\r\n    : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticatedVendor) {\r\n      history.push(redirect);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors);\r\n    }\r\n  }, [dispatch, alert, isAuthenticatedVendor, error, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    formData.set(\"vendorname\", vendorname);\r\n    formData.set(\"shopname\", shopname);\r\n    formData.set(\"shopaddress\", shopaddress);\r\n    formData.set(\"vendorcontactno\", vendorcontactno);\r\n    formData.set(\"shopcontactno\", shopcontactno);\r\n    formData.set(\"vendoremail\", vendoremail);\r\n    formData.set(\"password\", password);\r\n    formData.set(\"avatar\", avatar);\r\n\r\n    dispatch(registerVendor(formData)); //dispatching the action\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    if (e.target.name === \"avatar\") {\r\n      //if target value is avatar i have to handle the avatar\r\n      const reader = new FileReader(); // in else i will handle name email and password\r\n\r\n      reader.onload = () => {\r\n        //when we read the targer.file we pass to callback and check\r\n        if (reader.readyState === 2) {\r\n          // three ready states 0 mean reader is created\r\n          //1 mean reader is processing 2 mean reader is ready to use\r\n          setAvatarPreview(reader.result);\r\n          setAvatar(reader.result);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    } else {\r\n      setVendor({ ...vendor, [e.target.name]: e.target.value }); //whatever in the user i spread user to get it. and then i add the name and value e.g name = email and target value is email\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"Register Vendor\"} />\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form\r\n            className=\"shadow-lg\"\r\n            onSubmit={submitHandler}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <h1 className=\"mb-3\">Register Vendor</h1>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Vendor Name</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"vendorname\"\r\n                value={vendorname}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Shop Name</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"shopname\"\r\n                value={shopname}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Shop Address</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"shopaddress\"\r\n                value={shopaddress}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Vendor Contact No</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"vendorcontactno\"\r\n                value={vendorcontactno}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Shop Contact No</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"shopcontactno\"\r\n                value={shopcontactno}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Vendor Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                className=\"form-control\"\r\n                name=\"vendoremail\"\r\n                value={vendoremail}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password_field\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password_field\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"avatar_upload\">Avatar</label>\r\n              <div className=\"d-flex align-items-center\">\r\n                <div>\r\n                  <figure className=\"avatar mr-3 item-rtl\">\r\n                    <img\r\n                      src={avatarPreview}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"Avatar Preview\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"custom-file\">\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"avatar\"\r\n                    className=\"custom-file-input\"\r\n                    id=\"customFile\"\r\n                    accept=\"images/*\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                    Choose Avatar\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              id=\"register_button\"\r\n              type=\"submit\"\r\n              className=\"btn btn-block py-3\"\r\n              disabled={loading ? true : false} //when user press register i will dispatch the userRegister request while its loading i will disable the button\r\n            >\r\n              REGISTER\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RegisterVendor;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport Loader from \"../layout/Loader\";\r\n\r\nconst VendorProfile = () => {\r\n  const { vendor, loadingg } = useSelector((state) => state.vendor);\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        {loadingg ? (\r\n          <Loader />\r\n        ) : (\r\n          <Fragment>\r\n            <MetaData title={\"Your profile\"} />\r\n            <h2 className=\"mt-5 ml-5\">My Profile</h2>\r\n            <div className=\"row justify-content-around mt-5 user-info\">\r\n              <div className=\"col-12 col-md-3\">\r\n                <figure className=\"avatar avatar-profile\">\r\n                  <img\r\n                    className=\"rounded-circle img-fluid\"\r\n                    src={vendor.avatar.url}\r\n                    alt={vendor.name}\r\n                  />\r\n                </figure>\r\n                <Link\r\n                  to=\"/vendor/update\"\r\n                  id=\"edit_profile\"\r\n                  className=\"btn btn-primary btn-block my-5\"\r\n                >\r\n                  Edit Profile\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"col-12 col-md-5\">\r\n                <h4>Vendor Name</h4>\r\n                <p>{vendor.vendorname}</p>\r\n\r\n                <h4>Shop Name</h4>\r\n                <p>{vendor.shopname}</p>\r\n\r\n                <h4>Shop Address</h4>\r\n                <p>{vendor.shopname}</p>\r\n\r\n                <h4>Email Address</h4>\r\n                <p>{vendor.shopaddress}</p>\r\n\r\n                <h4>Vendor Contact No</h4>\r\n                <p>{vendor.vendorcontactno}</p>\r\n\r\n                <h4>Shop Contact No</h4>\r\n                <p>{vendor.shopcontactno}</p>\r\n\r\n                <h4>Vendor Address</h4>\r\n                <p>{vendor.vendor}</p>\r\n\r\n                <h4>Joined On</h4>\r\n                <p>{String(vendor.createdAt).substring(0, 10)}</p>\r\n\r\n                {vendor.role !== \"vendor\" && (\r\n                  <Link\r\n                    to=\"/order/user\"\r\n                    className=\"btn btn-danger btn-block mt-5\"\r\n                  >\r\n                    My Orders\r\n                  </Link>\r\n                )}\r\n\r\n                <Link\r\n                  to=\"/password/update\"\r\n                  className=\"btn btn-primary btn-block mt-3\"\r\n                >\r\n                  Change Password\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VendorProfile;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateVendorProfile,\r\n  loadVendor,\r\n  clearErrors,\r\n} from \"../../actions/vendorActions\";\r\nimport { UPDATE_VENDOR_PROFILE_RESET } from \"../../constants/vendorConstants\";\r\n\r\nconst UpdateVendorProfile = ({ history }) => {\r\n  const [vendorname, setVendorName] = useState(\"\");\r\n  const [shopname, setShopName] = useState(\"\");\r\n  const [shopaddress, setShopAddress] = useState(\"\");\r\n  const [vendorcontactno, setVendorContactNo] = useState(\"\");\r\n  const [shopcontactno, setShopContactNo] = useState(\"\");\r\n  const [vendoremail, setVendorEmail] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [avatarPreview, setAvatarPreview] = useState(\r\n    \"/images/default_avatar.jpg\"\r\n  );\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { vendor } = useSelector((state) => state.vendor);\r\n  const { error, isUpdated, loading } = useSelector((state) => state.vendorr);\r\n\r\n  useEffect(() => {\r\n    if (vendor) {\r\n      //if user exist in state then we set the values\r\n      setVendorName(vendor.vendorname);\r\n      setShopName(vendor.shopname);\r\n      setShopAddress(vendor.shopaddress);\r\n      setVendorContactNo(vendor.vendorcontactno);\r\n      setShopContactNo(vendor.shopcontactno);\r\n      setVendorEmail(vendor.vendoremail);\r\n\r\n      setAvatarPreview(vendor.avatar.url);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors);\r\n      console.log(\"got it\");\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"User updated successfully\");\r\n      dispatch(loadVendor());\r\n\r\n      history.push(\"/vendor\");\r\n\r\n      dispatch({\r\n        type: UPDATE_VENDOR_PROFILE_RESET,\r\n      });\r\n    }\r\n  }, [dispatch, alert, error, history, isUpdated]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set(\"vendorname\", vendorname);\r\n    formData.set(\"shopname\", shopname);\r\n    formData.set(\"shopaddress\", shopaddress);\r\n    formData.set(\"vendorcontactno\", vendorcontactno);\r\n    formData.set(\"shopcontactno\", shopcontactno);\r\n    formData.set(\"vendoremail\", vendoremail);\r\n    formData.set(\"avatar\", avatar);\r\n\r\n    dispatch(updateVendorProfile(formData));\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setAvatarPreview(reader.result);\r\n        setAvatar(reader.result);\r\n      }\r\n    };\r\n\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"Update Vendor Profile\"} />\r\n\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form\r\n            className=\"shadow-lg\"\r\n            onSubmit={submitHandler}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <h1 className=\"mt-2 mb-5\">Update Vendor Profile</h1>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Vendor Name</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"vendorname\"\r\n                value={vendorname}\r\n                onChange={(e) => setVendorName(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Shop Name</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"shopname\"\r\n                value={shopname}\r\n                onChange={(e) => setShopName(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Shop Address</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"shopaddress\"\r\n                value={shopaddress}\r\n                onChange={(e) => setShopAddress(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Vendor Contact No</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"vendorcontactno\"\r\n                value={vendorcontactno}\r\n                onChange={(e) => setVendorContactNo(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Shop Contact No</label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name_field\"\r\n                className=\"form-control\"\r\n                name=\"shopcontactno\"\r\n                value={shopcontactno}\r\n                onChange={(e) => setShopContactNo(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\"> Vendor Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                className=\"form-control\"\r\n                name=\"vendoremail\"\r\n                value={vendoremail}\r\n                onChange={(e) => setVendorEmail(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"avatar_upload\">Avatar</label>\r\n              <div className=\"d-flex align-items-center\">\r\n                <div>\r\n                  <figure className=\"avatar mr-3 item-rtl\">\r\n                    <img\r\n                      src={avatarPreview}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"Avatar Preview\"\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"custom-file\">\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"avatar\"\r\n                    className=\"custom-file-input\"\r\n                    id=\"customFile\"\r\n                    accept=\"image/*\"\r\n                    onChange={onChange}\r\n                  />\r\n                  <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                    Choose Avatar\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn update-btn btn-block mt-4 mb-3\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateVendorProfile;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\r\n  //we will get component from App.js which is profile  as props and rest will be all the other props like path, exact etc.\r\n  const { isAuthenticatedUser, loading, user } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading === false && (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => {\r\n            if (isAuthenticatedUser === false) {\r\n              return <Redirect to=\"/login\" />;\r\n            }\r\n\r\n            return <Component {...props} />;\r\n          }}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProtectedRoutes = ({ isAdmin, component: Component, ...rest }) => {\r\n  const { isAuthenticatedVendor, loadingg, vendor } = useSelector(\r\n    (state) => state.vendor\r\n  );\r\n  return (\r\n    <Fragment>\r\n      {loadingg === false && (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => {\r\n            if (isAuthenticatedVendor === false) {\r\n              return <Redirect to=\"/login\" />;\r\n            }\r\n\r\n            if (isAdmin === true && vendor.role === \"admin\") {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n\r\n            return <Component {...props} />;\r\n          }}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoutes;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { allVendors } from \"../../actions/vendorActions\";\r\nimport { allProducts } from \"../../actions/productActions\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./pcBuildd.css\";\r\n\r\nconst PcBuildd = ({}) => {\r\n  const dispatch = useDispatch();\r\n  const { vendors } = useSelector((state) => state.allVendors);\r\n  const { products } = useSelector((state) => state.allProducts);\r\n\r\n  const [vendorProducts, setVendorProducts] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [selectedVendor, setSelectedVendor] = useState({});\r\n  const [cpus, setCpus] = useState([]);\r\n  const [gpus, setGpus] = useState([]);\r\n  const [motherBoards, setMotherBoards] = useState([]);\r\n  const [rams, setRams] = useState([]);\r\n  const [storages, setStorages] = useState([]);\r\n  const [powerSupplys, setPowerSupplys] = useState([]);\r\n  const [cases, setCases] = useState([]);\r\n  const [monitors, setMonitors] = useState([]);\r\n  const [build, setBuild] = useState({});\r\n\r\n  useEffect(() => {\r\n    dispatch(allProducts());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"selected Vendor\", selectedVendor);\r\n    resetProducts();\r\n    console.log(products);\r\n    const _products = products.filter((p) => p?.userId === selectedVendor); // searching for products of selected vendor because userId is vendor id which is given to every product\r\n    setVendorProducts([..._products]); // setting products of selected vendor\r\n  }, [selectedVendor]);\r\n\r\n  useEffect(() => {\r\n    const _cpus = vendorProducts.filter(\r\n      (p) => p.category.toLowerCase() === \"cpu\"\r\n    );\r\n    const _gpus = vendorProducts.filter(\r\n      (p) => p.category.toLowerCase() === \"graphiccards\"\r\n    );\r\n\r\n    const _motherBoards = vendorProducts.filter(\r\n      (p) => p.category.toLowerCase() === \"motherboards\"\r\n    );\r\n\r\n    const _rams = vendorProducts.filter(\r\n      (p) => p.category.toLowerCase() === \"ram\"\r\n    );\r\n\r\n    const _storages = vendorProducts.filter(\r\n      (p) => p.category.toLowerCase() === \"harddisks\"\r\n    );\r\n\r\n    const _powerSupplys = vendorProducts.filter(\r\n      (p) => p.category.toLowerCase() === \"powersupply\"\r\n    );\r\n\r\n    const _cases = vendorProducts.filter(\r\n      (p) => p.category.toLowerCase() === \"case\"\r\n    );\r\n\r\n    const _monitors = vendorProducts.filter(\r\n      (p) => p.category.toLowerCase() === \"monitor\"\r\n    );\r\n\r\n    setCpus(_cpus);\r\n    setGpus(_gpus);\r\n    setMotherBoards(_motherBoards);\r\n    setRams(_rams);\r\n    setStorages(_storages);\r\n    setPowerSupplys(_powerSupplys);\r\n    setCases(_cases);\r\n    setMonitors(_monitors);\r\n  }, [vendorProducts]);\r\n\r\n  const resetProducts = () => {\r\n    setBuild({});\r\n    setCpus([]);\r\n    setVendorProducts([]);\r\n    setGpus([]);\r\n    setMotherBoards([]);\r\n    setRams([]);\r\n    setStorages([]);\r\n    setPowerSupplys([]);\r\n    setCases([]);\r\n    setMonitors([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"build changed\", build);\r\n\r\n    Object.keys(build).forEach((key) => {\r\n      setTotal(total + build[key].price);\r\n    });\r\n  }, [build]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div class=\"container\">\r\n        <label>Choose a Store: </label>\r\n\r\n        <select\r\n          className=\"combobox1\"\r\n          onChange={(e) => setSelectedVendor(e.target.value)}\r\n        >\r\n          <option value={null} selected>\r\n            Select a store\r\n          </option>\r\n          {vendors.map((vendor) => {\r\n            return (\r\n              <option value={vendor._id} key={vendor._id}>\r\n                {vendor.shopname}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body text-center\">\r\n                <h5 class=\"card-title m-b-0\">System Builder</h5>\r\n              </div>\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Component</th>\r\n                      <th scope=\"col\">Select</th>\r\n                      <th scope=\"col\">Selection</th>\r\n                      <th scope=\"col\"> Price </th>\r\n                      <th scope=\"col\">Reset</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody class=\"customtable\">\r\n                    <tr>\r\n                      <td>\r\n                        <a> CPU </a>\r\n                      </td>\r\n                      <td>\r\n                        <select\r\n                          className=\"combobox\"\r\n                          onChange={(e) =>\r\n                            setBuild({\r\n                              ...build,\r\n                              cpu: JSON.parse(e.target.value),\r\n                            })\r\n                          }\r\n                        >\r\n                          <option value={null} selected>\r\n                            Select a CPU\r\n                          </option>\r\n                          {cpus.map((product) => {\r\n                            return (\r\n                              <option\r\n                                key={product._id}\r\n                                value={JSON.stringify(product)}\r\n                              >\r\n                                {product.name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </td>\r\n                      <td>{build?.cpu?.name}</td>\r\n                      <td>{build?.cpu?.price}</td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <i\r\n                          class=\"fa fa-trash\"\r\n                          aria-hidden=\"true\"\r\n                          onClick={() => setBuild({ ...build, cpu: \"\" })}\r\n                        ></i>{\" \"}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>MOTHERBOARD</td>\r\n                      <td>\r\n                        <select\r\n                          className=\"combobox\"\r\n                          onChange={(e) =>\r\n                            setBuild({\r\n                              ...build,\r\n                              motherBoards: JSON.parse(e.target.value),\r\n                            })\r\n                          }\r\n                        >\r\n                          <option value={null} selected>\r\n                            Select a Motherboard\r\n                          </option>\r\n                          {motherBoards.map((product) => {\r\n                            return (\r\n                              <option\r\n                                key={product._id}\r\n                                value={JSON.stringify(product)}\r\n                              >\r\n                                {product.name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </td>\r\n                      <td>{build?.motherBoards?.name}</td>\r\n                      <td>{build?.motherBoards?.price}</td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <i\r\n                          class=\"fa fa-trash\"\r\n                          aria-hidden=\"true\"\r\n                          onClick={() =>\r\n                            setBuild({ ...build, motherBoards: \"\" })\r\n                          }\r\n                        ></i>{\" \"}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>RAM</td>\r\n\r\n                      <td>\r\n                        <select\r\n                          className=\"combobox\"\r\n                          onChange={(e) =>\r\n                            setBuild({\r\n                              ...build,\r\n                              rams: JSON.parse(e.target.value),\r\n                            })\r\n                          }\r\n                        >\r\n                          <option value={null} selected>\r\n                            Select a Ram\r\n                          </option>\r\n                          {rams.map((product) => {\r\n                            return (\r\n                              <option\r\n                                key={product._id}\r\n                                value={JSON.stringify(product)}\r\n                              >\r\n                                {product.name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </td>\r\n                      <td>{build?.rams?.name}</td>\r\n                      <td>{build?.rams?.price}</td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <i\r\n                          class=\"fa fa-trash\"\r\n                          aria-hidden=\"true\"\r\n                          onClick={() =>\r\n                            setBuild({ ...build, rams: \"\" })\r\n                          }\r\n                        ></i>{\" \"}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td> STORAGE </td>\r\n                      <td>\r\n                        <select\r\n                          className=\"combobox\"\r\n                          onChange={(e) =>\r\n                            setBuild({\r\n                              ...build,\r\n                              storages: JSON.parse(e.target.value),\r\n                            })\r\n                          }\r\n                        >\r\n                          <option value={null} selected>\r\n                            Select a Storage\r\n                          </option>\r\n                          {storages.map((product) => {\r\n                            return (\r\n                              <option\r\n                                key={product._id}\r\n                                value={JSON.stringify(product)}\r\n                              >\r\n                                {product.name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </td>\r\n                      <td>{build?.storages?.name}</td>\r\n                      <td>{build?.storages?.price}</td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <i\r\n                          class=\"fa fa-trash\"\r\n                          aria-hidden=\"true\"\r\n                          onClick={() =>\r\n                            setBuild({ ...build, storages: \"\" })\r\n                          }\r\n                        ></i>{\" \"}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td> GRAPHIC CARD </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <select\r\n                          className=\"combobox\"\r\n                          onChange={(e) =>\r\n                            setBuild({\r\n                              ...build,\r\n                              graphiccards: JSON.parse(e.target.value),\r\n                            })\r\n                          }\r\n                        >\r\n                          <option value={null} selected>\r\n                            Select a GPU\r\n                          </option>\r\n                          {gpus.map((product) => {\r\n                            return (\r\n                              <option\r\n                                key={product._id}\r\n                                value={JSON.stringify(product)}\r\n                              >\r\n                                {product.name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </td>\r\n                      <td>{build?.graphiccards?.name}</td>\r\n                      <td>{build?.graphiccards?.price}</td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <i\r\n                          class=\"fa fa-trash\"\r\n                          aria-hidden=\"true\"\r\n                          onClick={() =>\r\n                            setBuild({ ...build, graphiccards: \"\" })\r\n                          }\r\n                        ></i>{\" \"}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>POWER SUPPLY</td>\r\n                      <td>\r\n                        <select\r\n                          className=\"combobox\"\r\n                          onChange={(e) =>\r\n                            setBuild({\r\n                              ...build,\r\n                              powerSupplys: JSON.parse(e.target.value),\r\n                            })\r\n                          }\r\n                        >\r\n                          <option value={null} selected>\r\n                            Select a PowerSupply\r\n                          </option>\r\n                          {powerSupplys.map((product) => {\r\n                            return (\r\n                              <option\r\n                                key={product._id}\r\n                                value={JSON.stringify(product)}\r\n                              >\r\n                                {product.name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </td>\r\n                      <td>{build?.powerSupplys?.name}</td>\r\n                      <td>{build?.powerSupplys?.price}</td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <i\r\n                          class=\"fa fa-trash\"\r\n                          aria-hidden=\"true\"\r\n                          onClick={() =>\r\n                            setBuild({ ...build, powerSupplys: \"\" })\r\n                          }\r\n                        ></i>{\" \"}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>CASE</td>\r\n                      <td>\r\n                        <select\r\n                          className=\"combobox\"\r\n                          onChange={(e) =>\r\n                            setBuild({\r\n                              ...build,\r\n                              cases: JSON.parse(e.target.value),\r\n                            })\r\n                          }\r\n                        >\r\n                          <option value={null} selected>\r\n                            Select a Casing\r\n                          </option>\r\n                          {cases.map((product) => {\r\n                            return (\r\n                              <option\r\n                                key={product._id}\r\n                                value={JSON.stringify(product)}\r\n                              >\r\n                                {product.name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </td>\r\n                      <td>{build?.cases?.name}</td>\r\n                      <td>{build?.cases?.price}</td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <i\r\n                          class=\"fa fa-trash\"\r\n                          aria-hidden=\"true\"\r\n                          onClick={() =>\r\n                            setBuild({ ...build, cases: \"\" })\r\n                          }\r\n                        ></i>{\" \"}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td> MONITOR </td>\r\n                      <td>\r\n                        <select\r\n                          className=\"combobox\"\r\n                          onChange={(e) =>\r\n                            setBuild({\r\n                              ...build,\r\n                              monitors: JSON.parse(e.target.value),\r\n                            })\r\n                          }\r\n                        >\r\n                          <option value={null} selected>\r\n                            Select a Moniter\r\n                          </option>\r\n                          {monitors.map((product) => {\r\n                            return (\r\n                              <option\r\n                                key={product._id}\r\n                                value={JSON.stringify(product)}\r\n                              >\r\n                                {product.name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </td>\r\n                      <td>{build?.monitors?.name}</td>\r\n                      <td>{build?.monitors?.price}</td>\r\n\r\n                      <td>\r\n                        {\" \"}\r\n                        <i\r\n                          class=\"fa fa-trash\"\r\n                          aria-hidden=\"true\"\r\n                          onClick={() =>\r\n                            setBuild({ ...build, monitors: \"\" })\r\n                          }\r\n                        ></i>{\" \"}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <br></br>\r\n              <br></br>\r\n              <label class=\"totalAmount\">Total Amount: {total}</label>\r\n              <Link to=\"/soon\">\r\n                <button type=\"button\" className=\"proceed\">\r\n                  Proceed\r\n                </button>\r\n              </Link>\r\n\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PcBuildd;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"sidebar-wrapper\">\r\n      <nav id=\"sidebar\">\r\n        <ul className=\"list-unstyled components\">\r\n          <li>\r\n            <Link to=\"/dashboard\">\r\n              <i className=\"fa fa-tachometer\"></i> Dashboard\r\n            </Link>\r\n          </li>\r\n\r\n          <li style={{position: 'relative'}}>\r\n            <a\r\n              href=\"#productSubmenu\"\r\n              data-bs-toggle=\"collapse\"\r\n              aria-expanded=\"false\"\r\n              className=\"dropdown-toggle\"\r\n            >\r\n              <i className=\"fa fa-product-hunt\"></i> Products\r\n            </a>\r\n            <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\r\n              <li>\r\n                <Link to=\"/admin/products\">\r\n                  <i className=\"fa fa-clipboard\"></i> All\r\n                </Link>\r\n              </li>\r\n\r\n              <li>\r\n                <Link to=\"/admin/product\">\r\n                  <i className=\"fa fa-plus\"></i> Create\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/admin/orders\">\r\n              <i className=\"fa fa-shopping-basket\"></i> Orders\r\n            </Link>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/admin/users\">\r\n              <i className=\"fa fa-users\"></i> Users\r\n            </Link>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/admin/reviews\">\r\n              <i className=\"fa fa-star\"></i> Reviews\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport Loader from \"../layout/Loader\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { getAdminProducts } from \"../../actions/productActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { vendor} = useSelector(state => state.vendor)\r\n  const { products } = useSelector((state) => state.products);\r\n\r\n  const [vendorProducts, setVendorProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const _products = products.filter(p => p.userId === vendor._id);\r\n   \r\n    setVendorProducts(_products);\r\n  },[products])\r\n \r\n\r\n  let outOfStock = 0;\r\n  products.forEach((product) => {\r\n    if (product.stock === 0) {\r\n      outOfStock += 1;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getAdminProducts());\r\n  }, [dispatch]);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row\">\r\n        <div className=\" col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <h1 className=\"my-4\">Dashboard</h1>\r\n          <div className=\"row pr-4\">\r\n            <div className=\"col-xl-12 col-sm-12 mb-3\">\r\n              <div className=\"card text-white bg-primary o-hidden h-100\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"text-center card-font-size\">\r\n                    Total Amount\r\n                    <br /> <b></b>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row pr-4\">\r\n            <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n              <div className=\"card text-white bg-success o-hidden h-100\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"text-center card-font-size\">\r\n                    Products\r\n                    <br /> <b>{vendorProducts && vendorProducts.length}</b>\r\n                  </div>\r\n                </div>\r\n                <Link\r\n                  className=\"card-footer text-white clearfix small z-1\"\r\n                  to=\"/admin/products\"\r\n                >\r\n                  <span className=\"float-left\">View Details</span>\r\n                  <span className=\"float-right\">\r\n                    <i className=\"fa fa-angle-right\"></i>\r\n                  </span>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n              <div className=\"card text-white bg-danger o-hidden h-100\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"text-center card-font-size\">\r\n                    Orders\r\n                    <br /> \r\n                  </div>\r\n                </div>\r\n                <Link\r\n                  className=\"card-footer text-white clearfix small z-1\"\r\n                  to=\"/admin/orders\"\r\n                >\r\n                  <span className=\"float-left\">View Details</span>\r\n                  <span className=\"float-right\">\r\n                    <i className=\"fa fa-angle-right\"></i>\r\n                  </span>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n         \r\n\r\n            <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n              <div className=\"card text-white bg-warning o-hidden h-100\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"text-center card-font-size\">\r\n                    Out of Stock\r\n                    <br /> <b>{outOfStock}</b>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\nimport Loader from \"../layout/Loader\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAdminProducts, deleteProduct, clearErrors } from \"../../actions/productActions\";\r\nimport {DELETE_PRODUCT_RESET} from \"../../constants/productConstant\"\r\n\r\nconst ProductsList = ({ history }) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, products } = useSelector((state) => state.products);\r\n  const { vendor} = useSelector(state => state.vendor)\r\n  const [vendorProducts, setVendorProducts] = useState([]);\r\n\r\n  const { error: deleteError, isDeleted } = useSelector(\r\n    (state) => state.product\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getAdminProducts());\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors);\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors);\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success(\"Product deleted successfully\");\r\n      history.push(\"/admin/products\");\r\n      dispatch({ type: DELETE_PRODUCT_RESET });\r\n    }\r\n  }, [dispatch, alert, error, deleteError, isDeleted, history]);\r\n\r\n  const setProducts = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: \"ID\",\r\n          field: \"id\",\r\n          sort: \"asc\",\r\n        },\r\n        {\r\n          label: \"Name\",\r\n          field: \"name\",\r\n          sort: \"asc\",\r\n        },\r\n        {\r\n          label: \"Price\",\r\n          field: \"price\",\r\n          sort: \"asc\",\r\n        },\r\n        {\r\n          label: \"Stock\",\r\n          field: \"stock\",\r\n          sort: \"asc\",\r\n        },\r\n        {\r\n          label: \"Actions\",\r\n          field: \"actions\",\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    products.forEach((product) => {\r\n      if(product.userId === vendor._id)\r\n      {data.rows.push({\r\n        id: product._id,\r\n        name: product.name,\r\n        price: `${product.price}Rs`,\r\n        stock: product.stock,\r\n        actions: (\r\n          <Fragment>\r\n            <Link\r\n              to={`/admin/product/${product._id}`}\r\n              className=\"btn btn-primary py-1 px-2\"\r\n            >\r\n              <i className=\"fa fa-pencil\"></i>\r\n            </Link>\r\n            <button\r\n              className=\"btn btn-danger py-1 px-2 ml-2\"\r\n              onClick={() => deleteProductHandler(product._id)}\r\n            >\r\n              <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n          </Fragment>\r\n        ),\r\n      });}\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  const deleteProductHandler = (id) => {\r\n    dispatch(deleteProduct(id));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"All Products\"} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <Fragment>\r\n            <h1 className=\"my-5\">All Products</h1>\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <MDBDataTable\r\n                data={setProducts()}\r\n                className=\"px-3\"\r\n                bordered\r\n                striped\r\n                hover\r\n              />\r\n            )}\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductsList;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newProduct, clearErrors } from \"../../actions/productActions\";\r\nimport { NEW_PRODUCT_RESET } from \"../../constants/productConstant\";\r\n\r\nconst NewProduct = ({ history }) => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [stock, setStock] = useState(0);\r\n  // const [vendor, setVendor] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n  const categories = [\r\n    \"Electronics\",\r\n    \"Laptops\",\r\n    \"Mobiles\",\r\n    \"Computers\",\r\n    \"Accessories\",\r\n    \"MotherBoards\",\r\n    \"Processors\",\r\n    \"GraphicCards\",\r\n    \"Ram\",\r\n    \"HardDisks\",\r\n    \"SSD\",\r\n    \"KeyBoards\",\r\n    \"Mouse\",\r\n    \"Headphones\",\r\n    'Cpu',\r\n    'PowerSupply',\r\n    'Case',\r\n    'Monitor',\r\n  ];\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, success } = useSelector((state) => state.newProduct);\r\n  const { vendor} = useSelector(state => state.vendor)\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      history.push(\"/admin/products\");\r\n      alert.success(\"Product created successfully\");\r\n      dispatch({ type: NEW_PRODUCT_RESET });\r\n    }\r\n  }, [dispatch, alert, error, success, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set(\"userId\", vendor._id);\r\n    formData.set(\"name\", name);\r\n    formData.set(\"price\", price);\r\n    formData.set(\"description\", description);\r\n    formData.set(\"category\", category);\r\n    formData.set(\"stock\", stock);\r\n    formData.set(\"vendor\", vendor.name);\r\n\r\n    images.forEach((image) => {\r\n      formData.append(\"images\", image);\r\n    });\r\n\r\n    dispatch(newProduct(formData));\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n\r\n    setImagesPreview([]); //if user add images again so we have to set old selected images to empty array\r\n    setImages([]);\r\n\r\n    files.forEach((file) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setImagesPreview((oldArray) => [...oldArray, reader.result]); //it will spread the previous array of image and add new image to it\r\n          setImages((oldArray) => [...oldArray, reader.result]);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"New Product\"} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <Fragment>\r\n            <div className=\"wrapper my-5\">\r\n              <form\r\n                className=\"shadow-lg\"\r\n                onSubmit={submitHandler}\r\n                encType=\"multipart/form-data\"\r\n              >\r\n                <h1 className=\"mb-4\">New Product</h1>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name_field\">User Id</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name_field\"\r\n                    className=\"form-control\"\r\n                    value={userId}\r\n                    onChange={(e) => setUserId(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name_field\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name_field\"\r\n                    className=\"form-control\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"price_field\">Price</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"price_field\"\r\n                    className=\"form-control\"\r\n                    value={price}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"description_field\">Description</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    id=\"description_field\"\r\n                    rows=\"8\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></textarea>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"category_field\">Category</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    id=\"category_field\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                  >\r\n                    {categories.map((category) => (\r\n                      <option key={category} value={category}>\r\n                        {category}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"stock_field\">Stock</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"stock_field\"\r\n                    className=\"form-control\"\r\n                    value={stock}\r\n                    onChange={(e) => setStock(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                {/* <div className=\"form-group\">\r\n                  <label htmlFor=\"seller_field\">Vendor Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"seller_field\"\r\n                    className=\"form-control\"\r\n                    value={vendor}\r\n                    onChange={(e) => setVendor(e.target.value)}\r\n                  />\r\n                </div> */}\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Images</label>\r\n\r\n                  <div className=\"custom-file\">\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"product_images\"\r\n                      className=\"custom-file-input\"\r\n                      id=\"customFile\"\r\n                      onChange={onChange}\r\n                      multiple\r\n                    />\r\n                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                      Choose Images\r\n                    </label>\r\n                  </div>\r\n\r\n                  {imagesPreview.map((img) => (\r\n                    <img\r\n                      src={img}\r\n                      key={img}\r\n                      alt=\"Images Preview\"\r\n                      className=\"mt-3 mr-2\"\r\n                      width=\"55\"\r\n                      height=\"52\"\r\n                    />\r\n                  ))}\r\n                </div>\r\n\r\n                <button\r\n                  id=\"login_button\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-block py-3\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  CREATE\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewProduct;\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstant'\r\n\r\nconst UpdateProduct = ({ match, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        \"Electronics\",\r\n        \"Laptops\",\r\n        \"Mobiles\",\r\n        \"Computers\",\r\n        \"Accessories\",\r\n        \"MotherBoards\",\r\n        \"Processors\",\r\n        \"GraphicCards\",\r\n        \"Ram\",\r\n        \"HardDisks\",\r\n        \"SSD\",\r\n        \"KeyBoards\",\r\n        \"Mouse\",\r\n        \"Headphones\",\r\n        \"Cpu\",\r\n        \"PowerSupply\",\r\n        \"Case\",\r\n        \"Monitor\",\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, product } = useSelector(state => state.productDetails);\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\r\n\r\n    const productId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        if (product && product._id !== productId) {\r\n            dispatch(getProductDetails(productId));\r\n        } else {\r\n            setName(product.name);\r\n            setPrice(product.price);\r\n            setDescription(product.description);\r\n            setCategory(product.category);\r\n            setSeller(product.seller);\r\n            setStock(product.stock)\r\n            setOldImages(product.images)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors)\r\n        }\r\n\r\n        if (updateError) {\r\n            alert.error(updateError);\r\n            dispatch(clearErrors)\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            history.push('/admin/products');\r\n            alert.success('Product updated successfully');\r\n            dispatch({ type: UPDATE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isUpdated, history, updateError, product, productId])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(updateProduct(product._id, formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n        setOldImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Update Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                 </label>\r\n                                    </div>\r\n\r\n                                    {oldImages && oldImages.map(img => (\r\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    UPDATE\r\n                            </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct","\r\nexport const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST'\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS'\r\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL'\r\n\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST'\r\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS'\r\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL'\r\n\r\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST'\r\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS'\r\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL'\r\n\r\n\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productsReducers,\r\n  productDetailsReducer,\r\n  newProductReducer,\r\n  productReducer,\r\n  allProductsReducers,\r\n  newReviewReducer,\r\n} from \"./reducers/productReducers\";\r\nimport {\r\n  authReducer,\r\n  userReducer,\r\n  forgotPasswordReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nimport { vendorReducer, vendorrReducer, allVendorsReducer } from \"./reducers/vendorReducers\";\r\n\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\n\r\nimport {newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  products: productsReducers,\r\n  productDetails: productDetailsReducer,\r\n  newProduct: newProductReducer,\r\n  product: productReducer,\r\n  allProducts: allProductsReducers,\r\n  newReview: newReviewReducer,\r\n\r\n  auth: authReducer,\r\n  vendor: vendorReducer,\r\n  vendorr: vendorrReducer,\r\n  allVendors: allVendorsReducer,\r\n  \r\n\r\n  user: userReducer,\r\n  forgotPassword: forgotPasswordReducer,\r\n  cart: cartReducer,\r\n\r\n  newOrder: newOrderReducer,\r\n  myOrders: myOrdersReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  allOrders: allOrdersReducer,\r\n});\r\n\r\nlet initialState = {\r\n  cart: {\r\n    cartItems: localStorage.getItem(\"cartItems\")\r\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n      : [],\r\n\r\n      shippingInfo: localStorage.getItem(\"shippingInfo\")\r\n      ? JSON.parse(localStorage.getItem(\"shippingInfo\"))\r\n      : {},\r\n  },\r\n};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  ALL_PRODUCTS_REQUEST,\r\n  ALL_PRODUCTS_SUCCESS,\r\n  ALL_PRODUCTS_FAIL,\r\n  ADMIN_PRODUCTS_REQUEST,\r\n  ADMIN_PRODUCTS_SUCCESS,\r\n  ADMIN_PRODUCTS_FAIL,\r\n  NEW_PRODUCT_REQUEST,\r\n  NEW_PRODUCT_SUCCESS,\r\n  NEW_PRODUCT_FAIL,\r\n  NEW_PRODUCT_RESET,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_RESET,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_RESET,\r\n\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n\r\n  NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_RESET,\r\n    NEW_REVIEW_FAIL,\r\n\r\n  SELECT_ALL_PRODUCT_REQUEST,\r\n  SELECT_ALL_PRODUCT_SUCCESS,\r\n  SELECT_ALL_PRODUCT_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/productConstant\";\r\n\r\nexport const productsReducers = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case ALL_PRODUCTS_REQUEST:\r\n    case ADMIN_PRODUCTS_REQUEST:\r\n      return {\r\n        loading: true,\r\n        products: [],\r\n      };\r\n\r\n    case ALL_PRODUCTS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        productsCount: action.payload.productsCount,\r\n        resPerPage: action.payload.resPerPage,\r\n        filteredProductCount: action.payload.filteredProductCount,\r\n      };\r\n\r\n    case ADMIN_PRODUCTS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload,\r\n      };\r\n\r\n    case ALL_PRODUCTS_FAIL:\r\n    case ADMIN_PRODUCTS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false, //because product is fetch from backend\r\n        product: action.payload, // we will pass the product in payload\r\n      };\r\n\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const newProductReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case NEW_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case NEW_PRODUCT_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: action.payload.success,\r\n        product: action.payload.product,\r\n      };\r\n\r\n    case NEW_PRODUCT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case NEW_PRODUCT_RESET:\r\n      return {\r\n        ...state,\r\n        success: false,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n//Handling both delete and update product in this reducer.\r\n\r\nexport const productReducer = (state = { }, action) => {\r\n  switch (action.type) {\r\n    case DELETE_PRODUCT_REQUEST:\r\n      case UPDATE_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case DELETE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isDeleted: action.payload,\r\n     \r\n      };\r\n\r\n      \r\n    case UPDATE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdated: action.payload,\r\n     \r\n      };\r\n\r\n    case DELETE_PRODUCT_FAIL:\r\n      case UPDATE_PRODUCT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case DELETE_PRODUCT_RESET:\r\n      return {\r\n        ...state,\r\n        isDeleted: false,\r\n      };\r\n\r\n      case UPDATE_PRODUCT_RESET:\r\n        return {\r\n          ...state,\r\n          isUpdated: false,\r\n        };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n//get All products for PcBuildd page\r\n\r\nexport const allProductsReducers = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case SELECT_ALL_PRODUCT_REQUEST:\r\n    \r\n    return {\r\n        loading: true,\r\n        products: [],\r\n      };\r\n\r\n    case SELECT_ALL_PRODUCT_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload,\r\n        \r\n        \r\n      };\r\n\r\n    case SELECT_ALL_PRODUCT_FAIL:\r\n    \r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n//new review reducer\r\nexport const newReviewReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n\r\n      case NEW_REVIEW_REQUEST:\r\n          return {\r\n              ...state,\r\n              loading: true\r\n          }\r\n\r\n      case NEW_REVIEW_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              success: action.payload\r\n          }\r\n\r\n      case NEW_REVIEW_FAIL:\r\n          return {\r\n              ...state,\r\n              error: action.payload\r\n          }\r\n\r\n      case NEW_REVIEW_RESET:\r\n          return {\r\n              ...state,\r\n              success: false\r\n          }\r\n\r\n      case CLEAR_ERRORS:\r\n          return {\r\n              ...state,\r\n              error: null\r\n          }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n","\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  REGISTER_USER_REQUEST,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_FAIL,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  UPDATE_PROFILE_RESET,\r\n  UPDATE_PASSWORD_REQUEST,\r\n  UPDATE_PASSWORD_SUCCESS,\r\n  UPDATE_PASSWORD_RESET,\r\n  UPDATE_PASSWORD_FAIL,\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_FAIL,\r\n  NEW_PASSWORD_REQUEST,\r\n  NEW_PASSWORD_SUCCESS,\r\n  NEW_PASSWORD_FAIL,\r\n \r\n  CLEAR_ERRORS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const authReducer = (state = { user: {} }, action) => {\r\n  //storing user  in state\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n    case REGISTER_USER_REQUEST:\r\n    case LOAD_USER_REQUEST:\r\n      return {\r\n        loading: true,\r\n        isAuthenticatedUser: false,\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_USER_SUCCESS:\r\n    case LOAD_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticatedUser: true,\r\n        user: action.payload,\r\n      };\r\n\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        isAuthenticatedUser: false, //cause user is logout\r\n        user: null,\r\n      };\r\n\r\n    case LOAD_USER_FAIL:\r\n      return {\r\n        loading: false,\r\n        isAuthenticatedUser: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n\r\n    case LOGOUT_FAIL:\r\n      return {\r\n        ...state,\r\n        erroe: action.payload,\r\n      };\r\n\r\n    case LOGIN_FAIL:\r\n    case REGISTER_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PROFILE_REQUEST:\r\n    case UPDATE_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case UPDATE_PROFILE_SUCCESS:\r\n    case UPDATE_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdated: action.payload,\r\n      };\r\n\r\n    case UPDATE_PROFILE_RESET:\r\n    case UPDATE_PASSWORD_RESET:\r\n      return {\r\n        ...state,\r\n        isupdated: false,\r\n      };\r\n\r\n    case UPDATE_PROFILE_FAIL:\r\n    case UPDATE_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const forgotPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FORGOT_PASSWORD_REQUEST:\r\n    case NEW_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n\r\n    case FORGOT_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload,\r\n      };\r\n\r\n    case NEW_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: action.payload,\r\n      };\r\n\r\n    case FORGOT_PASSWORD_FAIL:\r\n    case NEW_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n","import {\r\n  LOGIN_VENDOR_REQUEST,\r\n  LOGIN_VENDOR_SUCCESS,\r\n  LOGIN_VENDOR_FAIL,\r\n  REGISTER_VENDOR_REQUEST,\r\n  REGISTER_VENDOR_SUCCESS,\r\n  REGISTER_VENDOR_FAIL,\r\n  LOAD_VENDOR_REQUEST,\r\n  LOAD_VENDOR_SUCCESS,\r\n  LOAD_VENDOR_FAIL,\r\n  LOGOUT_VENDOR_SUCCESS,\r\n  LOGOUT_VENDOR_FAIL,\r\n  UPDATE_VENDOR_PROFILE_REQUEST,\r\n  UPDATE_VENDOR_PROFILE_SUCCESS,\r\n  UPDATE_VENDOR_PROFILE_FAIL,\r\n  UPDATE_VENDOR_PROFILE_RESET,\r\n  ALL_VENDORS_REQUEST,\r\n  ALL_VENDORS_SUCCESS,\r\n  ALL_VENDORS_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/vendorConstants\";\r\n\r\nexport const vendorReducer = (state = { vendor: {} }, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_VENDOR_REQUEST:\r\n    case REGISTER_VENDOR_REQUEST:\r\n    case LOAD_VENDOR_REQUEST:\r\n      return {\r\n        loadingg: true,\r\n        isAuthenticatedVendor: false,\r\n      };\r\n\r\n    case LOGIN_VENDOR_SUCCESS:\r\n    case REGISTER_VENDOR_SUCCESS:\r\n    case LOAD_VENDOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loadingg: false,\r\n        isAuthenticatedVendor: true,\r\n        vendor: action.payload,\r\n      };\r\n\r\n    case LOGOUT_VENDOR_SUCCESS:\r\n      return {\r\n        loadingg: false,\r\n        isAuthenticatedVendor: false,\r\n        vendor: null,\r\n      };\r\n\r\n    case LOAD_VENDOR_FAIL:\r\n      return {\r\n        loadingg: false,\r\n        isAuthenticatedVendor: false,\r\n        vendor: null,\r\n        error: action.payload,\r\n      };\r\n\r\n    case LOGOUT_VENDOR_FAIL:\r\n      return {\r\n        ...state,\r\n        erroe: action.payload,\r\n      };\r\n\r\n    case LOGIN_VENDOR_FAIL:\r\n    case REGISTER_VENDOR_FAIL:\r\n      return {\r\n        ...state,\r\n        loadingg: false,\r\n        isAuthenticatedVendor: false,\r\n        vendor: null,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const vendorrReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_VENDOR_PROFILE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case UPDATE_VENDOR_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        idUpdated: action.payload, //is updated mean we only have to check whether user is updated or not on the backend we have a success variable that will be true or false.\r\n      };\r\n\r\n    case UPDATE_VENDOR_PROFILE_RESET:\r\n      return {\r\n        ...state,\r\n        isUpdated: false, //after updating the user i have to set isUpdated to false so that the user can update the profile again.\r\n      };\r\n\r\n    case UPDATE_VENDOR_PROFILE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//getting all user reducers\r\nexport const allVendorsReducer = (state = {vendors: []}, action) => {\r\n  switch (action.type) {\r\n    \r\n    case ALL_VENDORS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      \r\n      };\r\n\r\n   \r\n\r\n    case ALL_VENDORS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vendors: action.payload,\r\n      };\r\n\r\n    \r\n    case ALL_VENDORS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_TO_CART,\r\n  REMOVE_ITEM_CART,\r\n  SAVE_SHIPPING_INFO,\r\n  RESET_CART,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingInfo: {} },\r\n  action\r\n) => {\r\n  //cart items mean what does user has selected how many items he selected\r\n  switch (action.type) {\r\n    case RESET_CART:\r\n      return {\r\n        cartItems: [],\r\n        shippingInfo: {},\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      const item = action.payload; //payload is the product we have put it in the cart\r\n      const isItemExist = state.cartItems.find(\r\n        (i) => i.product === item.product\r\n      ); //find the product in the cart\r\n\r\n      if (isItemExist) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((i) =>\r\n            i.product === isItemExist.product ? item : i\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item], //if item is not in the cart then add it to the cart\r\n        };\r\n      }\r\n\r\n    case REMOVE_ITEM_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((i) => i.product !== action.payload), //action.payload will be the id of that product that i want to remove from the cart. so i will filter out all the product instead that i want to delete.\r\n      };\r\n\r\n    case SAVE_SHIPPING_INFO:\r\n      return {\r\n        ...state,\r\n        shippingInfo: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAIL,\r\n  CLEAR_ERRORS,\r\n  MY_ORDERS_REQUEST,\r\n  MY_ORDERS_SUCCESS,\r\n  MY_ORDERS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nexport const newOrderReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n\r\n      case CREATE_ORDER_REQUEST:\r\n          return {\r\n              ...state,\r\n              loading: true\r\n          }\r\n\r\n      case CREATE_ORDER_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              order: action.payload\r\n          }\r\n\r\n      case CREATE_ORDER_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload\r\n          }\r\n\r\n      case CLEAR_ERRORS:\r\n          return {\r\n              ...state,\r\n              error: null\r\n          }\r\n\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\n//My orders\r\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case MY_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case MY_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case MY_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//order is empty beacuse this is one order\r\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ALL_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ALL_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload.orders,\r\n                totalAmount: action.payload.totalAmount\r\n            }\r\n\r\n        case ALL_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addItemToCart, removeItemFromCart } from \"../../actions/cartActions\";\r\n\r\nconst Cart = ({history} ) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n\r\n  const removeCartItemHandler = (id) => {\r\n    dispatch(removeItemFromCart(id));\r\n  };\r\n\r\n  const increaseQty = (id, quantity, stock) => {\r\n    const newQty = quantity + 1;\r\n\r\n    if (newQty > stock) return;\r\n\r\n    dispatch(addItemToCart(id, newQty));\r\n  };\r\n\r\n  const decreaseQty = (id, quantity) => {\r\n    const newQty = quantity - 1;\r\n\r\n    if (newQty <= 0) return;\r\n\r\n    dispatch(addItemToCart(id, newQty));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"Your Cart\"} />\r\n      {cartItems.length === 0 ? (\r\n        <h2 className=\"mt-5\">Your Cart is Empty</h2>\r\n      ) : (\r\n        <Fragment>\r\n          <h2 className=\"mt-5\">\r\n            Your Cart: <b>{cartItems.length} items</b>\r\n          </h2>\r\n\r\n          <div className=\"row d-flex justify-content-between\">\r\n            <div className=\"col-12 col-lg-8\">\r\n              {cartItems.map((item) => (\r\n                <Fragment>\r\n                  <hr />\r\n\r\n                  <div className=\"cart-item\" key={item.product}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-4 col-lg-3\">\r\n                        <img src={item.image} alt=\"\" height=\"90\" width=\"115\" />\r\n                      </div>\r\n\r\n                      <div className=\"col-5 col-lg-3\">\r\n                        <Link to={`/products/${item.product}`}>\r\n                          {item.name}\r\n                        </Link>\r\n                      </div>\r\n\r\n                      <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                        <p id=\"card_item_price\">RS{item.price}</p>\r\n                      </div>\r\n\r\n                      <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                        <div className=\"stockCounter d-inline\">\r\n                          <span\r\n                            className=\"btn btn-danger minus\"\r\n                            onClick={\r\n                              () => decreaseQty(item.product, item.quantity) //item product is item id.\r\n                            }\r\n                          >\r\n                            -\r\n                          </span>\r\n\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control count d-inline\"\r\n                            value={item.quantity}\r\n                            readOnly\r\n                          />\r\n\r\n                          <span\r\n                            className=\"btn btn-primary plus\"\r\n                            onClick={() =>\r\n                              increaseQty(\r\n                                item.product,\r\n                                item.quantity,\r\n                                item.stock\r\n                              )\r\n                            }\r\n                          >\r\n                            +\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                        <i\r\n                          id=\"delete_cart_item\"\r\n                          className=\"fa fa-trash btn btn-danger\"\r\n                          onClick={() => removeCartItemHandler(item.product)}\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                </Fragment>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3 my-4\">\r\n              <div id=\"order_summary\">\r\n                <h4>Order Summary</h4>\r\n                <hr />\r\n                <p>\r\n                  Subtotal:{\" \"}\r\n                  <span className=\"order-summary-values\">\r\n                    {cartItems.reduce(\r\n                      //using reduce becuase we have to reduce multiple values into one value\r\n                      (acc, item) => acc + Number(item.quantity), //acc is use as accumlator it will accumlate the total added unit in it.\r\n                      0\r\n                    )}{\" \"}\r\n                    (Units)\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  Est. total:{\" \"}\r\n                  <span className=\"order-summary-values\">\r\n                    RS\r\n                    {cartItems\r\n                      .reduce(\r\n                        (acc, item) => acc + item.quantity * item.price,\r\n                        0\r\n                      )\r\n                      //after decimal we will get only two values\r\n                      .toFixed(2)}\r\n                  </span>\r\n                </p>\r\n\r\n                <hr />\r\n                <button\r\n                  id=\"checkout_btn\"\r\n                  className=\"btn btn-primary btn-block\"\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  Check out\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n//we have three checkout steps\r\nconst CheckoutSteps = ({ shipping, confirmOrder, payment }) => {\r\n    return (\r\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\r\n\r\n          {/* //if we are on the shipping page then do this steps */}\r\n\r\n            {shipping ? <Link to='shippping' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Shipping</div>\r\n                <div className=\"triangle-active\"></div>\r\n\r\n        {/* //if we are not on the shipping page so else do these steps and do Nothing */}\r\n\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Shipping</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n                {/* //if we are on the confirm page then do this steps */}\r\n\r\n            {confirmOrder ? <Link to='/order/confirm' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Confirm Order</div>\r\n                <div className=\"triangle-active\"></div>\r\n\r\n                    {/* //if we are not on the confirm page so else do these steps and do Nothing */}\r\n\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Confirm Order</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n            {payment ? <Link to='/payment' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Payment</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Payment</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { Fragment, useState } from 'react'\r\nimport { countries } from 'countries-list'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n import CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingInfo } from '../../actions/cartActions'\r\n\r\nconst Shipping = ({ history }) => {\r\n\r\n    const countriesList = Object.values(countries)\r\n\r\n    const { shippingInfo } = useSelector(state => state.cart)\r\n\r\n    const [address, setAddress] = useState(shippingInfo.address)\r\n    const [city, setCity] = useState(shippingInfo.city)\r\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\r\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\r\n    const [country, setCountry] = useState(shippingInfo.country)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n\r\n      \r\n        dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }))\r\n        history.push('/confirm')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Shipping Info'} />\r\n\r\n            <CheckoutSteps shipping />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Shipping Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"address_field\">Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"address_field\"\r\n                                className=\"form-control\"\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"city_field\">City</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"city_field\"\r\n                                className=\"form-control\"\r\n                                value={city}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone_field\">Phone No</label>\r\n                            <input\r\n                                type=\"phone\"\r\n                                id=\"phone_field\"\r\n                                className=\"form-control\"\r\n                                value={phoneNo}\r\n                                onChange={(e) => setPhoneNo(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"postal_code_field\"\r\n                                className=\"form-control\"\r\n                                value={postalCode}\r\n                                onChange={(e) => setPostalCode(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"country_field\">Country</label>\r\n                            <select\r\n                                id=\"country_field\"\r\n                                className=\"form-control\"\r\n                                value={country}\r\n                                onChange={(e) => setCountry(e.target.value)}\r\n                                required\r\n                            >\r\n\r\n                                {countriesList.map(country => (\r\n                                    <option key={country.name} value={country.name}>\r\n                                        {country.name}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"shipping_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            CONTINUE\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Shipping","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ConfirmOrder = ({ history }) => {\r\n\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    // Calculate Order Prices\r\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n\r\n    //if item price is greater then 200 shipping price is 25 other wise its 0\r\n    const shippingPrice = itemsPrice > 200 ? 0 : 25\r\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\r\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2) \r\n\r\n    const processToPayment = () => {\r\n        const data = {\r\n            itemsPrice: itemsPrice.toFixed(2),\r\n            shippingPrice,\r\n            taxPrice,\r\n            totalPrice\r\n        }\r\n\r\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Confirm Order'} />\r\n\r\n            <CheckoutSteps shipping confirmOrder />\r\n\r\n            <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n\r\n                    <h4 className=\"mb-3\">Shipping Info</h4>\r\n                    <p><b>Name:</b> {user && user.name}</p>\r\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\r\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\r\n\r\n                    <hr />\r\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n\r\n                    {cartItems.map(item => (\r\n                        <Fragment>\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\" key={item.product}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 col-lg-2\">\r\n                                        <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-5 col-lg-6\">\r\n                                        <Link to={`/product/{item.product}`}>{item.name}</Link>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\r\n                                        <p>{item.quantity} x ${item.price} = <b>{(item.quantity * item.price).toFixed(2)}</b></p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                        </Fragment>\r\n                    ))}\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-3 my-4\">\r\n                    <div id=\"order_summary\">\r\n                        <h4>Order Summary</h4>\r\n                        <hr />\r\n                        <p>Subtotal:  <span className=\"order-summary-values\">{itemsPrice}</span></p>\r\n                        <p>Shipping: <span className=\"order-summary-values\">{shippingPrice}</span></p>\r\n                        <p>Tax:  <span className=\"order-summary-values\">{taxPrice}</span></p>\r\n\r\n                        <hr />\r\n\r\n                        <p>Total: <span className=\"order-summary-values\">{totalPrice}</span></p>\r\n\r\n                        <hr />\r\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ConfirmOrder","import axios from 'axios'\r\n\r\nimport {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    CLEAR_ERRORS,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n\r\n  } from '../constants/orderConstants'\r\n\r\n  export const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: CREATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/order/new', order, config)\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get curretly logged in user orders\r\nexport const myOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/v1/orders/user')\r\n\r\n        dispatch({\r\n            type: MY_ORDERS_SUCCESS,\r\n            payload: data.orders\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MY_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get order details\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n    try {\r\n        \r\n\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/order/${id}`)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data.order\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get all orders - ADMIN\r\nexport const allOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/orders`)\r\n\r\n        dispatch({\r\n            type: ALL_ORDERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n// Clear Errors\r\nexport const clearErrors =  (dispatch) => {\r\n  dispatch({\r\n      type: CLEAR_ERRORS\r\n  })\r\n}","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createOrder, clearErrors } from '../../actions/orderActions'\r\n\r\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\r\n\r\nimport axios from 'axios'\r\n\r\nconst options = {\r\n    style: {\r\n        base: {\r\n            fontSize: '16px'\r\n        },\r\n        invalid: {\r\n            color: '#9e2146'\r\n        }\r\n    }\r\n}\r\n\r\nconst Payment = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart);\r\n    const { error } = useSelector(state => state.newOrder)\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors)   \r\n        }\r\n       \r\n\r\n    }, [dispatch, alert, error])\r\n\r\n    const order = {\r\n        orderItems: cartItems,\r\n        shippingInfo\r\n    }\r\n    //in the backend we have already defined what we have to get in order to place an order\r\n\r\n    //getting data from local storage\r\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\r\n    if (orderInfo) {\r\n        order.itemsPrice = orderInfo.itemsPrice\r\n        order.shippingPrice = orderInfo.shippingPrice\r\n        order.taxPrice = orderInfo.taxPrice\r\n        order.totalPrice = orderInfo.totalPrice\r\n    }\r\n\r\n    const paymentData = {\r\n        amount: Math.round(orderInfo.totalPrice * 100) //we have to pass amount as rs then convert it into hunderds and thousand\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        document.querySelector('#pay_btn').disabled = true;\r\n\r\n        let res;\r\n        try {\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n\r\n            res = await axios.post('/api/v1/payment/process',  paymentData, config)\r\n\r\n            const clientsecret = res.data.client_secret;\r\n\r\n            console.log(clientsecret);\r\n\r\n            if (!stripe || !elements) {\r\n                return;\r\n            }\r\n\r\n            const result = await stripe.confirmCardPayment(clientsecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardNumberElement),\r\n                    billing_details: {\r\n                        name: user.name,\r\n                        email: user.email\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (result.error) {\r\n                alert.error(result.error.message);\r\n                document.querySelector('#pay_btn').disabled = false;\r\n            } else {\r\n\r\n                // The payment is processed or not\r\n                if (result.paymentIntent.status === 'succeeded') {\r\n\r\n                    order.paymentInfo = {\r\n                        id: result.paymentIntent.id,\r\n                        status: result.paymentIntent.status\r\n                    }\r\n\r\n                    dispatch(createOrder(order))\r\n\r\n                    history.push('/success')\r\n                } else {\r\n                    alert.error('There is some issue while payment processing')\r\n                }\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            document.querySelector('#pay_btn').disabled = false;\r\n            alert.error(error.response.data.message)\r\n\r\n            console.log(error.response.data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Payment'} />\r\n\r\n            <CheckoutSteps shipping confirmOrder payment />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Card Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_num_field\">Card Number</label>\r\n                            <CardNumberElement\r\n                                type=\"text\"\r\n                                id=\"card_num_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                            <CardExpiryElement\r\n                                type=\"text\"\r\n                                id=\"card_exp_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                            <CardCvcElement\r\n                                type=\"text\"\r\n                                id=\"card_cvc_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <button\r\n                            id=\"pay_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            Pay {` - ${orderInfo && orderInfo.totalPrice}`}\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Payment","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nconst OrderSuccess = () => {\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Order Success'} />\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-6 mt-5 text-center\">\r\n                    <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/payment-successful.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\r\n\r\n                    <h2>Your Order has been placed successfully.</h2>\r\n\r\n                    <Link to=\"/orders/user\">Go to Orders</Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderSuccess","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { myOrders, clearErrors } from '../../actions/orderActions'\r\n\r\nconst ListOrders = () => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector(state => state.myOrders);\r\n\r\n    useEffect(() => {\r\n        dispatch(myOrders());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors)\r\n        }\r\n    }, [dispatch, alert, error])\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Num of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `${order.totalPrice} Rs`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions:\r\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'My Orders'} />\r\n\r\n            <h1 className=\"my-5\">My Orders</h1>\r\n\r\n            {loading ? <Loader /> : (\r\n                <MDBDataTable\r\n                    data={setOrders()}\r\n                    className=\"px-3\"\r\n                    bordered\r\n                    striped\r\n                    hover\r\n                />\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions'\r\n\r\nconst OrderDetails = ({ match }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails)\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(match.params.id));\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors)\r\n        }\r\n    }, [dispatch, alert, error, match.params.id])\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Order Details'} />\r\n\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\r\n\r\n                            <h1 className=\"my-5\">Order # {order._id}</h1>\r\n\r\n                            <h4 className=\"mb-4\">Shipping Info</h4>\r\n                            <p><b>Name:</b> {user && user.name}</p>\r\n                            <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                            <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                            <p><b>Amount:</b> {totalPrice} Rs</p>\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"my-4\">Payment</h4>\r\n                            <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Status:</h4>\r\n                            <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\">\r\n                                {orderItems && orderItems.map(item => (\r\n                                    <div key={item.product} className=\"row my-5\">\r\n                                        <div className=\"col-4 col-lg-2\">\r\n                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-5 col-lg-5\">\r\n                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                            <p> {item.price} Rs</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                            <p>{item.quantity} Piece(s)</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderDetails","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allOrders, clearErrors } from '../../actions/orderActions'\r\n\r\n\r\nconst OrdersList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector(state => state.allOrders);\r\n   \r\n\r\n    useEffect(() => {\r\n        dispatch(allOrders());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors)\r\n        }\r\n\r\n        \r\n    }, [dispatch, alert, error,  history])\r\n\r\n  \r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'No of Items',\r\n                    field: 'numofItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numofItems: order.orderItems.length,\r\n                amount: `${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/order/{order._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" >\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Orders'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Orders</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setOrders()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrdersList","import { useEffect, useState } from \"react\";\nimport Header from \"./components/layout/Header\";\nimport Footer from \"./components/layout/Footer\";\nimport Home from \"./components/Home\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n//Product Realted Routes\n\nimport ProductDetails from \"./components/product/ProductDetails\";\n\n\n//user routes\nimport Login from \"./components/user/Login\";\nimport Register from \"./components/user/Register\";\nimport Profile from \"./components/user/Profile\";\nimport UpdateProfile from \"./components/user/UpdateProfile\";\nimport UpdatePassword from \"./components/user/UpdatePassword\";\nimport ForgotPassword from \"./components/user/ForgotPassword\";\nimport NewPassword from \"./components/user/NewPassword\";\nimport { loadUser } from \"./actions/userActions\";\n\n//Vedor Routes\nimport VendorLogin from \"./components/vendor/VendorLogin\";\nimport RegisterVendor from \"./components/vendor/RegisterVendor\";\nimport VendorProfile from \"./components/vendor/VendorProfile\";\nimport UpdateVendorProfile from \"./components/vendor/UpdateVendorProfile\";\nimport { loadVendor, allVendors } from \"./actions/vendorActions\";\n\n//Protected Routes\nimport ProtectedRoute from \"./components/route/ProtectedRoute\";\nimport ProtectedRoutes from \"./components/route/ProtectedRoutes\";\n\n//Build Pc Related Routes\nimport PcBuildd from \"./components/pcbuild/PcBuildd\";\n\n\n//admin or vendor realted routes\nimport Dashboard from \"./components/admin/Dashboard\";\nimport ProductsList from \"./components/admin/ProductList\";\nimport NewProduct from \"./components/admin/NewProduct\";\nimport UpdateProduct from \"./components/admin/UpdateProduct\";\n \n\nimport store from \"./store\";\n\n//cart shippingInfo and order\nimport Cart from \"./components/cart/Cart\";\nimport Shipping from \"./components/cart/Shipping\";\nimport ConfirmOrder from \"./components/cart/ConfirmOrder\";\nimport Payment from \"./components/cart/Payment\";\nimport orderSuccess from \"./components/cart/orderSuccess\";\nimport ListOrders from \"./components/order/ListOrders\";\nimport OrderDetails from \"./components/order/orderDetails\";\nimport OrdersList from \"./components/admin/OrdersList\";\n\n\n\n\n\nimport axios from \"axios\";\n\n//payment\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nfunction App() {\n  //login user will be load instantly when we reload the page\n\nconst[stripeApiKey, setStripeApiKey] = useState('')\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n    store.dispatch(loadVendor());\n    store.dispatch(allVendors());\n\n    async function getStripeApiKey() {\n      const {data} = await axios.get('/api/v1/stripeapi');\n\n      console.log(data.stripeApiKey);\n      setStripeApiKey(data.stripeApiKey);\n    }\n    getStripeApiKey();\n  },[]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/search/:keyword\" component={Home} />\n        <Route path=\"/product/:id\" component={ProductDetails} exact />\n\n\n        <Route path=\"/cart\" component={Cart} exact />\n        <ProtectedRoute path=\"/shipping\" component={Shipping} />\n\n        <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} />\n        <ProtectedRoute path=\"/success\" component={orderSuccess} />\n\n        <ProtectedRoute path=\"/orders/user\" component={ListOrders} />\n        <ProtectedRoute path=\"/order/:id\" component={OrderDetails} />\n        <ProtectedRoutes path=\"/admin/orders\" isAdmin={true} component={OrdersList} exact/>\n\n\n    {/* //we pass stripeApiKey on backend */}\n        {stripeApiKey &&\n         <Elements stripe={loadStripe(stripeApiKey)}>\n          <ProtectedRoute path=\"/payment\" component={Payment} />\n          </Elements>\n           }\n\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/loginvendor\" component={VendorLogin} />\n        <Route path=\"/registervendor\" component={RegisterVendor} />\n\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/userpassword/forgot\" component={ForgotPassword} exact />\n        <Route\n          path=\"/userpassword/reset/:token\"\n          component={NewPassword}\n          exact\n        />\n        <Route path=\"/vendor/update\" component={UpdateVendorProfile} exact />\n        <ProtectedRoute path=\"/user\" component={Profile} exact />\n        <ProtectedRoute path=\"/user/update\" component={UpdateProfile} exact />\n        <ProtectedRoute\n          path=\"/password/update\"\n          component={UpdatePassword}\n          exact\n        />\n\n        <ProtectedRoutes path=\"/vendor\" component={VendorProfile} exact />\n\n        <ProtectedRoutes\n          path=\"/dashboard\"\n          isAdmin={true}\n          component={Dashboard}\n          exact\n        />\n\n        <ProtectedRoutes\n          path=\"/admin/products\"\n          isAdmin={true}\n          component={ProductsList}\n          exact\n        />\n\n        <ProtectedRoutes\n          path=\"/admin/product\"\n          isAdmin={true}\n          component={NewProduct}\n          exact\n        />\n\n        <ProtectedRoutes\n          path=\"/admin/product/:id\"\n          isAdmin={true}\n          component={UpdateProduct}\n          \n        />\n\n        <Route path=\"/pcbuildd\" component={PcBuildd} exact />\n        \n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport { positions, transitions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nconst options = {\n  timeout: 5000,\n  position: positions.BOTTOM_CENTER,\n  transition: transitions.SCALE,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}